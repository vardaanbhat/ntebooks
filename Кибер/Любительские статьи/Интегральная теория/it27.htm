<html>
<meta http-equiv=Content-Type content="text/html;charset=cp866">
<pre>







       █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█
       █ И Н Т Е Г Р А Л Ь Н А Я     Т Е О Р И Я     С О З Д А Н И Я █
       █                                                             █
       █     И С К У С С Т В Е Н Н О Г О     И Н Т Е Л Л Е К Т А     █
       █▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
                              █               █
                              █  Версия  2.7  █
                              █▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
                              █               █
                              █ От 21.05.2007 █
                              █▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█







              Сайт интегральной теории: <a href="http://newpoisk.narod.ru" target="_blank">http://newpoisk.narod.ru</a>







==============================================================================



                                 СОДЕРЖАНИЕ

<a href="#1">1. Введение</a>

                           ─────── Часть 1 ───────

<a href="#2">2. Критические оценки существующих представлений. Идея интегрального подхода</a>

<a href="#3">3. Теория объектов</a>

<a href="#4">4. Объекты 0-го и 1-го порядка</a>

   <a href="#41">4.1. Объекты 0-го порядка</a>

   <a href="#42">4.2. Математические модели объектов 1-го порядка</a>

   <a href="#43">4.3. Физическое представление объектов 1-го порядка</a>

<a href="#5">5. Объекты 2-го порядка</a>

   <a href="#51">5.1. Математические модели объектов 2-го порядка</a>

   <a href="#52">5.2. Объект класса 2.1</a>

   <a href="#53">5.3. Объект класса 2.2</a>

   <a href="#54">5.4. Связь объектов класса 2.1 и 2.2</a>

   <a href="#55">5.5. Переходы решений. Системы объектов 2-го порядка</a>

   <a href="#56">5.6. Классификация объектов 2-го порядка</a>

   <a href="#57">5.7. Физическое представление объектов 2-го порядка</a>

<a href="#6">6. Что такое ИИ. Постановка задачи для ИИ</a>

<a href="#7">7. Объекты 3-го порядка</a>

   <a href="#71">7.1. Принципы построения объектов 3-го порядка. Условие</a>
        <a href="#71">существования универсального интерфейса. Что такое знания</a>

   <a href="#72">7.2. Объект класса 3.1</a>

        <a href="#721">7.2.1. Треугольная схема объекта класса 3.1</a>

        <a href="#722">7.2.2. Полная схема объекта класса 3.1</a>

        <a href="#723">7.2.3. Механизм создания объекта 2-го порядка</a>

        <a href="#724">7.2.4. Объект класса 3.1 и внешний мир. Эволюционный процесс и</a>
               <a href="#724">масштабируемость универсального интерфейса</a>

        <a href="#725">7.2.5. Примеры объектов класса 3.1</a>

   <a href="#73">7.3. Объект класса 3.2</a>

        <a href="#731">7.3.1. Логические домены. Показатель SN, глобальные характеристики</a>
               <a href="#731">и элементарные объекты 2-го порядка</a>

        <a href="#732">7.3.2. Устройство объекта класса 3.2</a>

        <a href="#733">7.3.3. Эволюционный процесс и механизм полуактивной защиты, память</a>
               <a href="#733">стекового типа и косвенная цель. Объект класса 3.2.2</a>

        <a href="#734">7.3.4. Примеры объектов класса 3.2. Недостатки их конструкции</a>

        <a href="#735">7.3.5. Фундаментальные свойства объектов 3-го порядка</a>

   <a href="#74">7.4. Объект класса 3.3</a>

        <a href="#741">7.4.1. Идея внутреннего мира объекта класса 3.3</a>

        <a href="#742">7.4.2. Бесконечные логические домены.</a>
               <a href="#742">Центральная теорема и ее следствия</a>

        <a href="#743">7.4.3. Цель объекта класса 3.3</a>

        <a href="#744">7.4.4. Устройство основных узлов объекта класса 3.3.</a>
               <a href="#744">Энциклопедия первичных знаний</a>

        <a href="#745">7.4.5. Путь к цели</a>

        <a href="#746">7.4.6. Процесс построения бесконечного логического домена</a>
               <a href="#746">с заранее заданными свойствами</a>

        <a href="#747">7.4.7. Обзор объектов 3-го порядка. Некоторые прикладные аспекты</a>

   <a href="#75">7.5. Преемственность объектов</a>

<a href="#8">8. Резюме</a>

                           ─────── Часть 2 ───────

<a href="#9">9. Объекты высших порядков</a>

   <a href="#91">9.1. Объекты класса 3.3.2 и 3.3.3</a>

   <a href="#92">9.2. Информационные плагины</a>

   <a href="#93">9.3. Время. Квазирекурсия в средах существования объектов класса 3.3</a>

   <a href="#94">9.4. Нужны доказательства?</a>

<a href="#10">10. Что даст ИИ</a>

    <a href="#101">10.1. Для чего нужен искусственный интеллект</a>

    <a href="#102">10.2. ИИ как неотъемлемый компонент научно-технического прогресса</a>

    <a href="#103">10.3. Свобода и совершенство</a>

    <a href="#104">10.4. Ближняя перспектива</a>

    <a href="#105">10.5. Неразрушающая цель</a>

<a href="#11">11. Возможные пути развития нашей цивилизации</a>

    <a href="#111">11.1. Космические корабли будущего. Корабли ли это?</a>

    <a href="#112">11.2. Что день грядущий нам готовит?</a>

                          ───────────────────────

<a href="#12">12. Заключение</a>



==============================================================================



                                <a name="1">1. Введение</a>


Искусственный интеллект. Не так давно он находился в одном ряду со
звездолетами, внеземными цивилизациями и прочими образами будущего, рожденных
воображением писателей-фантастов.

Сегодня фраза "искусственный интеллект" уже почти перестала носить
научно-фантастический характер. Все чаще это словосочетание появляется в
описании новых компьютерных программ и сложных технических устройств.
Все чаще можно слышать утверждение, что при современных темпах роста
производительности компьютеров и совершенствования программного обеспечения,
создание искусственного интеллекта - лишь дело времени.
Но так ли это на самом деле? Не является ли широко распространенное мнение
об искусственном интеллекте как о новой разновидности программ всего лишь
удобным способом рекламы новых технологий, не имеющим к настоящему
искусственному интеллекту никакого отношения?
Да, компьютеры и связанное с ним программное обеспечение всего за несколько
десятилетий совершили колоссальный шаг вперед. Но стали ли мы от этого ближе
к созданию искусственного интеллекта, или хотя бы пониманию принципов его
работы? И возможно ли вообще создать нечто, превосходящее человека и его мозг?
А если и можно, то нужно ли?

Эта работа посвящена поиску ответов на множество подобных непростых вопросов,
возникающих на пути к искусственному интеллекту. В отличие от подавляющего
большинства теорий, создаваемых по принципу "разгадывания" устройства
искусственного интеллекта путем изучения работы мозга, методология данного
труда несколько иная. При изучении сверхсложных систем, к числу которых без
сомнения относится и мозг, нельзя рассчитывать на корректность выводов,
следующих в основном из одних только наблюдений. Поскольку в условиях высокой
сложности, пересекающейся порой с принципиально новыми явлениями, уже просто
невозможно понять что является причиной, а что - следствием. Невозможно
создать теорию работы такой системы, опираясь на классические представления.
Именно поэтому в данной работе основное внимание уделяется фундаментальным
теоретическим построениям, не связанных изначально с какими бы то ни было
конкретными примерами, и созданными на основании очевидных постулатов. Затем
уже результат теории согласуется с опытными фактами, полученными к примеру из
тех же работ изучающих устройство мозга. Наличие предметно-независимого
теоретического фундамента дало ошеломляющие результаты. Удалось получить
исчерпывающие ответы на множество неразрешимых до этого вопросов и значительно
продвинуться в понимании протекания многих процессов, сам факт существования
которых сегодня подвергается сомнению.

Нетрадиционный взгляд на проблему показал полную непригодность классического
(алгоритмического) подхода создания искусственного интеллекта.
Создана новая - интегральная - теория устройства объектов класса
"искусственный интеллект". Из нее следует что искусственный интеллект не
только реален, но и степень его совершенства практически ничем не ограничена.
Поэтому его возможности могут многократно превосходить возможности человека.
При помощи искусственного интеллекта можно решить все глобальные проблемы
человечества на Земле и открыть дорогу к звездам, превратив нашу цивилизацию
в космическую.

Указывается также ряд выводов, позволяющих пролить свет на многие тайны
устройства человеческого организма. Это дает ключ к решению проблем лечения
неизлечимых сегодня болезней, получения неограниченной молодости и в конечном
итоге к преобразованию тела человека в более совершенную форму. В заключении
рассмотрены многие вопросы философского и даже научно-фантастического
характера, выходящие за рамки собственно проблемы ИИ, но имеющие к ней самое
непосредственное отношение.



==============================================================================



                          ─────── Часть 1 ───────



В этой части будут рассмотрены положения интегральной теории, основанные на
строгих доказательствах. Следует отметить что данный материал концептуально
достаточно сложен и требует для своего понимания внимательного прочтения.
В завершении есть пункт <a href="#8">"8. Резюме"</a>, содержащий основные идеи в сжатом виде.



 <a name="2">2. Критические оценки существующих представлений. Идея интегрального подхода</a>


Итак, существующие представления об искусственном интеллекте (далее - ИИ).
Как это ни странно, но несмотря на многочисленность своих приверженцев и
обилия всяческих ресурсов (литературы, форумов, Web-сайтов, конференций и
т.д.) до сих пор нет четкого обоснованного ответа на простейший изначальный
вопрос: "что такое интеллект?". Существует только интуитивное представление о
нем как об аналоге человеческого мозга. Поэтому многие разработчики
компьютерных программ и сложных технических устройств широко пользуются этой
ситуаций, говоря что их разработка обладает ИИ. В связи с этим возникло
множество "прикладных" теорий ИИ, рассматривающих ИИ в основном как одну из
многочисленных ветвей информатики. Соответственно и рассказ об ИИ в этих
работах представляет собой обзор различных специфических алгоритмов. В чем
отличие этих теорий от классической теории алгоритма и методов вычислительной
математики и на каких основаниях их называют теориями ИИ, остается загадкой.

Помимо этого есть работы научно-популярного (больше популярного) характера.
Но там взгляд на ИИ основан не на строгой стройной теории, а на интуитивных
соображениях. А этого, конечно, мало для создания ИИ.

Поскольку теория алгоритма и вычислительная математика - вещи достаточно
серьезные, то постепенно первая ветвь взглядов на ИИ становилась
преобладающей. Настолько преобладающей, что сегодня в глазах большинства ИИ
оказался прочно связан с областью экспертных программ, нейронных сетей,
генетических алгоритмов.... всего и не перечислишь. Однако существует одно
общее свойство, объединяющее их. Алгоритм. В основе всех их лежит алгоритм -
набор инструкций, заложенный в программу ее создателем. Посмотрим насколько
реально отвечает алгоритм требованиям к ИИ, даже в его интуитивном понимании.

Для этого осветим ряд вопросов:

1. Зачем вообще нужны альтернативные подходы создания ИИ.

   В любой области естествознания альтернативные подходы к решению той или
   иной проблемы появляются тогда, когда становится ясно что традиционные
   пути не могут ее решить. Факты, доказывающие это предположение, делятся на
   практические и теоретические. В случае с ИИ можно указать следующие
   замечания существующим путям его создания.

   1.1 Практические факты.

       Прежде чем перейти к их рассмотрению необходимо выяснить что в итоге
       мы хотим получить. Что должно представлять из себя это нечто, под
       названием "искусственный интеллект".
       Когда только все это начинало создаваться, ИИ виделся своим создателям
       ни много ни мало, а как искусственный разум, во всем превосходящий
       разум человека. Немногие, правда, говорили об этом вслух - слишком уж
       грандиозной была затея. Но конечная цель была именно такой. Так было в
       начале. Из этого представления об ИИ мы и будем исходить. Разумеется
       оно далеко не строгое, но чтобы провести критические оценки идей и
       решений в области ИИ, наработанных на сегодня, этого вполне хватит.
       Итак, что реально работающего мы имеем теперь? Конечно же это
       экспертные системы - компьютерные программы, заменяющие человека
       (вернее заранее известный, хотя и довольно сложный, алгоритм его
       работы по решению однообразной задачи) в некоторой отдельно взятой
       узкой области. Большего на сегодняшний день пока нет. Сравнивая теперь
       то что хотели и что имеем, приходим к однозначному практическому
       выводу - ИИ не создан. Да простят создатели экспертных систем, но пока
       мозг человека намного превосходит все их творения. И даже более того -
       за полувековую историю создания ИИ дело так и не сдвинулось с мертвой
       точки. Идеи, лежащие в основе всех экспертных систем, были придуманы
       еще в середине прошлого века. И если они действительно верны, то
       почему от них пока нет практической отдачи (увеличение быстродействия
       и объема обрабатываемой информации не в счет - оно достигается за счет
       улучшения аппаратуры)?

       Всем известно как далеко вперед шагнуло в последнее время
       программирование. Средства Интернета, обилие ресурсоемких графических
       операционных систем и приложений, анимационные компьютерные фильмы и
       игры, графика которых малоотличима от кино, виртуальная реальность -
       вот лишь небольшой перечень атрибутов информационной революции. То,
       что вчера было доступно только узкому кругу профессионалов, сегодня
       можно увидеть где угодно - начиная с рабочих мест сотрудников офиса и
       заканчивая домашними компьютерами. Даже беглого взгляда достаточно
       чтобы понять насколько несоизмерим уровень сегодняшнего программного
       обеспечения и того, что было всего каких-нибудь 10-20 лет назад, не
       говоря уже про более ранние времена.
       Создается стойкое впечатление что принцип работы ИИ не имеет к
       программированию никакого отношения (да и как тут иметь - ведь
       результат работы любой программы предопределен заранее, в то время как
       от ИИ требуется самостоятельно находить изначально неизвестное
       решение). А иначе как объяснить тот колоссальный отрыв в развитии ИИ и
       обыкновенных программ? Ту пропасть, которая день ото дня становится
       все шире и шире. Не слишком ли сильно затянулся переход количества в
       качество?

       Что принципиально нового дали для конечного пользователя современные
       программы ИИ по сравнению с программами типа ЭЛИЗА (не учитывая,
       конечно, рост объема данных и скорости их переработки, полученных за
       счет улучшения аппаратных средств и алгоритмов работы с базами данных,
       не имеющих с ИИ ничего общего)? Ничего. Так же как и 50 лет назад мы
       не видим думающих машин способных успешно работать в автономном режиме
       в реальном (а не виртуальном) мире - основного что должен был дать ИИ.
       Все средства ИИ, что мы имеем сейчас, фактически представляют из себя
       СУБД, работающие с сетевой моделью базы данных и имеющие возможность
       обработки нечетких данных заданного типа. Все это, конечно же,
       совершенно не то что хотелось бы иметь. В чем же причина такого
       застойного состояния ИИ на фоне общего подъема уровня технических
       средств во второй половине 20-го века? Очевидно что возможны лишь две
       причины: либо прогресс в области разработки ИИ идет очень медленно,
       либо он не идет вовсе. Первое маловероятно, так как полвека
       (а серьезно заниматься проблемой ИИ начали сразу после 2-й мировой)
       срок немалый даже для решения сложных задач. За это время можно хотя
       бы если не решить задачу, то уж во всяком случае наметить возможные
       пути ее решения и получить по ним конкретные обнадеживающие результаты.
       Наиболее яркие "ровесники" ИИ - управляемый термоядерный синтез и
       полеты в космос уже дали кое-какие плоды. В УТС хоть и со скрипом, но
       все же был получен положительный энергетический эффект. К дальним
       планетам Солнечной системы и звездам мы еще не полетели, но уже есть
       пилотируемые орбитальные корабли и полет на Луну, автоматические
       межпланетные зонды. То есть прогресс идет, хотя и страшно медленно.
       С ИИ так не получилось: нет не только готового результата, даже
       возможных путей решения как не было, так и нет (все найденные к
       настоящему времени "пути" фактически сводятся к требованию увеличить
       мощность аппаратной части в несколько раз, давая при этом какие-то
       проценты выигрыша в производительности, т.е. все они являются
       экстенсивными). Есть лишь неуклонный рост болтовни, выдающей желаемое
       за действительное. Значит, приходится признать что прогресс ИИ не
       просто близок к нулю, а равен ему.

   1.2 Теоретические факты.

       Если бы основы на которых в настоящее время пытаются построить ИИ и
       вправду содержали зерно истины, то его бы уже "нащупали", т.к. работы
       ведутся достаточно интенсивно. Значит ошибочны именно изначальные
       предположения. "Вот те раз!" - скажут создатели экспертных систем.
       Ведь на этих основах простроены все современные и причем исправно
       работающие компьютерные программы. Совершенно верно. Но они - не ИИ.
       Вот несколько теоретических фактов, показывающих неприменимость
       классического подхода.

       <a name="121">1.2.1</a> Для любого механизма можно построить программный эмулятор. А
             любая программа представляется в виде алгоритма. Таким образом
             все сказанное ниже можно распространить на алгоритм в любой его
             форме - аппаратной или программной.

             При переходе механизм->эмулятор особое внимание следует обратить
             на то, что в эмуляторе отражаются только те свойства механизма,
             что намеренно создавались его конструкторами. Например эмулятор
             микропроцессора отражает его способность обрабатывать данные, но
             никак не химический состав, механические особенности (твердость,
             масса, пространственная конфигурация) и т.д.. Поскольку все без
             исключения свойства реального материального объекта учесть
             невозможно (хотя бы уже из-за ограничений, накладываемых
             квантовой механикой) и учитывая что абсолютно все технические
             устройства появляются сперва как математическая модель в голове
             своего создателя, то с точки зрения алгоритма работы устройства
             переход механизм->эмулятор справедлив. Истинное поведение
             механизма, формируемого всеми его свойствами, при этом может
             отличаться от поведения его математической модели (что и
             учитывается в интегральной теории). Однако в классических
             представлениях об ИИ как о некой программе в любом случае
             рассматривается именно математическая модель объекта - алгоритм
             работы его эмулятора. Поэтому ограничения, присущие алгоритму,
             полностью сохраняют свою силу при анализе классических методик
             создания ИИ.

             Посмотрев определение алгоритма (например в энциклопедическом
             словаре по математике), видим что он состоит из 7-ми частей:

             - множество исходных данных
             - множество результатов
             - множество промежуточных результатов
             - правило начала
             - правило переработки
             - правило окончания
             - правило извлечения результата

             Пока все множества и правила конечны все работает прекрасно. Но
             рассмотрим предельный случай - когда мощности указанных
             множеств (т.е. число их элементов) бесконечны. Что тогда мы
             будем иметь? Теоретически вроде бы ничего существенного не
             происходит - скажем правило переработки типа y=x+1 будет
             выполняться одинаково, в не зависимости от того бесконечно
             количество чисел x или нет. Но вот на практике все далеко не так
             гладко. Алгоритм должен кто-то выполнять. Обычно этим занимается
             компьютер - конечная система. В результате чего возникает
             ограничение на x и y. Очевидно что все эти соображения легко
             переносятся с простых формул на более сложные правила начала,
             переработки и окончания. Так что никакой бесконечностью на
             практике и не пахнет. Для обычных программ этого и не нужно -
             число комбинаций состояний памяти современного компьютера
             настолько велико, что с легкостью позволяет решать любые задачи
             такого типа. Но с ИИ такой номер уже не проходит - изначально
             нацеленный на объятие всего внешнего мира (поскольку от него
             требуется умение решать произвольную задачу), который как
             известно бесконечен, он требует предоставления ему бесконечных
             ресурсов. И как бы ни было велико число возможных состояний
             компьютера - по сравнению с бесконечностью оно ничто. Таким
             образом ИИ просто не может быть универсальной программой - не
             хватит ни материальных, ни временнЫх ресурсов для создания
             компьютера способного такую программу переработать (да и создать
             саму программу - тоже).

       <a name="122">1.2.2</a> Второе принципиальное ограничение, не позволяющее создать ИИ на
             классических основах - ограничение множества исходных данных и
             результатов по типу элементов. Простейший пример -  программа
             предназначенная для обработки целых чисел. Ни под каким соусом
             ее невозможно "заставить" обрабатывать данные другого типа -
             комплексного, символьного и т.д.. Подобная жесткость входа и
             выхода программы не дает возможности сделать ее восприимчивой к
             типам данных, не предусмотренными ее создателями. Но можно ли
             предусмотреть абсолютно все?!

       <a name="123">1.2.3</a> Особенно туманным является вопрос об изменении одной программы
              другой программой или даже генерации одной программы другой.
              Никто до сих пор еще не решил этой задачи. Вопреки воле своих
              создателей сделанный по такому принципу "ИИ" не генерировал
              никаких новых алгоритмов и, конечно, не мог решить задачу, если
              решение не было известно его создателям. Смотрел на программу
              как на набор данных и только. То есть был подобен обыкновенному
              "неинтеллектуальному" компилятору. Попытки заставить его хоть
              что-то создавать успехом не увенчались. А какой же это
              интеллект, если он не может генерировать своих алгоритмов,
              подобно человеку? Любая программа - это воплощение
              определенного круга идей ее создателя. Естественно что она
              просто не в состоянии оперировать тем, что выходит за их рамки.
              И это третий непреодолимый барьер на пути к звезде ИИ.

       Таким образом ИИ невозможно сделать по принципу универсальной
       программы в которой все заложено заранее. Но на существующих подходах
       сделать его самообучающимся также невозможно. Причина этому - сама
       постановка задачи ИИ, в корне отличающаяся от постановки задачи
       создания обычных программ. Принцип работы всех программ опирается на
       математический аппарат (булева алгебра, логика, что угодно). Работает
       же матаппарат только с объектами, свойства которых известны заранее,
       уже на этапе постановки задачи, поскольку невозможно оперировать с
       объектами если неизвестно что они собой представляют. Отсюда и
       фиксированность множеств входа и выхода программы, жесткость логики ее
       работы. Следовательно любая программа не должна содержать каких-либо
       неопределенностей, двусмысленностей и т.п.. А смысл ИИ как раз и
       заключен в том чтобы самостоятельно находить и обрабатывать то, что
       неизвестно его создателям. Т.е. задача ИИ неопределенна уже в
       принципе, по своей сути. Матаппарат уже невозможно применить к решению
       задачи ИИ в чистом виде, ввиду его выхода из области своей
       применимости. Необходимо что-то еще.

       Что конкретно пока неизвестно. Теория, которой посвящен данный
       документ, строится на принципе взятия этого "что-то еще" из физической
       среды функционирования ИИ. Т.е. ИИ, рассматриваемой в данной теории,
       неотделим от среды своего существования и не может быть перенесен на
       любой произвольный носитель. В этом заключена идея интегрального
       подхода. ИИ рассматривается именно в его начальной формулировке -
       искусственный разум, во всем превосходящий разум человека. И далее
       упоминая понятие ИИ мы будем подразумевать под ним именно такой облик,
       а не аналог существующих программ с нечеткой логикой, нейронных сетей
       и т.д..

2. Недостатки современных методик проектирования "интеллектуальных" систем.

   Исторически первыми были попытки создать ИИ-программу при помощи различных
   специальных языков программирования. Это были функциональные языки
   (например Лисп), языки логического программирования (Пролог) и некоторые
   другие. Далекие потомки этих языков, сильно изменившись, и теперь не
   оставляют надежд приблизиться к созданию ИИ. Но поскольку ничего нового в
   классическое определение алгоритма эти средства разработки программ не
   добавляют, создать ИИ с их помощью невозможно. Так же как и в случае
   обыкновенных языков, программист придумывает принцип решения задачи
   самостоятельно "от и до".

   Рассматривая классическое определение алгоритма, нельзя не упомянуть о
   появившихся в последнее время различных его "расширениях", таких как
   виртуальные нейронные сети, генетические и "мягкие" алгоритмы и т.д. и
   т.п.. В основе всех этих устройств лежит следующая идея.

   Программа A меняет данные в некоторой области B. Программа C
   интерпретирует содержимое области B не как данные, а как набор исполняемых
   кодов (или как их чаще называют - правил) - возникает программа D.
   Имеется также обратная связь между результатами выполнения программы D и
   программой A. В результате чего появляется возможность направленного
   изменения области B.

   В реальных системах "искусственного интеллекта" все, конечно же,
   происходит намного сложнее: код программы A также может быть сгенерирован
   другой программой. Та, в свою очередь, сгенерирована следующей и т.д.
   (в этом случае происходит построение т.н. метаправил - правил управления
   правилами). Можно сгенерировать сразу несколько областей B и затем
   комбинировать их содержимое, отбирая и опять скрещивая наиболее
   перспективные комбинации самым затейливым образом (на этом, в частности,
   основана работа генетических алгоритмов). Обратная связь также устроена
   далеко не тривиально.
   Одним словом на сегодня придумано уже столько различных путей
   использования указанного принципа работы системы ABCD, что всего и не
   перечислить. Однако....

   Однако система ABCD не имеет никаких принципиальных преимуществ перед
   обычными алгоритмами! Она имеет те же самые ограничения, что и "простые"
   алгоритмы. Например функционирование системы ABCD в рамках конечного
   устройства (компьютера) не позволяет упразднить пункт <a href="#121">1.2.1</a>. И даже
   наоборот, присутствие дополнительных программ (в простейшем случае - A и
   обратной связи) способствует только уменьшению свободного места для
   размещения C и D. За рамки определения алгоритма ни одна программа системы
   ABCD также не выходит. Программа A рассматривает программу D как набор
   данных - область B. Об каком-то "осмысленном понимании" логики работы D
   программой A говорить нельзя. Просто работает принцип обратной связи
   "горячо-холодно", только и всего.

   Пункт <a href="#122">1.2.2</a>, ограничение по типу элементов. Существование процесса
   генерирования правил еще не говорит о том что эти правила могут иметь
   произвольную структуру. Даже в лучшем случае они могут быть только
   произвольной комбинацией неких "атомарных" правил, уже неделимых далее.
   В худшем - структура комбинации должна придерживаться заранее оговоренного
   шаблона (например структура *.EXE - файла как раз и есть пример
   использования такого рода шаблонов). Иначе программа C попросту не
   "поймет" информации из B, следовательно не появится и программа D. Таким
   образом применение системы ABCD не отменяет ограничение по типу элементов.
   Более того, ситуация в большинстве случаев лишь усугубляется, поскольку
   в реальных системах любое правило, в т.ч. и "атомарное" на самом деле
   состоит из элементарных инструкций для микропроцессора. Тем самым делается
   дополнительное сужение области возможных команд и их комбинаций.

   Ну и наконец вопрос генерации программы программой - пункт <a href="#123">1.2.3</a>.
   Очевидно что ни о какой произвольности в генерации программы D программой
   A не может идти и речи. Система ABCD никогда не сможет выйти за пределы
   круга, очерчиваемого "атомарными" правилами и их комбинациями, доступными
   для корректной интерпретации программе C. И если решение задачи не входит в
   этот круг, то можно довольствоваться только наиболее близким приближением.
   Т.к. создатель системы ABCD не знает заранее как решить задачу, то общем
   случае он не сможет создать такие "атомарные" правила, метаправила и
   шаблоны их структур, что позволили бы гарантированно достичь цели.
   Если же решение известно создателю ABCD изначально, то "интеллектуальное"
   предназначение системы теряет силу, поскольку "смысл ИИ как раз и заключен
   в том чтобы самостоятельно находить и обрабатывать то, что неизвестно его
   создателям".

   Подводя итог оценки "интеллектуальных" систем на алгоритмической основе
   было бы не совсем правильно говорить об их полной бесперспективности.
   Конечно ИИ на таких принципах построить нельзя, но применение этих
   устройств в тех областях, где требуется выбирать лучшее решение из массы
   возможных работоспособных, вполне оправдано. Но настоящий ИИ остается для
   них все еще недосягаемым. Вообще же эти системы следует рассматривать в
   качестве переходного этапа от алгоритмов к ИИ.

3. Сети "разума"

   Широко распространено мнение что компьютерные сети будто обладают некими
   пропульсивными преимуществами перед одиночными компьютерами. Так ли это?
   Любая компьютерная сеть - это группа обычных компьютеров, соединенных
   друг с другом линиями связи. Поскольку искажения смысла информации при ее
   передаче от одного компьютера к другому не происходит, то следовательно
   линии связи никак не участвуют в ее логической обработке.
   Поэтому получается что компьютерная сеть из N компьютеров (каждый из
   которых имеет один процессор и один накопитель памяти) эквивалентна одному
   большому компьютеру с N процессорами и N накопителями памяти. А он в свою
   очередь - обычной однопроцессорной машине с одним носителем памяти,
   поскольку мы можем программным путем проэмулировать неограниченное число
   процессоров и накопителей. Т.е. с точки зрения алгоритма сеть и компьютер
   эквивалентны. Есть, конечно, рост производительности сети по обработке
   информации по сравнению с одиночным компьютером. Но если для ИИ нужны
   бесконечные ресурсы (см. пункт <a href="#121">1.2.1</a>), то не все ли равно в какое конечное
   число раз повысится быстродействие?
   Преимущества сети выражаются лишь во влиянии на распределенную в сети
   информацию множеством пользователей. Однако не нужно забывать что основной
   принцип ИИ - решать задачи без помощи людей.

4. Зачем нужен сам искусственный интеллект.

   Есть веские основания полагать что ИИ - не просто новое научно-техническое
   достижение, а гораздо более глобальное начинание. Точно также как
   появление механических двигателей полностью преобразовало транспортную
   систему мира, так и появление ИИ вызовет коренной перелом в жизни
   человечества. Только с его помощью можно ожидать получение неограниченной
   молодости и окончательную победу над болезнями. Этот вывод вытекает из
   анализа ситуации сложившейся сейчас в медицине. Ситуация тут примерно та
   же что и с самим ИИ - гарантированно лечатся только "простые" болезни. Для
   получения бессмертия необходим качественный рывок вперед, предпосылки к
   которому сейчас пока отсутствуют. Освоение космоса, экологическая проблема
   и пр. - того же поля ягоды. И если рассматривать эти направления как
   аналогию транспортных средств, то ИИ - их двигатель. Без собственной
   мощной силовой установки, на одних только усилиях людей, они не преодолеют
   тот крутой подъем что встал на пути к той же неограниченной молодости.
   Нужны доказательства - проведите статистику за последние 10-20 лет и
   оцените ее с критической стороны. Маловероятно что вы сможете обнаружить
   значительный прогресс, подобный тому что был на более ранних этапах
   развития этих тем.

Так может, ИИ просто невозможен? Но ведь в живой природе (включая человека),
тем не менее, мы находим все то, что хотим получить от ИИ (по крайней мере
пока).... А так как никакого волшебства в устройстве животных и растений нет,
то значит и ИИ возможен. Все это наводит на мысль о том, что с помощью
традиционного подхода ИИ не сделаешь. В двух словах предлагаемый вариант
создания ИИ таков: нужно отказаться от попыток сделать ИИ на основе одних
только алгоритмов, и дополнительно использовать для его создания такие
свойства нашего мира, которые невозможно описать алгоритмически. Такой подход
предполагает гораздо более общее, чем общепринято, рассмотрение проблемы ИИ.
Оно выходит далеко за рамки программирования и затрагивает практически все
области естествознания. Это и дало название подходу - интегральный, т.е.
всеобъемлющий, многогранный.



==============================================================================



                             <a name="3">3. Теория объектов</a>


Теория объектов является фундаментом всей интегральной теории и, между прочим,
дает базу для подготовки ответов на многие фундаментальные вопросы философии:
отражение, субъективизм и т.п..

Начнем с обозначения понятия Мир.

Мир - нечто, неопределяемое никаким другим образом, кроме того, что его
невозможно определить. Дать интуитивное понятие что такое Мир оказывается
возможным только после введения нижеследующего постулата.

ПОСТУЛАТ: Мир произвольным образом делится на объекты.

Определение О1: ОБЪЕКТ - это часть Мира.

Определение О2: СВОЙСТВО объекта - это признак его отличия от других объектов.
                Т.е. свойство объекта образует границу объекта.

Следствие С1: Объекты, все свойства которых равны, являются одним объектом.

Определение О3: Объект, производящий деление Мира на объекты, - НАБЛЮДАТЕЛЬ.

Следствие С2: Из ПОСТУЛАТА и О2 следует что свойства объектов могут меняться.

Определение О4: Объект Y управляет объектом X, если Y может изменить любое
                свойство X.

Пояснение 1: Изменение свойств любого объекта - это следствие различия 2-х
             делений Мира, т.е. изменение свойств объекта и само разбиение на
             объекты имеет смысл только для Наблюдателя. Поэтому для разных
             Наблюдателей, Мир, по О2, не может быть поделен на объекты
             совершенно одинаковым образом. Очевидно, при изменении свойств
             объекта меняется и сам Наблюдатель.
             Например введение понятия скорости тела требует введения понятия
             системы отсчета. Но сама система отсчета также является объектом,
             следовательно имеет свойства. Т.е. само ее существование имеет
             место только потому что она отличается от других объектов. Эти
             отличия, в свою очередь, требуют введения в рассмотрение еще
             одну систему отсчета. И т.д., до Наблюдателя.

Следствие С3: Из О4 и С1 следует что Наблюдатель не может управлять сам собой,
              т.к. не может изменить свое свойство делить Мир (по О3), т.е.
              то, что и отличает Наблюдателя от всех остальных объектов.

Следствие С4: Из О4, С3 и ПОСТУЛАТА следует что Наблюдатель может управлять
              любым объектом, кроме самого себя.

Пояснение 2: По С3 и О1 Наблюдатель не может исчезать, как и вновь возникать
             относительно самого себя. С4 не противоречит ПОСТУЛАТУ, поскольку
             ПОСТУЛАТ не налагает условий на механизм деления (это может быть
             множество всех возможных Наблюдателей).

Следствие С5: Из С1 и О3 следует что Наблюдатель содержит свойства всех
              объектов.

Пояснение 3: С5 говорит о том, что Наблюдатель не различает два объекта как
             отдельные, если они содержат свойство отличия друг от друга, но
             отличаются от Наблюдателя одинаковым образом. Аналогично для
             Наблюдателя не существует объектов, неотличимых от него самого.
             Поэтому если, к примеру, Наблюдатель делит Мир на 10 объектов, то
             он содержит не менее 10 свойств.

Определение О5: Свойство называется фундаментальным, если его невозможно
                изменить. В противном случае свойство эквивалентно.

Следствие С6: Из О5, С4 следует что любое эквивалентное свойство представимо в
              виде произвольной комбинации других эквивалентных свойств.

Следствие С7 (определение управления):
              - Из О4, С5, О5, С4 следует что объект Y управляет объектом X
                тогда и только тогда, когда объект Y содержит все
                эквивалентные и фундаментальное свойства, а объект X не
                содержит фундаментального свойства.
              - Из С6, С4, С5 следует что объект Y не может управлять объектом
                X, если существует 3-й объект Z, содержащий все свойства
                объектов X и Y.

Определение О6: Объект, не обладающий ни одним свойством, находится в
                ПОТЕНЦИАЛЬНОЙ форме, в противном случае объект находится в
                ФИЗИЧЕСКОЙ форме.
                Объект, обладающий всеми возможными свойствами, находится в
                ПОЛНОЙ форме. Очевидно, что находящийся в полной форме объект,
                одновременно находится и в физической форме.

Следствие С8: Из С6, О6 следует что полные формы всех объектов одинаковы.

Для теории искусственного интеллекта важное значение имеет понятие порядка
объекта и его уровня. Эти два понятия вводятся следующим образом:

1. Берется замкнутая система. Т.е. набор объектов с одним (или более)
   одинаковым свойствами. Например в физике таким свойством служит
   термодинамическая обособленность каждого объекта системы от объектов
   других систем.
2. В этой системе выделяется Наблюдатель.
3. Наблюдатель определяет множество управляемых объектов - M1.
4. Наблюдатель помещается в другую замкнутую систему (отличную от 1-й).
5. Наблюдатель опять выделяет множество управляемых объектов - M2.
6. И т.д.. В итоге получаем набор множеств M1, M2, ... объектов порядка N-1,
   где N - порядок Наблюдателя.
7. Объект, выполняющий пункты 1, 2, 4, 6 - Наблюдатель порядка N+1.

Определение О7: Объекты являются объектами одного ПОРЯДКА, если они порождены
                одним Наблюдателем.
                Объекты одного порядка отличаются от Наблюдателя различным
                образом. Эти различия называются различиями в УРОВНЕ объектов
                (также иногда в качестве синонима мы будем употреблять слова
                МОДИФИКАЦИЯ, КЛАСС).

Пояснение 4: Пункт 7 не противоречит пункту 6, поскольку Наблюдатель порядка
             N+1 выделяет больше свойств в объектах, чем Наблюдатель порядка
             N. Забегая вперед отметим, что например Наблюдатель 3-го порядка
             может "видеть" в переменной x (объекте 1-го порядка) часть
             программы (объект 2-го порядка). А Наблюдатель 2-го порядка
             "видит" в x только данные, т.е. объект порядка не выше 1-го.
             Пункты 1, 2, 4 отражают изменение свойств Наблюдателя порядка как
             N, так и N+1. А само определение О6 - рекурсивно.

Пояснение 5: Выделение Наблюдателем порядка N+1 Наблюдателей порядка N,
             а Наблюдателем порядка N - объектов порядка N-1 аналогично тому,
             как если бы мы в темной комнате фонариками с разной длиной волны
             (ультрафиолет, видимый, инфракрасный диапазон) подсвечивали
             находящиеся в комнате предметы. В лучах разных фонариков одни и
             те же предметы комнаты выглядят совершенно по-разному. Так же и
             разные Наблюдатели "видят" физически одни и те же объекты
             Вселенной в различных ракурсах.

Замечание 1: Теория объектов развита лишь в той мере, в какой это необходимо
             для нужд теории искусственного интеллекта.

Замечание 2: Деление объектов на порядки - это не придуманная нами операция
             для порождения одних объектов другими. Это способ классификации
             уже существующих объектов. Принципиальным отличием данного
             способа от всех существующих является глобальность и
             универсальность применения.
             Он применим абсолютно ко всему, в то время как, скажем, понятие
             размера применимо лишь к объектам обладающим длиной, массы -
             обладающим энергией и т.д. (не нужно забывать что в роли объекта
             может выступать не только физическое тело, но и процесс, любое
             абстрактное построение и т.п.).

Замечание 3: Дальнейшие наши рассуждения будут основываться на вышеизложенных
             положениях, конкретизируя состав совокупностей объектов низших
             порядков (порядок которых лежит в пределах от 0 до 3-х
             включительно). Вполне возможно будущее покажет что такая
             конкретизация окажется и не совсем верной (а может и неверной
             вовсе). Что поделаешь - теория тем и отличается от истины, что в
             ней, возможно, не все верно. Но на ее основе могут быть построены
             новые теории, более близкие к реальности. И так далее.



==============================================================================



                      <a name="4">4. Объекты 0-го и 1-го порядка</a>


                         <a name="41">4.1. Объекты 0-го порядка</a>

По сути дела, объект 0-го порядка введен для придания нашим рассуждениям
формальной полноты и означает отсутствие чего-либо. Математический аналог
- пустое множество.


              <a name="42">4.2. Математические модели объектов 1-го порядка</a>

Объект 1-го порядка представляет собой какую-либо неоднородность, в результате
чего его можно выделить на общем однородном фоне. В нашем мире объектами 1-го
порядка являются различного рода физические неоднородности.

Так как при рассмотрении объекта 1-го порядка нам важен лишь факт его
существования и принцип деления на отдельные элементы, а не природа его
физического устройства и происхождения, то для его полного описания
необходимо и достаточно переменной, представляющей из себя точку в
многомерном пространстве: X(x1,x2,...,xn), где x1,x2,...,xn - координаты,
относительно которых идет описание физической неоднородности.

Если объект 1-го порядка описывается n-мерной переменной, то его можно
представить как совокупность более мелких объектов 1-го порядка, описываемых
m1, m2,..., mi - мерными переменными, причем m1+m2+....+mi = n. Затем и эти
объекты можно представить как совокупность еще более мелких объектов 1-го
порядка. В результате в конце мы придем к объектам 1-го порядка, описываемых
одномерной переменной. Можно пойти еще дальше и представить в виде набора
двоичных переменных (принимающих только 2 значения: 0 или 1). Эти объекты уже
невозможно поделить, и поэтому мы назовем их МАТЕМАТИЧЕСКИ ЭЛЕМЕНТАРНЫМИ
объектами 1-го порядка. Необходимо отметить важное отличие математически
элементарных объектов от ФИЗИЧЕСКИ ЭЛЕМЕНТАРНЫХ. Физически элементарный объект
1-го порядка представляет собой лишенную сложной внутренней структуры
физическую неоднородность. В противоположность математически элементарным
объектам Физически элементарный объект нельзя делить до двоичного
теоретического предела, даже если он и описывается многомерной переменной,
ввиду отсутствия множества составляющих его элементов.

Введем понятие ЧИСЛА СОСТОЯНИЙ математически элементарного объекта 1-го
порядка. Поскольку описывающая его одномерная переменная может принимать
различные значения, то число состояний математически элементарного объекта
1-го порядка будет равно количеству этих значений. Совокупность таких
значений образует множество возможных состояний объекта 1-го порядка.
Каждый элемент этого множества - одно из возможных состояний объекта 1-го
порядка. Множество может быть конечным (имеет конечное число элементов),
счетным (число элементов равно числу натуральных чисел) или несчетным (число
элементов равно числу дробных чисел на отрезке 0..1).

Сложность объекта 1-го порядка можно оценить мощностью множества (напомним
что мощностью множества называется число его элементов, чем больше это число
тем мощнее множество) всех его возможных состояний. Представим объект 1-го
порядка X как совокупность математически элементарных объектов x1, x2,..., xn.
И пусть, например, x1 может принимать k1 возможных состояний,
x2 - k2,...,xn - kn. Тогда X может принимать k1*k2*...*kn возможных состояний.
Поэтому мы можем сказать что объекту 1-го порядка сопоставляется одноименное
множество X с мощностью |X|=k1*k2*...*kn. Введя одноименные множество
состояний для каждого математически элементарного объекта x1, x2, ..., xn мы
можем записать мощность множества X как произведение мощностей множеств
x1, x2, ..., xn: |X|=|x1|*|x2|* ... *|xn|
Этой формой записи мы и будем пользоваться в дальнейшем. Величину |X| станем
называть УРОВНЕМ объекта 1-го порядка.

Из сказанного очевидно, что физически неэлементарный объект 1-го порядка
можно представить в виде совокупности 2-х и более объектов 1-го порядка.
Справедливо и обратное: любой объект 1-го порядка может быть частью другого,
более крупного объекта 1-го порядка.

Какие условия необходимы для существования объектов 1-го порядка? Так как
объект 1-го порядка - это физическая неоднородность, то следовательно для его
существования необходимо и достаточно чтобы та часть Мира, в которой он
находится - его СРЕДА ФУНКЦИОНИРОВАНИЯ - была анизотропной.

Графически объект 1-го порядка будем представлять или в виде прямоугольника с
одинарной линией и названием этого объекта внутри него, например:

                                     ┌─┐
                                     │A│
                                     └─┘

Или в виде квадратика с названием объекта около него:

                                      A

                                      ▀

Очевидно что модификаций у объекта 1-го порядка всего одна, они различаются
только своим уровнем, отсюда и краткое обозначение объекта 1-го порядка
- объект класса 1.1. Объект 1-го порядка - это физический способ записи
переменной - абстрактного математического понятия.


             <a name="43">4.3. Физическое представление объектов 1-го порядка</a>

Атомы, молекулы, кванты света, температура, скорость, сила, энергия...
Все то, характеристики которого можно описать многомерной переменной - объект
1-го порядка. Все без исключения наблюдаемые нами объекты 1-го порядка (даже
кварки) с точки зрения современной науки имеют сложную внутреннюю структуру,
а значит не являются физически элементарными. Удастся ли когда-нибудь
обнаружить физически элементарные кирпичики мироздания, или же ряд
"молекулы - атомы - элементарные частицы - кварки - ???" бесконечен? Точно
этого мы пока не знаем. Однако выводы, вытекающие из теории объектов 3-го
и высших порядков позволяют склонить чашу весов в сторону бесконечности.

В повседневной жизни (и в частности в программировании) при помощи объектов
1-го порядка хранятся данные. Однако нельзя в общем виде приписывать объект
1-го порядка каким-нибудь там значениям ячеек в памяти компьютера. Объектом
1-го порядка может быть любая неоднородность - расположение звезд на небе,
смена дня и ночи, шум падающей воды и т.д.



==============================================================================



                            <a name="5">5. Объекты 2-го порядка</a>


                <a name="51">5.1. Математические модели объектов 2-го порядка</a>

Итак, объект 1-го порядка - это физическая неоднородность, описываемая через
многомерную переменную. Но есть в нашей Вселенной и такие объекты, которые
нельзя описать с помощью одних только переменных. Например действие всем
известного закона всемирного тяготения, или 2-го закона Ньютона, или закона
Кулона. Одним словом те ситуации, где существует зависимость состояния одних
объектов 1-го порядка от состояния других объектов 1-го порядка. Но раз есть
зависимость, то в общем виде она может стать эквивалентной управлению. Так мы
приходим к объекту 2-го порядка.

Объект 2-го порядка есть процесс преобразования объектов 1-го порядка.
Поскольку состояние объекта 1-го порядка описывается многомерной переменной,
то зависимость состояния одного объекта 1-го порядка от другого можно описать
в виде функции - зависимости значения одной многомерной переменной от другой:

B=f(A), где A - переменная, описывающая исходный объект 1-го порядка, В -
        зависимый объект 1-го порядка. f - функция зависимости.

В общем случае зависимость B=f(A) может носить произвольный характер: функция
f может быть логической (IF...THEN...ELSE), аналитической и пр.. В самом
общем виде функция f - это отображение множества состояний A на множество
состояний B. Каждой совокупности состояний A сопоставляется соответствующая
совокупность (совокупности в случае т.н. неопределенного объекта 2-го порядка)
состояний B. С учетом возможности разложения объектов A и B на математически
элементарные составляющие (A=(a1, a2,..., an); B=(b1, b2,..., bm)) очевидно
что функция f представима в виде нескольких функций, отражающих зависимость
элементарных объектов:
f={f1, f2, ..., fm}, где b1=f1(..., ai, ....), b2=(..., aj, ...), .....
Уровень объектов A и B: p=|A| и q=|B| может быть любым.

В дальнейшем мы будем также рассматривать т.н. ИНТЕРПРЕТАТОР - механизм
реализующий функцию f. Не следует смешивать понятия интерпретатора и функции
зависимости. Интерпретатор - это реально существующий физический механизм, в
то время как функция - лишь описание его проявления на объектах 1-го порядка.
Обозначать интерпретатор будем через букву I: например B=I(A).

Из теории объектов (а именно из существования фундаментальных свойств в
объектах более высокого порядка относительно объектов более низкого порядка)
следует что круг необходимых и достаточных свойств среды функционирования
объектов порядка N, расширится при переходе к объектам порядка N+1. И если
для объектов 1-го порядка среда функционирования должна была обладать
анизотропностью, то для существования объектов 2-го порядка нужно что-то еще.
Что они должны из себя представлять? По всей видимости в результате их
введения должна появиться возможность создавать интерпретатор. Интерпретатор
у нас состоит из 2-х частей: физической - собственно механизм преобразования,
и логической - функции, описывающей процесс преобразования. Отсюда следует
что должно появиться 2 новых требования к среде функционирования:

1) Между объектами 1-го порядка А и В должно существовать взаимодействие

2) Это взаимодействие должно описываться неизменяющимися функциями f - т.е.
   они не должны носить, например, случайный характер (взаимодействие
   существует, но описать его мы не в состоянии, поскольку любая функция
   строится по определенному алгоритму, а значит уже не случайна)

Существования взаимодействия между A и B в рамках объекта 2-го порядка
означает возможность изменения свойств B в зависимости от состояния A.

Последнее вызывает необходимость описывать свойства B через свойства A.
Получается что A и B должны обладать эквивалентными свойствами. Необходимость
наличия эквивалентности A и B совсем не говорит о том что все свойства
рассматриваемых объектов 1-го порядка должны быть эквивалентными - вполне
возможно что они будут содержать и фундаментальные относительно друг друга
свойства. Просто в этом случае наличие фундаментальных свойств в A и B не
учитывается и они не фигурируют в функции B=f(A) (более подробно об
эквивалентных и фундаментальных свойствах объектов можно прочитать в главе
<a href="#3">"3. Теория объектов"</a>).

Рассмотрим случаи т.н. ОБЩИХ и СИНХРОННЫХ осей. Если многомерные переменные,
соответствующие объектам 1-го порядка A и B, имеют вид
A(a1, a2, ..., c, an, an+1, ...) и B(b1, b2, ..., c, bn, bn+1, ...),
то c - общая ось. Если значения A и B на оси c всегда равны, то ось c -
синхронная ось. Так как значения объектов A и B на синхронной оси всегда
равны, то она является неинформативной - ее всегда можно убрать из
рассмотрения безо всякого ущерба.

Введем понятие ПРИНЦИПА СУПЕРПОЗИЦИИ - когда на состояние каждого физически
элементарного объекта 1-го порядка могут одновременно влиять 2 или более
объекта 2-го порядка:

                           A ■───f1────────>■<──┐
                                            C   │
                           B ■───f2─────────────┘

A, B, C - объекты 1-го порядка. f1, f2 - функции зависимости состояния C от
A и B. C=g(f1(A); f2(B)). Функция g служит т.н. УРАВНЕНИЕМ СВЯЗИ и определяет
суперпозицию действия функций f1 и f2 на C, например
C=g(f1(A);f2(B)) = f1(A)+f2(B) или C=g(f1(A);f2(B)) = f1(A)*f2(B). Уравнение
связи также является объектом 2-го порядка, но не совсем обычным. Оно
показывает какие свойства среды функционирования являются общими для некоторых
объектов 2-го порядка. Например в нашем мире уравнением связи служит операция
"+". Суммарное воздействие на элементарную частицу электрических, магнитных,
гравитационных и других полей от нескольких источников рассчитывается как их
геометрическая сумма (как сумма соответствующих векторов). Аналогичным образом
обстоит дело и с сложением сил, скоростей, импульсов и т.д.. Однако могут
существовать и такие миры (за пределами нашей Вселенной), где уравнение связи
имеет совершенно другой вид (ведь вид функции зависимости, порождаемый
интерпретатором объекта 2-го порядка, может носить отнюдь не только
аналитическую форму).

Небольшое, но важное отступление: существование принципа суперпозиции не
является неотъемлемым свойством системы из нескольких объектов 2-го порядка.
Более того, сам факт существования какой-либо связи между работой нескольких
объектов 2-го порядка выходит за пределы теории объектов 2-го порядка! Данное
ограничение распространяется на все случаи совместного рассмотрения работы
объектов 2-го порядка. Это может быть система из нескольких объектов 2-го
порядка (наподобие объединения в систему отдельных уравнений). Возможно также
что в функции описания интерпретатора I(A) значения переменных
a1, a2, ... ,an будут зависеть друг от друга, т.е. опять возникает система
уравнений вида a1=a1+a2; a2=a5-a10+a3*a1; a3=a4+a6; и т.д..
Подробное рассмотрение явления взаимосвязи объектов 2-го порядка, приводящее
к появлению эффектов подобных принципу суперпозиции, будет подробно
рассмотрено в теории объектов 3-го порядка (свойство универсального
интерфейса). В текущей же главе <a href="#5">"5. Объекты 2-го порядка"</a> указанная поправка
несущественна. В ней, рассуждая про системы объектов 2-го порядка, мы будем
подразумевать наличие принципа суперпозиции как нечто само собой разумеющееся.

Аналогично понятиям математически и физически элементарных объектов 1-го
порядка введем понятия математически и физически элементарных объектов 2-го
порядка.

МАТЕМАТИЧЕСКИ ЭЛЕМЕНТАРНЫЙ объект 2-го порядка. Как известно любая сложная
функция разлагается на ряд простейших неделимых операций. Например любой
алгоритм - это набор всего лишь 2-х простейших операторов: присвоения (:=),
и логического условия (IF THEN) производящего переход в определенное место
алгоритма (по умолчанию на следующий оператор). И набора операций обработки
данных, являющихся математическими операциями. Однако любая математическая
операция (умножение, деление, возведение в степень и т.д. и т.п.) имеет в
своей основе операцию сложения. Одним словом для каждого вида зависимостей
существует базовый набор элементарных компонент. Следовательно функция любого
объекта 2-го порядка эквивалентна определенной совокупности своих
элементарных компонент - математически элементарных объектов 2-го порядка.

ФИЗИЧЕСКИ ЭЛЕМЕНТАРНЫЙ объект 2-го порядка. В физической реальности как
правило мы не имеем возможности дробить любой произвольный объект 2-го порядка
на математически элементарные составляющие. На каком-то шаге явление
зависимости между объектами 1-го порядка (тоже как правило неэлементарных)
перестает быть набором способных к автономному физическому существованию
компонент. Мы получаем физически элементарный объект 2-го порядка.
Математически он может быть неэлементарен. Существенно: участвующие в работе
физически элементарного объекта 2-го порядка объекты 1-го необязательно
физически элементарны.

Интерпретатор. Ядро объекта 2-го порядка, содержащее неописываемые
многомерными переменными свойства. Каково его реальное внутреннее устройство?
Вряд ли мы когда-нибудь дадим исчерпывающий ответ, сумеем только описать его
при помощи некой зависимости - функции f, построенной на элементарных
операциях, также в свою очередь являющихся механизмами зависимости, хотя и
более простыми. Например функция B=10*A представима как
B=A+A+A+A+A+A+A+A+A+A, а операция "+" и есть та самая элементарная операция
- простейший неделимый далее механизм зависимости. Но для описания принципов
работы объектов 2-го порядка, нам в общем-то и не нужно знать их реальное
внутреннее устройство. Математического описания функции f вполне достаточно
(ситуация аналогична той, что была при рассмотрении объектов 1-го порядка,
когда при создании математической модели мы не учитывали его реальное
устройство). Математическую модель интерпретатора (т.е. функцию f,
рассмотренную выше) следует рассматривать как функцию вида B=I(A), где
A - входной объект 1-го порядка, B - выходной объект 1-го порядка.
Причем A1, A2, ... , Aq - возможные состояния объекта A, q=|A|
       B1, B2, ... , Bp - возможные состояния объекта B, p=|B|

Существуют 2 разновидности объекта 2-го порядка: объект класса 2.1 и объект
класса 2.2 (остальные схемы являются их сочетанием). Рассмотрим их подробнее.


                          <a name="52">5.2. Объект класса 2.1</a>

Объект класса 2.1 возникает когда A=B, а зависимость принимает вид A=f(A).
Графически объект класса 2.1 можно изобразить следующим образом:

                                  ┌───┐
                              ┌─>─┤ A ├─>─┐
                              │   └───┘   │
                          ┌---┼-----------┼---┐
                          | ╔═╧═══════════╧═╗ |
                          | ║       I       ║ |
                          | ╚═╤═══════════╤═╝ |
                          | ┌ ┼ ─ ─ ─ ─ ─ ┼ ┐ |
                          | | │   ┌───┐   │ | |
                          | | └─>─┤ C ├─>─┘ | |
                          | |     └───┘     | |
                          | └ ─ ─ ─ ─ ─ ─ ─ ┘ |
                          └-------------------┘

Символы "A" и "С" обозначают объекты 1-го порядка. Символ "I" обозначает
интерпретатор объекта 2-го порядка - механизм, обеспечивающий изменение
объекта 1-го порядка, стоящего у него на выходе, на основе информации
получаемой от объекта 1-го порядка, стоящего у него на входе.

Объект 1-го порядка "C" является вспомогательным и служит для построения
функции A=I(A) (либо B=I(A) для случая объекта класса 2.2 - см. ниже).
Он может как существовать, так и отсутствовать. В общем случае ничего нельзя
сказать ни о размерности пространства в котором он существует, ни о |C|.
Объект C является подсистемой интерпретатора и может быть невидим для
стороннего наблюдателя. В принципе его можно рассматривать как совокупность
промежуточных переменных алгоритма работы интерпретатора.

Причины, по которым происходят изменения объекта A, лежат за пределами теории
объекта 2-го порядка и мы рассматривать их не будем.

Объект класса 2.1 описывается уравнением A=I(A). Решения этого уравнения
(если они существуют) представляют из себя набор определенных состояний
объекта A. Таким образом, для внешнего наблюдателя этот случай можно в
принципе свести к объекту 1-го порядка C, состоящего из набора решений.

Приведем небольшой пример.

Дано:

   A(a1,a2)
   I(A)=(a1*a1-a1+1,a2*a2)
   a1=(0,1,2,3,4,5)
   a2=(0,1,2)

Найдем решения: нужно решить уравнение A=I(A). Для этого составим
такую систему уравнений:

   ┌
   │a1=a1*a1-a1+1
   ┤
   │a2=a2*a2
   └

Решив эту систему найдем следующие корни:

   a1=(1)
   a2=(0,1)

Таким образом объект A может принимать 2 состояния:

   A(1,0)
   A(1,1)

Следовательно его можно без потери информативности для внешнего наблюдателя
заменить объектом 1-го порядка C, принимающем 2 возможных состояния:
C(1,0) и C(1,1) (подробнее о свойствах перехода "объект класса 1.1 -> объект
класса 2.1" см. <a href="#57">"5.7. Физическое представление объектов 2-го порядка"</a>).

Особо обращаем внимание читателя на то важное обстоятельство, что указанные
уравнения не являются рекурсивными вида A(i)=f(A(i-1)),
где A(i-1) - предыдущее состояние, A(i) - текущее состояние.
Т.е. текущее состояние не является следствием предыдущего. Почему это так,
см. <a href="#55">"5.5. Переходы решений. Системы объектов 2-го порядка"</a>.

Обобщением объектов класса 2.1 являются т.н. КОЛЬЦЕВЫЕ СТРУКТУРЫ, устройство
которых проиллюстрировано:

                              ┌──┐        ┌──┐
                           ┌─>│A │<──────>│B │<─┐
                           │  └┬┬┘        └┬┬┘  │
                           │  ┌┘└┐        ┌┘└┐  │
                           │  └>─┘  ┌>─┐  └>─┘  │
                           │        └┐┌┘        │
                           │        ┌┴┴┐        │
                           └───────>│C │<───────┘
                                    └──┘

В пределе в кольцевой структуре реализуется максимально общий случай
взаимодействия: состояние каждого объекта 1-го порядка находится в зависимости
от любого другого входящего в кольцевую систему объекта 1-го порядка и от
самого себя.
При этом уровни объектов 1-го порядка могут быть неравными: |A|<>|B|<>|C|, а
функции связи любого вида (логические, аналитические и т.п.). В показанном на
рисунке случае каждый объект имеет возможность непосредственного воздействия
на другой объект, но возможны системы в которых реализуется косвенное влияние.
Более подробно теория кольцевых структур будет освещена в <a href="#71">"7.1. Принципы
построения объектов 3-го порядка. Условие существования универсального
интерфейса. Что такое знания"</a>.


                           <a name="53">5.3. Объект класса 2.2</a>

Графическая схема объекта класса 2.2, описываемого функцией B=I(A):

                          ┌-----------------------┐
                  ┌───┐   |   ╔═══════════════╗   |   ┌───┐
                  │ A ├─>─┼───╢       I       ╟───┼─>─┤ B │
                  └───┘   |   ╚═╤═══════════╤═╝   |   └───┘
                          |   ┌ ┼ ─ ─ ─ ─ ─ ┼ ┐   |
                          |   | │   ┌───┐   │ |   |
                          |   | └─>─┤ С ├─>─┘ |   |
                          |   |     └───┘     |   |
                          |   └ ─ ─ ─ ─ ─ ─ ─ ┘   |
                          └-----------------------┘

Соответствующая ему система уравнений:

   ┌
   │b1=f1(a1, a2, ... , an)
   │b2=f2(a1, a2, ... , an)
   ┤       . . . . .
   │
   │bm=fm(a1, a2, ... , an)
   └

Как уже говорилось, в общем случае функции f1, f2, ..., fm могут быть
совершенно произвольными (логическими типа IF..THEN..ELSE, аналитическими и
т.д.). Мощности объектов |A| и |B| также могут быть любыми. Однако с
практической точки зрения эти функции должны быть хотя бы
односторонне-однозначными, а |A|>=|B|, т.е. должно выполнятся условие: при
любом состоянии объекта A соответствующее ему состояние B должно определяться
однозначно. Обратное может быть и неверным. Это требование наглядно
представляется в виде графов:

1. |A|<|B|

                           A1 ■──────────────>■ B1

                           A2 ■──────────────>■ B2

                           A3 ■──────────────>■ B3

                           A4 ■──────────────>■ B4
                              │
                              └──────────────>■ B5

2. |A|=|B|

                           A1 ■──────────────>■ B1

                           A2 ■──────────────>■ B2

                           A3 ■──────────────>■ B3

                           A4 ■──────────────>■ B4

                           A5 ■──────────────>■ B5

3. |A|>|B|

                           A1 ■──────────────>■ B1

                           A2 ■──────────────>■ B2

                           A3 ■──────────────>■ B3

                           A4 ■──────────────>■<──┐
                                              B4  │
                           A5 ■───────────────────┘

4. |A|=|B|, но в интерпретаторе имеются неоднозначные функции.

                           A1 ■──────────────>■ B1

                           A2 ■──────────────>■ B2

                           A3 ■──────────────>■ B3

                              ┌──────────────>■<──┐
                              │               B4  │
                              │                   │
                           A4 ■──────────────>■<──┤
                                              B5  │
                           A5 ■───────────────────┘

Здесь Ai (i=1...|A|) означает одно из состояний A, Bj (j=1...|B|) - одно из
состояний B. При |A|<|B| возникает неопределенность выбора состояния B при
определенном состоянии A (граф 1). Именно по этой причине применение такой
схемы невозможно на практике. Аналогичная неопределенность возникает и в
графе 4, где в интерпретаторе используются неоднозначные функции, в результате
чего в данном случае невозможно определить каким состоянием - A4 или A5 были
вызваны состояния B4 и B5. В дальнейшем такие объекты 2-го порядка будем
называть НЕОПРЕДЕЛЕННЫМИ (граф 1 и 4), соответственно все остальные объекты
2-го порядка (граф 2 и 3) - ОПРЕДЕЛЕННЫМИ.
На примере неопределенных объектов показывается очень важное практическое
следствие - невозможность возникновения из ничего лишней информации. Именно
по этой причине бессмысленно использовать одни только неопределенные объекты
2-го порядка при создании алгоритма на их основе.

Вероятность появления в неопределенном объекте 2-го порядка какого-либо
состояния из массы возможных рассчитать заранее в общем случае нельзя, потому
что оно определяется свойствами среды функционирования, выходящими за рамки
описания объектов 2-го порядка (см. <a href="#57">"5.7. Физическое представление объектов
2-го порядка"</a>).


                   <a name="54">5.4. Связь объектов класса 2.1 и 2.2</a>

Физически неэлементарный объект класса 1.1, изменяемый объектом класса 2.1, с
точки зрения стороннего наблюдателя может быть поделен на физически
элементарные объекты 1-го порядка. При этом логика их взаимодействия друг с
другом сохраняется, но реализуется она уже объектом класса 2.2. И наоборот,
связанная логической зависимостью посредством объекта 2.2 группа объектов
1-го порядка в этом смысле равносильна одному объекту класса 2.1.
Следовательно с точки зрения внешнего наблюдателя объекты класса 2.1 и 2.2 не
имеют принципиальных отличий и могут взаимопревращаться. Если поправки на
существование объекта 2-го порядка малозначимы, то внешний наблюдатель может
пойти дальше и рассматривать объект 2.1 как 1.1. Вообще же, порядок любого
объекта может казаться стороннему наблюдателю меньше истинного значения.
Связь между объектами 2.1 и 2.2 играет огромную роль в принципе работы ИИ
(см. <a href="#742">"7.4.2. Бесконечные логические домены. Центральная теорема и ее
следствия"</a>).


           <a name="55">5.5. Переходы решений. Системы объектов 2-го порядка</a>

Под решениями объекта B=I(A) понимается набор значений (a1, b1), (a2, b2) и
т.д., удовлетворяющих уравнению B=I(A). В случае объекта A=I(A)
соответствующими решениями будут a1, a2, ..., удовлетворяющих уравнению
A=I(A). Напомним что вид функций связи для объектов 2-го порядка может носить
произвольную (аналитическую, логическую, либо другую) форму.
Переход решений - явление изменения решения (ai, bj) на (ak, bl) для объекта
класса 2.2 или ai на aj в случае объекта класса 2.1. Т.е. одно множество
состояний объектов 1-го порядка, входящих в состав объекта 2-го порядка,
уступает место другому.
Переход решений в физически элементарном объекте класса 2.2 B=I(A) происходит
в результате изменений состояния объектов A и B. Сложнее дело обстоит в
случае с 2.1: A=I(A). Первоначальный и наиболее важный вопрос, касающийся
причин изменения состояния A, - каков характер уравнения A=f(A) обыкновенное
или рекурсивное? Допустим что оно рекурсивно. Тогда A(i)=I(A(i-1)),
где A(i) - текущее состояние, A(i-1) - предыдущее (его можно рассматривать
также как внутреннюю переменную интерпретатора). Рассмотрим пошагово режим
работы интерпретатора в рекурсивном режиме:

1) Отрабатывает функция A(i)=f(A(i-1))

                                     A(i)
                                  ┌─>■
                                  f
                                  └──■
                                     A(i-1)

2) Получившееся значение A(i) копируется в A(i-1)

                                   A(i)
                                   ■──┐
                                     copy
                                   ■<─┘

3) Все повторяется заново

                                      A(i)
                                   ┌─>■
                                   f
                                   └──■
                                      A(i-1)

Очевидно что в момент работы функции копирования текущего состояния в
предыдущее (шаг 2, функция copy) функция f должна быть отключена. Равносильно
и в момент работы f функция copy должны быть отключена. Выходит что например
f должна то существовать, то нет. А это противоречит 2-му требованию к среде
существования объектов 2-го порядка, говорящим о том, что функциональные
зависимости должны быть неизменными. Да и как определить когда нужно
"включать" f, а когда "отключать"? А поскольку мы рассматриваем объект A=I(A)
в изолированном виде, то сторонних средств, обеспечивающих переключение
управления между f и copy, не существует.
Т.к. входной информацией для f служит только A(i-1), то узнать поменялось уже
A(i-1) функцией copy или еще нет, невозможно. Попытка же ввести для f
(аналогично и copy) зависимость типа "отработать, включить copy, отключиться"
нереализуема, ввиду того что объект 2-го порядка неспособен управлять другим
объектом 2-го порядка.
Следовательно и f и copy существуют и работают одновременно, никогда не
отключаясь и не меняя своего алгоритма. Но тогда мы опять приходим к системе
обыкновенных, нерекурсивных, уравнений:

   ┌
   │A(i-1)=copy(A(i))
   ┤A(i)=f(A(i-1))
   └

Откуда A(i-1)=f(copy(A(i-1))). А это тоже самое что A(i)=f(A(i)), или A=f(A),
оно же A=I(A).

Аналогично в случае произвольной СМЕШАННОЙ СТРУКТУРЫ из нескольких кольцевых
структур и объектов класса 2.2:

                                 x1      x2
                           ┌─f4─>■───f1─>■────┐
                           │    ┌┴┐     ┌┴┐   │
                           │    │f11    │f21  │
                           │    └>┘     └>┘   │
                           │                  │
                           │     x4      x3   │
                           └f12─>■<─f3───■<─f2┘
                                 │       ^
                                 │       └─f9───■ x9
                                 f41
                                 │       ┌─f10──■ x10
                                 v       v
                            ┌f8─>■───f5─>■────┐
                            │    x5      x6   │
                            │                 │
                            │    x8      x7   │
                            └────■<─f7───■<─f6┘

Соответствующая система уравнений (естественно полагаем что уравнение связи
равно "+"):

   ┌
   │x1=f11(x1)+f4(x4)
   │x2=f1(x1)+f21(x2)
   │x3=f2(x2)+f9(x9)
   │x4=f12(x1)+f3(x3)
   ┤x5=f41(x4)+f8(x8)
   │x6=f5(x5)+f10(x10)
   │x7=f6(x6)
   │x8=f7(x7)
   └

Как и в случае с простейшим объектом класса 2.1 все уравнения нерекурсивны.

Таким образом в конечных системах объектов 2-го порядка рекурсивных уравнений
не существует. Забегая немного вперед скажем что в бесконечных системах на
уровне зависимостей глобальных параметров бесконечных логических доменов
возникает т.н. квазирекурсия.

Из вышесказанного вытекает что процесс перехода решений не идет
самопроизвольно, а ограничение числа возможных совокупностей состояний
объектов 1-го порядка (решений системы уравнений) делает систему дискретной,
т.е. способной пребывать только в определенных состояниях а не в любых. Для
перехода от одного состояния (решения) системы к другому нужно искусственно
изменять состояние хотя бы одного объекта 1-го порядка. Эти изменения должны
быть произведены сторонними силами, не входящими в состав объектов системы.
Какова природа этих сил и как связано с процессами перехода решений понятие
времени рассказано в пункте <a href="#93">"9.3. Время. Квазирекурсия в средах существования
объектов класса 3.3"</a>.


                   <a name="56">5.6. Классификация объектов 2-го порядка</a>

2.1.1 или просто 2.1 - ЗАМКНУТЫЙ объект 2-го порядка.
2.2.1 - определенный РАЗОМКНУТЫЙ объект 2-го порядка (или объект класса
        2.2 в 1-й модификации).
2.2.2 - неопределенный разомкнутый объект 2-го порядка (или объект класса
        2.2 во 2-й модификации).


              <a name="57">5.7. Физическое представление объектов 2-го порядка</a>

Из предыдущих наших рассуждения ясно, что объект 2-го порядка - это
физический аналог математических формул. Нечто, позволяющее в нашем реальном,
физическом мире, преобразовывать объекты 1-го порядка таким же образом, как
математическая формула позволяет изменять переменные. Только делается это не
в абстракции, а в реальности.

Для стороннего наблюдателя объект 2-го порядка представлен в виде 2-х
физических неоднородностей (A и B), состояния которых находятся в определенной
зависимости друг от друга. Причем определить со стороны что является причиной,
а что - следствием возможно лишь в случае когда объект 2-го порядка
определенный и |A|>|B|. В связи с этим возникает вопрос: а нельзя ли
представить объект 2-го порядка как объект 1-го порядка? Ведь объект 2-го
порядка тоже как бы является для внешнего наблюдателя физической
неоднородностью. А стало быть объекты 1-го и 2-го порядка не имеют физических
отличий, являясь по сути дела одним видом объектов. Здесь кроется ошибка:
только 2 части объекта 2-го порядка можно представить в качестве
неоднородности - А и В. Интерпретатор физической неоднородностью не является.
Нельзя описать этот механизм при помощи объекта 1-го порядка, а можно только
привести примеры взаимного изменения состояний A и B, доказывающие факт его
существования. Однако если мы согласимся описать объект 2-го порядка при
помощи объекта 1-го порядка приближенно, "забывая" описать интерпретатор, то
объект класса 2.1 можно представить как объект 1-го порядка (на этом принципе
основано понятие т.н. логических доменов - см. <a href="#73">"7.3. Объект класса 3.2"</a>).
Вот несколько примеров, относящихся к нашей Вселенной.
К примеру, мы знаем что все тела, обладающие массой, притягиваются. Но мы
можем лишь только констатировать этот факт, только описать состояние этих
тел в результате  гравитационного взаимодействия. Любые попытки описать
"устройство" гравитации приводят к появлению теорий, в которых гравитационное
взаимодействие разлагается на более "простые" составляющие, или наоборот,
представлено как частный случай чего-то более глобального. Однако и
составляющие, и общий случай опять-таки предстают только в примерах их
действия на материальные объекты. Примерах, как и раньше, ничего не говорящих
о их сути. Аналогично дела обстоят и с электрическим и с магнитным полем и
т.д.. "Причиной грома является молния, причиной молнии является электрический
разряд, причиной электрического разряда является превышение напряженности
электрического поля некоторой величины, причиной превышения напряженности
является...". В итоге при попытке объяснения любого явления мы будем
получать бесконечный ряд подобных причин. Таким образом и из практических
наблюдений видно, что объект 2-го порядка - это вовсе не разновидность
объектов 1-го порядка, а совершенно другой вид объектов, являющийся более
общим случаем объекта 1-го порядка.

Примеров объектов 2-го порядка можно привести множество - как природных,
так и искусственных (все созданные к настоящему моменту человечеством машины
и механизмы являются объектами 2-го порядка. Как правило, это объекты класса
2.2). На их примерах можно показать и способность превращения 2.1 в 2.2 и
наоборот.

Рассмотрим зависимость масса-светимость для звезды. Рассматривая звезду как
объект класса 2.2, получаем что объектом 1-го порядка A служит ее масса,
B - светимость, интерпретатором I - проявление физических законов. Но ту же
самую звезду можно рассмотреть и как объект класса 2.1. В этом случае в
состав объекта 1-го порядка A1 будут входить как масса, так и светимость.
Однако их взаимосвязь накладывает ограничение на число возможных состояний
такого объекта 1-го порядка: |A1|<|A|*|B|. По этому признаку мы и можем
определить что A1 - это объект класса 2.1, а не 1.1, поскольку при отсутствии
зависимости B=I(A) мы имели бы |A1|=|A|*|B|.

Переход 2.1<->2.2 и обратно проявляется и в искусственных объектах:
программа, меняющая данные массива на основании данных из того же массива -
типичный объект класса 2.1. Однако пользователю она может казаться объектом
класса 2.2, особенно если он не видит всего массива в целом.

Наиболее наглядными примерами объектов класса 2.2 служит компьютер. В момент
исполнения на компьютере программы с алгоритмом f, аппаратура компьютера, как
объект 2-го порядка, имеет вид x->f->y. При этом A - входящий поток данных,
извлекаемый из соответствующих объектов 1-го порядка x (изменение состояния
электрического сигнала на разъеме от клавиатуры, мыши и т.д.); B - исходящий
поток данных, также выражаемый в изменении состояний объектов 1-го порядка y
(изменение состояний ячеек памяти видеоадаптера и т.п.).

Для простоты изложения вместо слова "компьютер" будем временно (в рамках
этих абзацев) употреблять слово "программа". Входные данные программы -
изменяющаяся многомерная переменная A, выходные данные - многомерная
переменная B. Промежуточные данные - многомерная переменная C. Алгоритм
работы программы - функция f.

Одним из способов практически определить равен ли порядок объекта Q порядку
объекта P служит то свойство, что в данном случае объект P полностью
представим произвольной комбинацией составных частей объекта Q. И наоборот.
Это доказывает что программы - объекты одного порядка, поскольку все они
состоят из 3-х элементарных составляющих:

 - операции присвоения
 - операции анализа условия, всегда влекущей переход от одной операции
   программы к другой (по умолчанию такое условие равно логической 1, а
   переход осуществляется к следующей операции - имеет место линейный
   алгоритм)
 - математических операций, являющихся композицией операции сложения

Аналогичным образом можно доказать что данные - это также объекты одного
порядка, поскольку любые данные представимы в двоичном коде.

Однако данные и программы - объекты разных порядков, причем порядок программы
выше как минимум на один:

 - при помощи программы можно управлять данными
 - программу нельзя описать при помощи данных (здесь следует вспомнить про
   замену "компьютер"->"программа")

На примере программ удобно рассмотреть чисто практическую характеристику
объектов 2-го порядка - их ВИДИМУЮ СЛОЖНОСТЬ (т.е. сложность с точки зрения
стороннего наблюдателя). Поскольку понятие сложности алгоритма чисто
практическое, то будем рассматривать алгоритмы, соответствующие определенным
объектам 2-го порядка. В силу условия определенности понятно, что при прочих
равных условиях, объект 2-го порядка будет наиболее простым при |A|=|B|.
Естественно что для максимальной простоты для объектов A и B должны
отсутствовать синхронные оси. Во всех остальных случаях он будет сложнее.
Так как в состав объекта 2-го порядка кроме A и B входит еще интерпретатор,
то в оценке суммарной сложности следовало бы учитывать и его. Применительно к
нашему миру интерпретатор представляет из себя физические связи между
объектами 1-го порядка и вспомогательный объект 1-го порядка Z. Связи условно
можно представить как совокупность 2-х составляющих: их число и различия в
механизме работы разных связей. Оценить сложность механизма невозможно в
результате неизвестности его сути. Почему это так мы рассматривали в
предыдущих пунктах. С практической точки зрения все это означает что на
каком-то этапе построения алгоритма работы интерпретатора придется ввести в
рассмотрение своего рода примитивы - уже неделимые в данном рассмотрении
материальные объекты мира и обладающие конечным набором свойств, своего рода
аксиомы. Следовательно, сложность интерпретатора без учета С можно
приближенно оценить широтой ассортимента используемых при его построении
примитивов и их числом. Сложность С, как объекта 1-го порядка, следует
оценивать как |С|. Поэтому видимая сложность объекта 2-го порядка находится в
зависимости от |A|, |B|, рассматриваемых примитивов и |С|.
Следует отметить что в рамках объекта 2-го порядка отсутствует возможность
создания "из ничего" объектов 1-го порядка. Можно только преобразовывать уже
имеющиеся объекты 1-го порядка.



==============================================================================



                   <a name="6">6. Что такое ИИ. Постановка задачи для ИИ</a>


Пока мы говорили об ИИ в рамках его интуитивного понимания. Теперь, на
основании теории объектов и глав, посвященных описанию объектов 1-го и 2-го
порядка, дадим его строгое определение.

Рассмотрим ИИ в виде "черного ящика", имеющего вход и выход. Причем под входом
будем понимать не только указания, данные ИИ его создателями, но и все то,
что он получает из окружающей его среды функционирования в процессе своей
работы. С учетом этого есть 4 варианта:

 1. Вход: объект 1-го порядка. Выход: объект 1-го порядка.
 2. Вход: объект 1-го порядка. Выход: объект 2-го порядка.
 3. Вход: объект 2-го порядка. Выход: объект 1-го порядка.
 4. Вход: объект 2-го порядка. Выход: объект 2-го порядка.

К случаям, когда у ИИ нет входов и выходов, или есть только вход или только
выход сводятся случаи 1..4, если все свойства входящих и/или выходящих
объектов представлены в потенциальной форме.

Очевидно что в 1-м варианте от ИИ требуется построить устройство,
преобразующее выходной объект 1-го порядка в зависимости от состояния
входного объекта 1-го порядка. Говоря другими словами, требуется построить
объект 2-го порядка. Но в этом случае ИИ-ту необходимо знать заранее каким
образом должны быть связаны состояния входного и выходного объектов.
Казалось бы, ее можно описать при помощи третьего объекта 1-го порядка.
Но каким образом извлечь эту информацию и воплотить ее в "жизнь" в процессе
работы ИИ? Только при помощи объекта 2-го порядка. Причем в таком случае
его придется встраивать в ИИ еще на стадии его постройки. То есть в итоге
получается что ИИ сам ничего не делает - он никоим образом не облегчает
своим создателям процесс постройки объекта 2-го порядка, а сам является уже
готовым к использованию объектом 2-го порядка. Так зачем же тогда вообще
нужен ИИ?! Первый вариант отпадает.

Второй вариант также неприемлем по причине невозможности описания объектом
1-го порядка объекта 2-го порядка. Остаются два последних варианта. У обоих
на входе -  объекты 2-го порядка. Но что же при этом должен представлять из
себя ИИ, чтобы обрабатывать объекты 2-го порядка?
Совершенно очевидно что объектом 1-го порядка он быть явно не может. Но и 2-м
тоже: ведь объект 2-го порядка имеет на входе объект 1-го порядка,
неоднородность, а не процесс преобразования неоднородностей. Значит либо ИИ
невозможен, либо он объект следующего - 3-го порядка.

Таким образом мы приходим к определению интеллекта: ИНТЕЛЛЕКТ - это свойство,
присущее объекту 3-го порядка и отсутствующее в объекте 2-го порядка (т.е. по
отношению к нему оно будет являться фундаментальным свойством).
Соответственно, ИИ - искусственно созданный объект 3-го порядка.

Постановка задачи для ИИ: управление произвольным объектом 2-го порядка.
Но вдобавок к этому накладывается дополнительное условие: построение объектом
3-го порядка объектом 2-го порядка должно проходить автоматически - без
каких-либо указаний или помощи со стороны создателей. Входящий объект 2-го
порядка служит лишь для описания конечного вида выходящего объекта 2-го
порядка, и не должен содержать в себе набора инструментов и инструкций к их
применению для создания выходящего объекта 2-го порядка. В противном случае
теряется практический смысл объекта 3-го порядка - всю работу за него опять
будут делать его же создатели. Как же тогда быть? Очевидно что выход должен
быть таким: объект 3-го порядка должен состоять из 2-х частей. Первая часть
- ядро объекта 3-го порядка - универсальна, принцип ее работы и устройство
остается неизменным. Ядро объекта 3-го порядка как раз и выполняет работу по
созданию выходящего объекта 2-го порядка. Вторая часть включает в себя
входящий объект 2-го порядка и набор настроек ядра для работы с конкретным
выходящим объектом 2-го порядка. Если провести аналогию с программированием,
то 1-я часть - это как бы операционная система и компилятор исходного текста
программы. А 2-я часть - исходный текст программы. Выходящий объект 2-го
порядка - работающий *.EXE - файл.

Введем понятие открытой и закрытой задачи. ОТКРЫТАЯ задача - это задача
создания объекта 2-го порядка, при условии что изначально дано только описание
этого объекта. Соответственно ЗАКРЫТАЯ задача - когда помимо описания
содержатся еще инструменты и описание способа создания. Иначе говоря открытая
задача - это "что сделать", а закрытая - "что сделать и каким образом".
ИИ - объект 3-го порядка, решающий открытую задачу.
Открытая задача - предельный случай минимизации исходной информации для
исполнителя задания. Дальнейшее ее сокращение приводит к невозможности
создания объекта 2-го порядка в принципе.

Тест Тьюринга (по нему считается что машина обладает интеллектом, если при
общении с ней человек не замечает что ведет диалог с ИИ, а не с другим
человеком) с точки зрения решения открытых задач не может считаться
доказательством существования интеллекта. Для его прохождения вполне
достаточно развитой СУБД (сетевая модель, нечеткая логика и достаточно
развитые алгоритмы обработки данных) с обширной базой данных. А применительно
к настоящему ИИ он может дать и неправильный результат, так как проверяет в
основном широту познаний испытуемого, а не его способность мыслить - создавать
объекты 2-го порядка (ответы на типовые вопросы можно запрограммировать,
нестандартные же вопросы приводят в замешательство практически любого, скажем
так "человека с улицы").

Таким образом мы видим что создатели ИИ в настоящее время идут по заранее
ложному пути, пытаясь реализовать ИИ на основе первых 2-х вариантов. Они
уподобляются алхимикам, тщетно стремясь, образно говоря, превратить свинец
(данные) в золото (алгоритм). Это мы и видим в действительности - все
программы "содержащие" ИИ не генерируют новых алгоритмов, они лишь
манипулируют данными на основании заложенного в них, сколь угодно сложного,
но все же алгоритма. Все они являются разновидностью компилятора,
преобразующего текст программы в машинный код, переделывающего один поток
байтов в другой и совершенно не "понимающего" смысл ни первого ни второго.
На этом можно было бы и остановиться, признав невозможность ИИ - ведь все что
ни создавалось человеком - объекты 2-го порядка....
Но это не так, что подтверждается существованием растительного и животного
мира, человеческого мозга. И наконец стоит дополнительно остановиться на одном
важном моменте, который в основном создатели ИИ почему-то как правило
"забывают". Мы уже несколько раз упоминали живую природу Земли в качестве
доказательства существования объекта 3-го порядка. Однако в дальнейшем мы не
будем брать представителей живой природы в качестве эталона объекта 3-го
порядка. Мы не будем также брать в качестве основы для построения рассуждений
об ИИ мозг человека, как это делает подавляющее большинство создателей ИИ.
И такой подход имеет под собой серьезные основания.

Известно что машущий полет гуся или шмеля намного экономичнее полета любого
самолета, что акулы и тунцы - лучшие пловцы океана, что органы чувств
некоторых живых существ обладают характеристиками и сегодня еще технически
недостижимыми. Но ни гусь ни шмель не могут летать быстрее звука, не могут
подниматься в стратосферу, их механическая прочность обязана только эффекту
масштаба. Атомные подводные лодки могут неделями непрерывно двигаться со
скоростью в десятки узлов, мощность их энергетических установок достигает
сотен тысяч киловатт, они несут полезную нагрузку в тысячи тонн. Все это
недостижимо в мире живой природы. Телескопы позволили увидеть Вселенную во
всем диапазоне длин волн, узнать о существовании миров, свет которых был
рожден еще до возникновения Солнечной системы. Туннельные микроскопы позволяют
манипулировать даже отдельными атомами. Науке неизвестно ни одного живого
существа, органы чувств которого могли бы тягаться с такими показателями.
Все это только подтверждает простую истину о том, что природа развивает в
живых существах лишь то, что выгодно с точки зрения выживания вида. К тому же
многие виды и даже целые классы живых существ (насекомые к примеру) уже
исчерпали возможности к совершенствованию без глобального переделывания всей
конструкции, они почти остановились в своем развитии. Поэтому наблюдаемые в
живой природе механизмы не являются лучшими в широком понимании этого
термина. Они оптимизированы для решения узкого круга задач, в других условиях
их эффективность резко убывает. Те характеристики, достижение которых
особенно сложно в мире животных, не представляют особых трудностей в мире
техники. Ориентация на живую природу, а тем более ее слепое копирование, в
конечном итоге приведут в тупик. И мозг человека тоже, наверняка, того же
поля ягода. Не стоит делать ИИ на его основе. Максимум что тут можно сделать,
так это, пожалуй, только узнать изначальные принципы, на которых он строится.
Дальше придется двигаться самим.



==============================================================================



                          <a name="7">7. Объекты 3-го порядка</a>


       <a name="71">7.1. Принципы построения объектов 3-го порядка. Условие
            существования универсального интерфейса. Что такое знания</a>

Для начала определим общую концепцию наших рассуждений. В самом общем виде
ИИ должен решать открытую задачу. Для этого требуется 3 вещи: материальные
ресурсы, интеллектуальные ресурсы и цель. Под материальными ресурсами
понимается наличие возможности "из чего делать" и "на чем делать", т.е.
своего рода первоначальное сырье и станки на которых это сырье
перерабатывается в готовую продукцию. Интеллектуальный ресурс состоит из
компонента "как делать", представляющего собой знания, необходимые для
создания готовой продукции. ЦЕЛЬ определяет облик объекта, который
планируется создавать или изменять - ЦЕЛЕВОЙ ОБЪЕКТ, и решает вопрос
"зачем это нужно". Цель служит входящим объектом 2-го порядка, а целевой
объект - исходящим объектом 2-го порядка.
Следует отметить что цель очень важна, так ее отсутствие делает бесполезным
наличие двух предыдущих ресурсов. Будем считать что сырья в среде
функционирования ИИ достаточно для достижения цели. Первоначальная
изготовительная база также имеется. Естественно есть и цель. Вопрос возникает
с наличием интеллектуальных ресурсов: каким образом имея перечисленные
компоненты достичь цели? Ведь по условию задачи заранее как сделать это не
известно.
Единственный способ - это получение интеллектуальных ресурсов из внешней
среды. Но прежде чем что-то получать нужно определиться по поводу того, с чем
мы имеем дело. Интеллектуальные ресурсы, а попросту ЗНАНИЯ могут быть или
объектом 1-го или объектом 2-го порядка. Допустим они являются объектом 1-го
порядка, т.е. физической неоднородностью. Но тогда в общем случае мы не
сможем их правильно воспринять - для обработки информации, хранимой в объекте
1.1 нужен объект класса не ниже 2.2. Значит нам придется заранее встраивать в
ИИ этакий универсальный объект 2.2, способный правильно воспринимать любые
возможные в данном случае объекты 1.1. Конечно, такое невозможно. Поэтому
знания должны быть объектом 2-го порядка. А точнее объектом 2.2. Работает
такой механизм знаний следующим образом (см. схему объекта 2.2., приведенную
в <a href="#5">"5. Объекты 2-го порядка"</a>): какая информация хранится в объектах 1.1 A и B
мы узнать не можем. Но мы можем определить каким образом взаимно изменяются
состояния объектов A и B. И тем самым мы получим уже вполне определенную
информацию. Затем ее можно записать в какой-нибудь объект 1-го порядка (не
забыв при этом построить интерпретатор, позволяющий эту информацию потом
оттуда извлечь и использовать).

На основе сказанного выкристаллизовываются 3 подхода к получению ИИ знаний:

1. Все необходимые знания в принципе можно получить при помощи случайного
   перебора.

2. Требуемые знания уже существуют в среде функционирования в виде объектов
   2.2. Надо только уметь их найти и использовать. Важным ограничением здесь
   является то, что знания должны находиться в явной форме - т.е.
   соответствовать принципу "бери и используй". В этом случае ИИ получает
   знания по аналогии.

3. Требуемые знания существуют в среде функционирования, но в неявной
   форме. В этом случае нужно получить как можно больше знаний из среды
   функционирования, а затем на основе их совместного анализа сделать
   логические выводы. При этом получаемые выводы уже являются требуемыми для
   достижения цели знаниями, причем в явной форме.

Если требуемые знания не могут быть получены случайным путем и не присутствуют
во внешней среде в явной или косвенной формах, то достичь цели невозможно.

Допустим, что в среде функционирования существует N объектов 1-го порядка:
X1, X2, ..., XN.
Каждый i-й объект находится в непосредственной взаимосвязи с K объектами
1-го порядка. Причем P из них являются "входами", а Q - "выходами".

Если цель и целевой объект безусловно должны быть определенными объектами
2-го порядка, то объекты 2-го порядка среды функционирования в общем случае
могут быть как определенными, так и неопределенными.

Если представить каждый объект 2-го порядка в виде уравнения вида

   Xj=Ij(Xi)

и учитывая что на каждый объект косвенно воздействуют все остальные объекты
(т.н. универсальный интерфейс, который мы в дальнейшем рассмотрим более
подробно), можно записать такую систему уравнений:

   ┌
   │X1=I1(Xa,...,Xb)
   │X2=I2(Xc,...,Xd)
   ┤................
   │XN=IN(Xe,...,Xf)
   └

Где Xa,...,Xf - объекты 1-го порядка, оказывающие явное влияние на объект
Xi. Очевидно, в таком случае можно преобразовать систему к виду:

   ┌
   │X1=F1(X1,X2...,XN)
   │X2=F2(X1,X2...,XN)
   ┤..................
   │Xi=Fi(X1,X2...,XN)
   │...............
   │XN=FN(X1,X2...,XN)
   └

Видно что состояние каждого объекта Xi косвенно зависит от состояния всех
остальных объектов, в том числе и от собственных состояний. Допустим что
система имеет K решений. Введем отношение S=|Xi|/K. Назовем это число
СТЕПЕНЬЮ СВЯЗИ объекта с системой. Чем ближе S к 1, тем сильнее степень связи.
При S=1 каждому решению системы соответствует одно уникальное состояние
объекта Xi. Это позволяет определить состояние системы по состоянию объекта и
наоборот. Если же S -> 0, то объект слабо связан с системой - изменение
состояния остальных объектов практически никак на нем не сказываются. Отсюда
следует, что нельзя построить объект, который имел бы сильное влияние на
систему и в то же время сам бы от нее не зависел. В конечных системах такое
невозможно.

Таким образом если для объекта X показатель S > 1/N, то изменяя его
состояние мы сможем управлять (в какой-то мере) состоянием всех остальных
объектов. Конечно тут возможно множество частных случаев. Допустим, например
что общее число решений системы равно 10, а число состояний объекта X равно 4.
Тогда возможна такая ситуация, когда 3 корня системы отличаются друг от друга
только состоянием объекта X: x1, x2, x3, а состояния остальных объектов
остаются неизменными. В остальных же 7 корнях системы состояние объекта X
остается неизменным и равно x4. Таким образом даже имея возможность изменять
состояние X мы не можем изменить состояния остальных объектов - они всегда
будут иметь одно и то же определенное значение при корнях x1, x2, x3 и
неопределенное состояние при корне x4.
Таким образом мы практически не можем влиять на состояние системы, хотя
степень связи S=0.4 для объекта X достаточно велико. Этот пример показывает
что знание степени связи недостаточно для выявления истинного влияния объекта
на состояние системы. Величину S можно использовать только для прикидочных
оценок. Чтобы более точно представлять себе взаимодействие объектов друг с
другом нужно проводить сложное математическое исследование системы, что не
входит в задачу настоящего документа.

Перенесем теперь все эти соображения применительно к нашему миру.
У нас остались нерассмотренными варианты 3 и 4. В них от ИИ требуется создать
некий "черный ящик", выполняющий задачу построения соответственно объектов
класса 1.1 (2.1) и 2.2.
Как уже было замечено при разборе 1-го варианта ИИ, для преобразования
выходного объекта 1-го порядка требуется объект 2-го порядка. Его нужно либо
встраивать в готовом виде в ИИ, либо он должен создавать его самостоятельно.
То есть в любом варианте и в 3-м и в 4-м, ИИ должен создавать объект 2-го
порядка (разумеется он должен быть определенным). Итак, нам необходим
механизм, позволяющий создавать объекты 2-го порядка (или получать требуемые
объекты 2-го порядка из уже существующих путем их преобразования). Он и будет
ядром объекта 3-го порядка.

Всякое нововведение принципиального характера должно на чем-то основываться.
Переход от объекта 2-го порядка к объекту 3-го порядка также должен быть
основан на неком новом фундаментальном подходе. При рассмотрении объектов
1-го и 2-го порядков оговаривались условия их существования, причем условия
существования объекта 2-го порядка накладывают на среду функционирования
требования дополнительно к требованиям существования объекта 1-го порядка.
Значит при переходе к объекту следующего, 3-го порядка, происходит порождение
новых требований дополнительно к старым. Что это за требования? Их
существование должно обеспечить решение открытых задач.

Создание объекта 2-го порядка означает нахождение способа воздействия на
объект 1-го порядка Y, исходя из состояния объекта 1-го порядка X.
Применительно к нашей проблеме объекты X и Y могут быть в общем случае
произвольными, в их роли могут выступать любые физические неоднородности.
Входной объект 2-го порядка содержит объекты 1-го порядка A и B, которые
также в свою очередь являются произвольными физическими неоднородностями.
Следовательно, чтобы провести ниточку управления от A и B к X и Y нужно чтобы
существовала физическая связь между ними. А так как A, B, X, Y могут
потребоваться в любой области среды функционирования объекта 3-го порядка,
то значит что все объекты 1-го порядка должны находиться в физическом
взаимодействии друг с другом. То есть не должно существовать объектов 1-го
порядка, на состояние которых невозможно повлиять, равно как и не должно
существовать объектов 1-го порядка, изменение состояния которых ни на что не
влияет. Это совершенно новое свойство, не имеющее аналогов в мире объектов
2-го порядка, мы назовем УНИВЕРСАЛЬНЫМ ИНТЕРФЕЙСОМ.

Таким образом универсальный интерфейс представляет собой смешанную структуру
(см. <a href="#52">"5.2. Объект класса 2.1"</a>), на которую наложены следующие ограничения:

 - состояние любого физически элементарного объекта 1-го порядка можно
   изменить путем изменения состояния остальных объектов 1-го порядка.
 - существуют объекты 1-го порядка с неравными 1 степенями связи. В противном
   случае даже несмотря на отсутствие объектов 1-го порядка, на состояние
   которых нельзя повлиять, говорить о знаниях, цели и т.д. бессмысленно.
   Ибо объектов 2-го порядка фактически нет, а вся смешанная структура
   эквивалентна любому объекту 1-го порядка входящему в ее состав.

   Условие существования универсального интерфейса
   -----------------------------------------------

В пункте <a href="#51">"5.1. Математические модели объектов 2-го порядка"</a> было вскользь
упомянуто о важном моменте, имеющим место при объединении нескольких объектов
2-го порядка в систему. А именно было сказано что существование какой-либо
связи между работой нескольких объектов 2-го порядка выходит за пределы
теории объектов 2-го порядка.
Казалось бы для объединения нескольких объектов 2-го порядка в единую систему
не нужно ничего принципиально нового сверх того, что необходимо для
существования самих объектов 2-го порядка. На самом деле это далеко не так...

Работоспособность, сам смысл системы

   ┌
   │X1=F1(X1,X2...,XN)
   │X2=F2(X1,X2...,XN)
   ┤..................
   │Xi=Fi(X1,X2...,XN)
   │...............
   │XN=FN(X1,X2...,XN)
   └

основаны на принципе суперпозиции: одновременном влиянии на объект Xi всех
интерпретаторов Ij физически элементарных объектов 2-го порядка
Xj=Ij(Xg, ..., Xh). Однако N произвольно взятых объектов 2-го порядка отнюдь
не будут порождать указанное свойство сами по себе. Единственное что у них
есть общего друг с другом - это объекты 1-го порядка Xi. Но изменение объектов
Xg, ..., Xh в объекте Xj=Ij(Xg, ..., Xh) в общем случае вовсе не обязано
приводить к немедленному изменению Xj. Для этого необходимо чтобы
интерпретатор Ij находился в физической форме (понятие физической и
потенциальной формы объекта разбирается в пункте <a href="#3">"3. Теория объектов"</a>). Проще
говоря - был активным. Но он может оставаться пассивным. И тогда мы можем
менять Xg, ..., Xh сколько угодно, а Xj от этого не измениться. Поэтому для
образования системы нужно соблюдать необходимое условие: все интерпретаторы
Ij обязаны находиться в активном состоянии. Ни изменение состояний
Xg, ..., Xh, ни изменение логики работы отдельно взятых Ij (вплоть до
перехода в потенциальную форму) неспособно активировать другие Ik. Данный
вывод подтверждается не только теорией объектов (активирование Ij в отдельных
случаях может означать управление), но и с позиции обыкновенного здравого
смысла. Объединение в систему, совместное рассмотрение и т.п. - все это с
точки зрения стороннего наблюдателя. А сами объекты 2-го порядка "не знают"
что кто-то решил объединить их в систему и будут вести себя точно так же как
и раньше. Независимо друг от друга активироваться и деактивироваться.
Ведь это не противоречит требованиям, предъявляемым к объектам 2-го порядка,
поскольку активация/деактивация означает переход из физической формы в
потенциальную и обратно. Существование объекта-зависимости между объектами
1-го порядка и неизменность логики его работы при этом сохраняются.
Высказанные соображения автоматически переносятся и на систему

   ┌
   │X1=F1(X1,X2...,XN)
   │X2=F2(X1,X2...,XN)
   ┤..................
   │Xi=Fi(X1,X2...,XN)
   │...............
   │XN=FN(X1,X2...,XN)
   └

Таким образом объединение объектов 2-го порядка в систему может идти только
за счет внешних сил, порождающих эти объекты и смотрящих на них "со стороны".
Очевидно такие возможности равносильны управлению и, следовательно,
подразумевают наличие объекта 3-го порядка. Универсальный интерфейс есть
фундаментальное свойство (свойства объекта порядка N, непредставимое в
произвольной комбинации свойств объекта порядка N-1: <a href="#3">"3. Теория объектов"</a>),
отличающее объект 3-го порядка от объекта 2-го.

Одновременное нахождение всех интерпретаторов в активном состоянии
свойственно нашей Вселенной. Это гравитация. Это электромагнитное поле. Это
сильное и слабое ядерное взаимодействие. Поведение каждого самого мельчайшего
кирпичика мироздания идет в этом смысле в такт со всей Вселенной. Ограничение
на максимальную скорость передачи взаимодействия (скорость света) существенно
лишь на космических расстояниях. В условиях биосферы Земли его фактически нет.
Одновременность проявления законов природы настолько привычна нам, что мы
этого просто не замечаем. Но в искусственно построенных наборах объектов 2-го
порядка, в математических моделях компьютерных программ с их многочисленными
процедурами и функциями свойство одновременности работы ...отсутствует! На
уровне математической модели сама постановка подобного вопроса лишена смысла,
т.к. логическая связь между отдельными составными частями любого алгоритма
идет не иначе как посредством данных. Нарушение заранее намеченного плана
выполнения приводит к разрушению целостности данных. Это касается также
интерактивных программ: в каждой из них имеется подпрограмма производящая
непрерывное сканирование состояния клавиатуры (мыши, памяти и т.п.) и
осуществляющая вызов при необходимости соответствующей процедуры-обработчика.
Поэтому рассматривая процедуры как уравнения вида Xi=Fi(X1,X2...,XN) мы не в
праве рассматривать программу как неизменную систему таких уравнений. На
различных стадиях работы программы в момент выполнения Fi остальные Fj не
существуют. Они переходят в потенциальную форму. Деактивируются.

Универсальный интерфейс придает среде функционирования единство. Следует
оговориться что универсальный интерфейс вовсе не говорит о том что каждый
объект 1-го порядка связан с каждым непосредственно и о том что с помощью
любого объекта можно контролировать состояние любого другого объекта. Он лишь
говорит о существовании влияния на этот объект со стороны остальных объектов.
А осуществляться это влияние может как напрямую, так и косвенно - через
изменение состояния объектов, уже непосредственно связанных с данным объектом
1-го порядка. Существование универсального интерфейса говорит также и о том,
что в составе всех образующих его объектов класса 1.1 имеется хотя бы одно
эквивалентное свойство.

Второе, на что нужно обратить внимание - это необязательность распространения
влияния универсального интерфейса на объекты, входящие в состав объекта 3-го
порядка. Т.е. внутри него могут быть и такие объекты, на состояние которых
нельзя повлиять (например цель). Тогда мы имеем дело со смешанной структурой
среды функционирования. Но в общем случае составляющие объекта 3-го порядка
все же подвержены влиянию универсального интерфейса. Именно из такого случая
мы и будем исходить в дальнейшем.

Кроме универсального интерфейса в главах, посвященным описанию объектов
класса 3.2 и 3.3, вводятся дополнительные свойства среды функционирования -
ЛОГИЧЕСКИЕ ДОМЕНЫ и ее БЕСКОНЕЧНОСТЬ. Более подробно мы разберем их ниже.

Универсальный интерфейс является необходимым условием создания объекта 3-го
порядка, но не достаточным. Ведь, образно говоря, мало иметь корабль на
котором можно доплыть к любому острову. Нужен еще двигатель и навигационная
система, дающие возможность двигаться и притом в нужном направлении.
"Навигационной системой" в нашем случае станет обратная связь, дающая
возможность узнать насколько мы близки к цели. Ее можно реализовать как
объект 2-го порядка. С "двигателем" несколько сложнее. Именно этот блок
непосредственно и строит искомый объект 2-го порядка. Как мы уже знаем объект
2-го порядка состоит из 2-х разнотипных компонент: объектов 1-го порядка и
интерпретатора. Таким образом при максимуме своих возможностей блок движения
должен "уметь" преобразовывать/генерировать как объекты 1-го порядка, так и
интерпретаторы: всего 4 возможности.

Для преобразования объектов 1-го порядка достаточно объекта 2-го порядка. Но
как их генерировать? И вообще возможно ли такое? Объект 1-го порядка есть
физическая неоднородность. Эта неоднородность является уже врожденной,
"вмонтированной" в среду функционирования. И если вопрос ставится как
генерация объекта 1-го порядка, то по сути дела это означает что из
первоначально однородной среды нужно сделать неоднородную или повысить
степень ее неоднородности. А для этого нужно чтобы тот, кто проводит такие
принципиальные изменения находился вне среды функционирования (для того,
чтобы быть совершенно независимым от нее и видеть ее со "стороны") и был выше
порядком чем она. Для объектов же, находящихся внутри среды такая возможность
недоступна, так как они сами являются ее частью и их порядок не может быть
выше порядка среды, их породившей. То же самое ограничение действует и при
попытке генерации/изменения интерпретаторов. Интерпретаторы - также
неотделимая от среды функционирования часть, так как они физически связаны с
объектами 1-го порядка. И поэтому изменение их свойств, а тем более генерация
новых неизбежно повлечет за собой перестройку всей среды, изменения ее
фундаментальных основ. Так что для объектов 3-го порядка, проводящих
изменения в среде, частью которой они являются сами, из 4-х теоретических
возможностей блока движения доступна лишь одна - воздействие на среду
функционирования путем изменения состояния уже существующих объектов 1-го
порядка. Но даже эта часть таит в себе огромные возможности. В дальнейшем под
словом "создать объект" мы будем понимать именно изменение уже существующего
объекта, если иной смысл не оговорен специально. Поскольку в общем случае в
качестве объекта управления может быть выбран любой объект 1-го порядка Ai,
получаем что для создания N объектов 2-го порядка B=F(C) необходимо наличие
непосредственной зависимости состояния объекта 1-го порядка Bi от минимум 2N
объектов 1-го порядка Cj. Причем |Cj|>=|Bi|. Если это условие не будет
выполнено, то выбрав, например, в качестве объектов управления объекты 1-го
порядка непосредственно связанные друг с другом (C->Y->B) мы никогда не
сможем достигнуть нужной нам зависимости B=F(C).

------------------------------------------------------------------------------

                           <a name="72">7.2. Объект класса 3.1</a>

Итак, мы можем изменять состояния различных объектов 1-го порядка. Но какой
объект и как изменить мы заранее не знаем. Значит в состав блока движения
должно входить как минимум 2 компонента: объект 1-го порядка, изменение
состояния которого через универсальный интерфейс отражается на остальных
объектах 1-го порядка, и ГЕНЕРАТОР СЛУЧАЙНОСТИ (сокращенно - ГС), дающий
возможность случайно выбрать какой объект 1-го порядка следует изменить
наиболее сильно и в каком направлении. Но одних только случайных изменений
мало. Необходимо устройство, запоминающее удачный случайный шаг (он приблизил
нас к цели) и позволяющее вернуться к этому состоянию системы, если следующий
случайный шаг оказался неудачным. Таким образом постепенно мы сможем
приближаться к цели, а не блуждать около стартовой точки.

Опуская подробности, о которых мы скажем ниже, алгоритм работы простейшего
объекта 3-го порядка (естественно что это не алгоритм, описывающий путь
создания объекта класса 2.2, а описание последовательности шагов, остающихся
неизменными при построении любого произвольного объекта класса 2.2),
получающего знания случайным путем, выглядит следующим образом:

 1. Получение по обратной связи информации о том, достигли мы цели или нет.
    Да - повторить этот пункт. Нет - на пункт 2.
 2. Если только что сделанный шаг оказался удачным, то запомнить свое
    состояние и сделать следующий случайный шаг.
 3. Если только что сделанный шаг оказался неудачным, то вернуться в свое
    прежнее состояние и сделать случайный шаг.
 4. Перейти к пункту 1.

Как видим ничего сложного на первый взгляд нет - это обычный алгоритм с
возвратом. Но не стоит спешить с выводами. Ведь не стоит забывать, что
универсальный интерфейс не только дает возможность управления объектами 1-го
порядка за счет изменения состояния одного объекта. Он таит в себе и угрозу
- механизм обратной связи, блок движения, запоминающее устройство, а также
различные периферийные блоки объекта 3-го порядка существуют отнюдь не
изолированно от остальной среды функционирования, а тесно связаны с ней.
А следовательно в результате существования универсального интерфейса есть
опасность возникновения сбоев в их работе, появления новых и исчезновения
старых свойств, других коллизий, вплоть до полного разрушения, вызванных как
неудачным изменением объектов 1-го порядка самим объектом 3-го порядка, так и
изменением посторонних объектов 1-го порядка.

Кроме того имеется опасность попадания в так называемые "потенциальные ямы".
Это может произойти, если между текущим положением объекта 3-го порядка есть
область, в котором его состояние оценивается обратной связью как отдаление от
цели. Попав в такую область, объект 3-го порядка совершит шаг назад - откат,
в результате которого он отдаляется от цели. И если цель имеет вид "замок с
непрерывной стеной вокруг", то объект 3-го порядка попросту будет "ходить"
вокруг этой "стены" и никогда не сможет "попасть" в "замок" - достичь цели.
Избавиться от такой проблемы можно только путем правильного выбора ГС,
обладающего широким спектром случайных изменений, в результате которых объект
3-го порядка сможет производить не только близкие переходы - "шаги", но и
дальние - "прыжки".

Существует и еще одна проблема принципиального характера. Так как объект 3.1
получает знания путем случайного перебора, то необходим источник случайности -
ее генератор. Искусственно создать такой генератор затруднительно - любой
алгоритм строится по определенным правилам, а значит он уже не случаен.
Также сложно и найти его уже в готовом виде - как узнать что кандидат в
такой генератор действительно случаен?
Можно воспользоваться тем, что факт появления того или иного состояния B в
неопределенном объекте 2-го порядка A->X->B определяется вероятностью его
появления и потому появление в данном случае конкретного значения B в какой-то
мере можно считать случайным.
Кроме этих препятствий существует и множество других. На этом закончим наше
небольшое теоретическое введение и перейдем к практике.


                <a name="721">7.2.1. Треугольная схема объекта класса 3.1</a>

Графическая принципиальная схема объекта 3-го порядка, реализующий случай 3
(2.2 - на входе, 1.1 или 2.1 - на выходе) такова:

       ┌------┐
       | Цель |
       |┌─┐   |                                        ╔══╗
       |│ ├<──┼────────────────────────────────────────╢BU╟<──┐
       |│U├>──┼──────────────────────┐                 ╚══╝   │
       |│ ├<─┐|                      │                        │
       |└─┘  │|                      │                        │
       |╔═╗  │| ┌───────────┐        │        ┌───────────┐   │
       |║X╟──┘| │Uпредыдущее├<─┐     │     ┌─>┤Zпредыдущее│   │
       |║ ╟──┐| └───────────┘  │  ╔══╧══╗  │  └───────────┘   │
       |╚═╝  │|                └─>╢     ╟<─┘                  │
       |┌─┐  │|                   ║ M1  ║                     │
       |│ ├>─┘|                ┌─>╢     ╟<─┐                  │
       |│A│   | ┌───────────┐  │  ╚══╤══╝  │  ┌───────────┐   │
       |│ ├>─┐| │Zтекущее   ├<─┘     │     └──┤     ГС    │   │
       |└─┘  │| └───────────┘        │        └───────────┘   │
       └-----┼┘                      │                        │
           ┌-┼-----------------------┼------------------------┼-┐
           | │       Внешний мир     │       ┌─┐              │ |
           | │                       └──────>┤Z│              │ |
           | │╔═╗                            └─┘           ┌─┐│ |
           | └╢Y╟─────────────────────────────────────────>┤B├┘ |
           |  ╚═╝                                          └─┘  |
           └----------------------------------------------------┘

На этой схеме показано принципиальное устройство объекта 3.1.
Под ВНЕШНИМ МИРОМ понимается та среда функционирования, в которой и
существует объект 3.1. Цель данного объекта состоит в создании во внешней
среде объекта 2-го порядка A->Y->B. Так как A дано изначально, то требуется
лишь построить интерпретатор Y и с его помощью менять состояние объекта B.
Изначально мы знаем что должен делать этот объект (каким образом состояние B
меняется в зависимости от состояния A). Но нам неизвестно каким образом это
сделать. Говоря другими словами мы не знаем как должен быть устроен
интерпретатор Y и каким образом можно управлять объектом B (знать что из себя
представляет B и управлять им - далеко не одно и то же). Но как "сказать"
объекту 3.1 про то, как мы представляем себе объект A->Y->B. Нужно построить
его описание. Так как это объект класса 2.2, то описать мы его можем также
объектом класса не ниже 2.2.

Таким объектом-эталоном на нашей схеме служит объект A->X->U (для большей
наглядности он очерчен пунктирной линией). Естественно |A|=|U|, |A|=|B|.
Такое описание поначалу кажется бессмысленным - ведь в этом случае приходится
строить самим объект 2-го порядка. Но на самом деле объект A->X->U хоть и
равен по сложности объекту A->Y->B, физически он значительно меньше и
построить его гораздо проще, так как он несет лишь информационную нагрузку, в
то время как объект A->Y->B и строится в основном-то как раз для роли мощного
физического рычага.

Естественно что нам нужен механизм обратной связи. Уже с самого начала должна
быть возможность наблюдать за тем как эволюционирует объект B. Поэтому объект
класса 2.2 B->BU->U также должен быть построен создателями объекта 3.1. Как
видно из рисунка, объект U одновременно изменяется как BU, так и X. Среди
всех возможных состояний объекта U необходимо выделить некое, т.н. НУЛЕВОЕ
состояние. Это состояние ничем особо не отличается от других состояний, кроме
одного - если все возможные состояния объекта U представить в виде точек в
многомерном пространстве, то нулевое состояние должно быть как можно ближе к
центру этого пространства. Или говоря по-другому оно должно представлять
собой "среднее арифметическое" возможных состояний, подобно тому как ноль
делит координатную ось на две равные части (отсюда и название).

Обозначим выход интерпретатора X за P, а выход BU за Q. Причем если объект B
придет в нужное нам состояние, то Q=P. А объект U примет при этом нулевое
состояние. Таким образом чем меньше отличается состояние объекта U от
нулевого, тем ближе мы к цели. U служит своего рода индикатором прогресса.

Формирование объекта U (аналогично и U1 и U2 в т.н. полной схеме - см. ниже)
происходит в виде: U=K1*(P1-Q1)^2+K2*(P2-Q2)^2+...+Kn*(Pn-Qn)^2,
где Ki - весовой множитель, показывающий степень важности каждого показателя,
он может принимать как положительные, так и отрицательные значения, а также
ноль. (Pi-Qi)^2 - квадрат разности каждого показателя (Pi и Qi - значения по
i-й оси координат, если рассматривать объекты класса 1.1 P и Q как
многомерные переменные). Естественно что при Q=P мы получим что Pi-Qi=0,
U также примет нулевое значение. В любом случае U>=0.

M1 - "модуль 1" или базовый модуль. "Модуль 1" - потому что кроме него
существуют еще "модуль 2" и "модуль 3", обеспечивающие соответственно
подобные и абстрактные построения. Но они работают в более сложных объектах
3-го порядка и в данной схеме опущены. Данный же модуль называется базовым,
т.к. остальные модули строятся на его основе и постоянно используют его в
своей работе. Это центральное звено простейшего объекта 3-го порядка,
включающее в себя, как видно из схемы, блок движения, блок работы с обратной
связью, блок реализации возврата, запоминающее устройство и рабочий орган
- объект 1-го порядка Z.

Объекты 1-го порядка Uпредыдущее и Zпредыдущее запоминают соответственно
состояния объектов U и Z предыдущего шага. В объекте Zтекущее запоминается
текущее состояние Z. Это необходимо потому, что на Z кроме объекта 3.1 через
универсальный интерфейс воздействуют и остальные объекты внешнего мира.
Конечно, они воздействуют и на все остальные части объекта 3.1, но не нужно
забывать, что Z должен быть сильно связан с внешним миром, чтобы эффективно
на него воздействовать, в то время как остальные части объекта 3.1 связаны с
ним слабо. Из-за этого состояния Z, каким мы его представляем и какое оно
на самом деле, сильно различаются.
Поэтому перед тем как изменить Z, M1 записывает его планируемое состояние в
Zтекущее.

Важную роль играет ГС. Это объект 1-го порядка, число возможных состояний
которого должно быть как можно ближе к общему числу состояний (решений) всей
системы, т.е. S(ГС) -> 1. В результате чего по отношению к остальным объектам
он будет обладать избыточным числом состояний Одному состоянию некоторого
произвольного объекта может соответствовать несколько состояний ГС. Поэтому
относительно их его состояния приближенно можно считать случайными. Более
конкретно способ постройки объекта Y мы рассмотрим на примере объекта 3.1,
построенного по полной схеме.

Число состояний объекта Z меньше числа состояний ГС. Это следует из условия
определенности объекта 2-го порядка: Z=M1(..., ГС, ...). Поэтому |Z|<=|ГС|,
а так как М1 осуществляет работу не только с ГС, то |Z|<|ГС|. Объект Z может
быть не одним физически элементарным объектом 1-го порядка, а состоять из
нескольких, зачастую весьма несхожих друг с другом, физически элементарных
объектов. Фактически в этом случае мы имеем дело с т.н. матрицей эффекторов
(см. <a href="#73">"7.3. Объект класса 3.2"</a>).

Приведем упрощенный алгоритм работы объекта 3.1:

0. Инициализация:
    а) Получение значения U
    б) Uпредыдущее := U
    в) Zтекущее := ГС

1. Получение значения U

2. Если U=0, то цель достигнута. Перейти на пункт 1.

3. Если U<=Uпредыдущее, то сделанный шаг оказался удачным (или нейтральным),
   делаем новый шаг:
    а) Запоминается состояние U: Uпредыдущее := U
    б) Запоминается состояние Zпредыдущее: Zпредыдущее := Zтекущее
    в) Случайно генерируется новое состояние Zтекущее: Zтекущее := ГС

4. Если U>Uпредыдущее, то сделанный шаг оказался неудачным - привел к
   увеличению значения U, возвращаемся назад:
    а) Запоминается состояние U: Uпредыдущее := U
    б) Осуществляется возврат к состоянию Zпредыдущее:
       Zтекущее := Zпредыдущее
    в) Так как в случае если и этот шаг окажется неудачным смысла
       возвращаться уже нет, то мы не сохраняем Zпредыдущее, а
       присваиваем ему случайное значение: Zпредыдущее := ГС

5. Делаем шаг - переводим Z в определенное состояние: Z := Zтекущее. Перейти
   на пункт 1.

В дальнейшем рассмотренную схему мы будем называть ТРЕУГОЛЬНОЙ схемой, т.к.
она условно может быть представлена в следующем виде:

                                     A
                                   /   \
                                 /       \
                               X           Y
                             /               \
                           /                   \
                          U ---------BU---------B


Кроме решения общей задачи - построения объекта 2-го порядка A->Y->B при
условии постоянного изменения состояния объекта 1-го порядка A, объект 3-го
порядка может быть применен и для решения частного случая - удерживать
состояние объекта B в неизменном виде (противодействуя при этом внешней
среде, стремящийся состояние B изменить). Объект A при этом своего состояния
не меняет. Назовем этот режим работы объекта 3-го порядка СЛЕДЯЩИМ режимом.

Анализируя принцип работы объекта класса 3.1, в частности блока M1, нетрудно
заметить что внутри M1 нужно детальное описание ГС, Z, Zпредыдущее, Zтекущее.
При операциях копирования (Zтекущее := ГС, Zпредыдущее := Zтекущее и др.)
происходит изменение состояния соответствующего объекта 1-го порядка. Эту
работу выполняют объекты 2-го порядка. Но вся сложность в том, что ГС, Z,
Zпредыдущее и Zтекущее имеют очень большое число состояний. И поэтому наше
представление о них - их формальная модель - может описывать далеко не все
свойства. Следовательно и создавая объекты 2-го порядка для работы с ними, мы
сможем учесть только те свойства, что отражены в формальной модели. Возникает
ситуация, аналогичная ситуации программирования ЭВМ. Программист, работая с
компьютером не учитывает его механические, тепловые и др. характеристики.
Конечно если формальные модели ГС, Z, Zпредыдущее и Zтекущее обладают
достаточно высоким уровнем (допускают большое количество возможных состояний)
с их неполнотой можно смириться, поскольку присутствие универсального
интерфейса между Z и внешним миром в принципе позволяет достичь цели даже в
таких условиях. Например руки человека могут производить только механическое
макровоздействие. Но тем не менее вся окружающая нас техносреда с ее
разнообразнейшими устройствами, работающими и с электромагнитными полями, и с
нанообъектами и т.п., в конечном итоге была создана именно руками. Более
того, человек также воспринимает свои руки как механические манипуляторы и не
использует их химические, электромагнитные и др. характеристики.
Конечно пример с руками довольно грубый не совсем подходит для случая с 3.1,
но зато он нагляден и показывает, что зная даже небольшую долю реального
устройства ГС, Z, Zпредыдущее, Zтекущее, можно в принципе достичь цели.

Однако все же желательно уметь манипулировать не частью, а всеми свойствами.
Это возможно в случае, когда кроме M1 ни один объект не воздействует на
Z, Zпредыдущее и Zтекущее. Причем Zпредыдущее и Zтекущее образуют с M1
замкнутую систему, а Z меняется только M1. Возможные связи ГС при этом роли
не играют:

                                  ┌───┐
                                  │ ГС│
                                  └─┬─┘
                                    v
                    ┌────────┐   ╔══╧══╗   ┌───────────┐
                    │Zтекущее├<──╢  M1 ╟──>┤Zпредыдущее│
                    │        ├>──╢     ╟──<┤           │
                    └────────┘   ╚══╤══╝   └───────────┘
                                    v
                                   ┌┴┐
                                   │Z│
                                   └─┘

В таком случае, в силу существования универсального интерфейса, можно
утверждать что состояние Z, Zпредыдущее и Zтекущее полностью определяются M1.
Таким образом если создателю 3.1 удастся подобрать в состав M1 такие объекты
2-го порядка, что сделают возможным рассматриваемый случай, то ему уже
необязательно включать в формальную модель свойства ГС, Z, Zпредыдущее и
Zтекущее в полном объеме. Все будет работать автоматически и с максимальной
эффективностью.


                   <a name="722">7.2.2. Полная схема объекта класса 3.1</a>

На следующей схеме показано принципиальное устройство объекта 3.1,
реализующего ПОЛНУЮ СХЕМУ (вход - объект 2.2, выход - объект 2.2):

               ┌--------------------------------------------┐
               |┌─┐      Цель       ╔═╗                  ┌─┐|
             ┌─┼┤A├────────────────>╢X╟─────────────────>┤B├┼┐
             │ |└─┘                 ╚═╝                  └─┘|│
             │ └--------------------------------------------┘│
             │  ╔═══╗                                ╔═══╗   │
             └─>╢   ║                                ║   ╟<──┘
                ║AU1║                                ║BU2║
             ┌──╢   ║                                ║   ╟───┐
             │  ╚═══╝                                ╚═══╝   │
             │  ┌──┐                                   ┌──┐  │
             └─>┤  │    ╔═══╗       ┌─┐      ╔═══╗     │  ├<─┘
                │U1├───>╢U1U╟──────>┤U├<─────╢U2U╟<────┤U2│
             ┌─>┤  │    ╚═══╝       └┬┘      ╚═══╝     │  ├<─┐
             │  └──┘                 │                 └──┘  │
             │                       v                       │
             │  ┌───────────┐        │        ┌───────────┐  │
             │  │Uпредыдущее├<─┐     │     ┌─>┤Zпредыдущее│  │
             │  └───────────┘  │  ╔══╧══╗  │  └───────────┘  │
             │                 └─>╢     ╟<─┘                 │
             │                    ║ M1  ║                    │
      ╔═══╗  │                 ┌─>╢     ╟<─┐                 │  ╔═══╗
      ║   ╟──┘  ┌───────────┐  │  ╚══╤══╝  │  ┌───────────┐  └──╢   ║
      ║CU1║     │Zтекущее   ├<─┘     │     └──┤     ГС    │     ║DU2║
      ║   ╟<─┐  └───────────┘        │        └───────────┘  ┌─>╢   ║
      ╚═══╝  │                       │                       │  ╚═══╝
           ┌-┼-----------------------┼-----------------------┼-┐
           | │       Внешний мир     │       ┌─┐             │ |
           | │                       └──────>┤Z│             │ |
           | │┌─┐                   ╔═╗      └─┘          ┌─┐│ |
           | └┤C├──────────────────>╢Y╟──────────────────>┤D├┘ |
           |  └─┘                   ╚═╝                   └─┘  |
           └---------------------------------------------------┘


Работа данного объекта состоит в создании во внешней среде объекта 2-го
порядка C->Y->D. Целью служит объект A->X->B (очерчен пунктирной линией).
|A|=|C|, |B|=|D|. Механизм обратной связи позволяет проследить за изменением
состояний объектов C и D. Поэтому объекты 2.2 C->CU1->U1 и D->DU2->U2 должны
быть построены создателями объекта 3.1.

Как видно из рисунка, объекты U1 и U2 одновременно изменяются как CU1 и DU2,
так и AU1 и BU2. Обозначим выход интерпретатора AU1 за P1, а выход CU1 за Q1.
Причем если объект С придет в нужное нам состояние, то Q1=P1. А объект U1
примет при это нулевое состояние. Аналогично протекает и процесс формирования
состояния U2 (выход BU2 - P2, а выход DU2 - Q2, соответственно нулевое
состояние U2 произойдет при P2=Q2).

Состояние объекта U определяется точно по тому же принципу: выходом U1U
служит P, а выходом U2U является Q. При P=Q объект U примет нулевое состояние.
Очевидно что нулевое состояние объекта U возможно лишь при нулевых состояниях
объектов U1 и U2. Таким образом чем меньше отличается состояние объекта U от
нулевого, тем ближе мы к цели, как и в случае треугольной схемы. Алгоритм
работы также полностью аналогичен алгоритму треугольной схемы, с той лишь
разницей, что при расчете значения U, помимо расчета P и Q, рассчитываются
также P1, Q1, P2, Q2.

Очевидно что полная схема представляет собой фактически комбинацию из 2-х
треугольных схем. Таким образом, треугольная схема является своего рода
"строительным кирпичом", на основе которого могут быть построены объекты
более сложные, чем по полной схеме, состоящие из более чем 2-х комбинаций
треугольной схемы.

На примере работы 3.1 ярко иллюстрируется важный момент принципиального
характера - невозможность направленного изменения объекта 2-го порядка L:
C->Y->D, если нет объекта 2-го порядка K: A->X->B, или если K - объект 1-го
порядка. Это принцип можно назвать ЗАКОНОМ СОХРАНЕНИЯ ИНФОРМАЦИИ, гласящий
что невозможно получить знания (т.е. изменение логики работы L) из ниоткуда
или из объекта 1-го порядка.

Напомним еще раз: приведенные выше алгоритмы работы объекта класса 3.1 не
являются алгоритмами описания пути к цели. Это описание последовательности
срабатывания различных блоков объекта класса 3.1. И оно остается неизменным
при любой цели!
Рассмотрим на примере. Представим себе автомобиль-амфибию высокой
проходимости с изотопным генератором, дающим ему неограниченный запас хода.
На автомобиле установлен компас. Мы помещаем автомобиль в любую точку
поверхности Земли, включаем двигатель и даем команду двигаться на север.
Алгоритм движения крайне прост: встретив непреодолимую преграду (например
крутой подъем) автомобиль отъезжает немного назад и пытается ее объехать,
стараясь выдерживать при этом основной курс (на север) неизменным.
Очевидно что автомобиль будет подобен объекту 3.1. Цель - курс на север.
Обратная связь - компас. Объект Z - колеса и гребной винт (поскольку не
простой автомобиль, а амфибия). Упрощенный аналог универсального интерфейса
- то, что при помощи колес и вплавь можно достичь практически любой точки
земного шара. Генератором случайности вполне может стать какой-нибудь
псевдослучайный физический процесс (например шумы транзистора). И т.д..
Теперь вернемся к алгоритму работы. Естественно что само устройство
автомобиля, взаимодействие его узлов и агрегатов, можно описать алгоритмом.
Но вот траектория его движения - нет, потому что она определяется не только
командами на руль и педаль газа, но и рельефом местности, магнитным полем
Земли, множеством других факторов. А ведь достижение цели достигается как
раз выбором траектории! Дав задание ехать на юг мы тем самым полностью ее
(траекторию) изменим, не меняя в конструкции автомобиля ничего, кроме цели.
В приведенных схеме и алгоритме и описывается, образно говоря, как раз та
самая конструкция автомобиля, а совсем не алгоритм детального построения
траектории его движения.


                <a name="723">7.2.3. Механизм создания объекта 2-го порядка</a>

Поясним теперь подробнее механизм создания объекта C->Y->D.
Объект 1-го порядка Z сильно связан с внешним миром и изменение его состояния
позволяет заметно влиять на остальные объекты внешнего мира. Изменения его
состояния через универсальный интерфейс отражаются на других объектах 1-го
порядка, лежащих между C и D. А т.к. все объекты 1-го порядка связаны в
единую систему уравнений, то при этом изменяется зависимость состояния C от D
- как бы строится интерпретатор Y.

Упрощенно построение Y можно изобразить так:

1) Изначально между C и D нет связи Y (для упрощения на рисунке
   отображаются только связи полезные для создания Y)

                                │
                                v
                               ┌┴┐
                               │Z│
                               └─┘
                                      ┌───┐
         ┌───┐                        │x7 │
         │x1 │                        └───┘
         └───┘            ┌───┐
                          │x4 │                       ┌───┐
                          └───┘                       │x10│
  ┌─┐        ┌───┐                          ┌───┐     └───┘
  │C│        │x2 │                          │x8 │                      ┌─┐
  └─┘        └───┘        ┌───┐             └───┘                      │D│
                          │x5 │                                        └─┘
                          └───┘
                                       ┌───┐
           ┌───┐          ┌───┐        │x9 │               ┌───┐
           │x3 │          │x6 │        └───┘               │x11│
           └───┘          └───┘                            └───┘


2) Изменяя Z различными способами мы тем самым меняем состояние объектов
   1..11, в результате чего между некоторыми объектами 1-го порядка (1..11)
   возникают зависимости.

                                │
                                v
                               ┌┴┐
                               │Z│
                               └─┘
                                      ┌───┐
         ┌───┐                        │x7 │
         │x1 │                        └───┘
         └───┘            ┌───┐
                          │x4 ├───────────────────┐   ┌───┐
                          └─┬─┘                   └──<┤x10│
  ┌─┐        ┌───┐          └────────┐      ┌───┐     └───┘
  │C│        │x2 │                   └─────>┤x8 │                      ┌─┐
  └─┘        └───┘        ┌───┐             └───┘                      │D│
                          │x5 ├<─────────┐                             └─┘
                          └───┘          │
                                       ┌─┴─┐
           ┌───┐          ┌───┐        │x9 │               ┌───┐
           │x3 │          │x6 │        └───┘               │x11│
           └───┘          └───┘                            └───┘


3) На каком-то этапе в эту зависимость попадают и C с D.

                                │
                                v
                               ┌┴┐
                               │Z│
                               └─┘
                                      ┌───┐
         ┌───┐  ┌─────────────────────┤x7 │
   ┌─────┤x1 ├<─┘                     └───┘
   │     └───┘            ┌───┐
   │                      │x4 ├───────────────────┐   ┌───┐
   v                      └─┬─┘                   └──<┤x10├<────────────┐
  ┌┴┐        ┌───┐          └────────┐      ┌───┐     └───┘             │
  │C├───────>┤x2 │                   └─────>┤x8 │                      ┌┴┐
  └─┘        └─┬─┘        ┌───┐             └───┘            ┌────────>┤D│
               │          │x5 ├<─────────┐                   │         └─┘
             ┌─┘          └───┘          │                   │
             v                         ┌─┴─┐                 │
           ┌─┴─┐          ┌───┐        │x9 │               ┌─┴─┐
           │x3 ├─────────>┤x6 │        └───┘               │x11│
           └───┘          └───┘                            └───┘


4) Возникает зависимость C от D.

                                │
                                v
                               ┌┴┐
                               │Z│
                               └─┘
                                      ┌───┐
         ┌───┐  ┌─────────────────────┤x7 │
   ┌─────┤x1 ├<─┘                     └───┘
   │     └─┬─┘            ┌───┐
   │       └<─────────────┤x4 ├───────────────────┐   ┌───┐
   v                      └─┬─┘                   └──<┤x10├<────────────┐
  ┌┴┐        ┌───┐          └────────┐      ┌───┐     └───┘             │
  │C├───────>┤x2 │                   └─────>┤x8 │                      ┌┴┐
  └─┘        └─┬─┘        ┌───┐             └───┘            ┌────────>┤D│
               │          │x5 ├<─────────┐                   │         └─┘
             ┌─┘          └───┘          │                   │
             v                         ┌─┴─┐                 │
           ┌─┴─┐          ┌───┐ ┌─────>┤x9 ├───────┐       ┌─┴─┐
           │x3 ├─────────>┤x6 ├─┘      └───┘       └──────>┤x11│
           └───┘          └───┘                            └───┘


5) Изменяя Z мы подводим эту зависимость к требуемому виду - к Y:
   ослаблением зависимости D->C и усилением C->D.

                                │
                                v
                               ┌┴┐
                               │Z│
                               └─┘
                                      ┌───┐
         ┌───┐  ┌─────────────────────┤x7 │
   ┌-----┤x1 ├<─┘                     └───┘
   |     └─┬─┘            ┌───┐
   |       └<------------─┤x4 ├-------------------┐   ┌───┐
   v                      └─┬─┘                   └-─<┤x10├<------------┐
  ┌┴┐        ┌───┐          └────────┐      ┌───┐     └───┘             |
  │C╞═══════>╡x2 │                   └─────>┤x8 │                      ┌┴┐
  └─┘        └─╥─┘        ┌───┐             └───┘            ╔════════>╡D│
               ║          │x5 ├<─────────┐                   ║         └─┘
             ╔═╝          └───┘          │                   ║
             v                         ┌─┴─┐                 ║
           ┌─╨─┐          ┌───┐ ╔═════>┤x9 ╞═══════╗       ┌─╨─┐
           │x3 ╞═════════>╡x6 ╞═╝      └───┘       ╚══════>╡x11│
           └───┘          └───┘                            └───┘


6) В итоге получаем упрощенную схему:

                                      │
                                      v
                                 ┌─---┼----┐
                                 |   ┌┴┐   |
                                 |   │Z│   |
                                 |   └─┘   |
                                 |         |
                            ┌─┐  |   ╔═╗   |   ┌─┐
                            │C├──|──>╢Y╟───|──>┤D│
                            └─┘  |   ╚═╝   |   └─┘
                                 └---------┘

или еще проще:

                            ┌─┐      ╔═╗       ┌─┐
                            │C├─────>╢Y╟──────>┤D│
                            └─┘      ╚═╝       └─┘


Таким образом мы видим что Y существует изначально лишь в неявном виде.
Работа объекта 3.1 направлена на его выделение из косвенной формы в явную.
На принципе преобразования (косвенная форма)->(явная форма) работают все
объекты 3-го порядка. В какой-то мере аналогией работы 3.1 служит освоение
пользователем сложной программы, от которой у него нет инструкции.
Он знает что примерно должно быть на входе этой программы (объект A), на
выходе (объект B) и как они связаны друг с другом (A->X->B). Путем случайных
настроек (построение Y) он добивается того, что программа перерабатывает
входные данные (объект C) в нужную ему форму (объект D) по требуемому
алгоритму (C->Y->D).

Следует обратить внимание на то, что объект 3.1 может создавать и
неопределенный объект 2-го порядка C->Y->D, если A->X->B тоже неопределенный.

При рассмотрении схемы работы объекта 3.1 возникает вопрос: а можно ли
перейти от пошагового функционирования к непрерывному? Однозначного ответа на
этот вопрос дать пока нельзя, т.к. многое будет зависеть от конкретной
реализации объекта 3.1. Но полностью непрерывной работу сделать по всей
видимости не удастся, поскольку в любом случае принцип построения объекта
C->Y->D основан на пошаговой стратегии "сделаем шаг и посмотрим что из этого
получится". Такая стратегия позволяет приближаться к цели при любых
свойствах среды функционирования. В том числе и таких, когда законы
взаимодействия объектов 1-го порядка выражаются прерывистыми функциями (т.е.
не имеющими одинаковой производной на всей области своего определения) или
очень близкими к ним. "Непрерывная" же "версия" объекта 3.1 работоспособна
только в условиях, когда все законы взаимодействия имеют непрерывный характер
(примером таких закономерностей в нашем мире могут служить закон всемирного
тяготения, закон Кулона и пр.). При этом следует учитывать что непрерывными
должны быть функции всех объектов 2-го порядка, а не только физически
элементарных! Однако внутренняя организация блоков 3.1 может вполне быть и
непрерывной, важно только чтобы пошаговой была работа приведенного выше
общего алгоритма. Забегая немного вперед следует сказать что в схемах 3.2 и
3.3 возможностей для организации непрерывной работы несколько больше.


      <a name="724">7.2.4. Объект класса 3.1 и внешний мир. Эволюционный процесс и
             масштабируемость универсального интерфейса</a>

Рассмотрим свойства объектов и их групп по отношению к внешнему миру. Все,
что находится внутри пунктирной линии (см. схемы 3.1) должно быть как можно
более сильно изолировано от влияния внешнего мира. То есть степень связи
этих объектов с внешним миром должна быть как можно меньше. Еще большей
степенью защиты должен обладать объект - цель A->X->B (или A->X->U для
треугольной схемы). Причем следует учитывать не только влияние объектов
внешнего мира, но и внутренних объектов класса 2.2 друг на друга (особенно
это касается защиты от влияния объекта Z, имеющего широкие возможности для
изменения состояния других объектов). Объекты C и D (B для треугольной схемы),
заключенные внутри пунктирной линии (внешнего мира) создаются объектом 3.1 и
в общем случае нельзя сказать насколько сильно они будут связаны с внешним
миром. Объект Z, будучи эффектором, должен быть, с одной стороны, сильно
связан с внешним миром чтобы изменение его состояния значительным образом
отражалось на состоянии объектов внешнего мира. А с другой стороны он должен
быть полностью управляем со стороны модуля 1, и следовательно быть связан с
внешним миром слабо. Разрешить этот конфликт можно лишь найдя подходящий
компромисс. Забегая вперед скажем что поиск этого компромисса в общем случае
не может быть произведен ни в рамках объекта 2-го порядка (т.е. не существует
алгоритма его поиска), ни даже объектом 3-го порядка. Для его осуществления
необходимо целостное представление (вплоть до мельчайших фрагментов) о
структуре среды функционирования объекта класса 3.1.
Необходим объект 4-го порядка.

Таков в общих чертах объект класса 3.1 - основной строительный блок для
создания объектов 3.2 и 3.3, реализующих соответственно получение знаний
путем подобных и абстрактных построений и имеющих гораздо более развитые
средства сбора информации и влияния на внешний мир.

Введем понятие ЭВОЛЮЦИОННОГО ПРОЦЕССА (он же процесс направленной
самомодификации) - такого процесса, при котором происходит не только
изменение объекта Y, но и самого объекта 3-го порядка. Следует отметить
важную особенность объекта 3.1 - отсутствие в нем эволюционного процесса, так
как 3.1 не изменяется сам для более эффективного движении к цели. Еще одной
особенностью 3.1 является запоминание только одного предыдущего шага, а не
2-х или больше.
Смысл тут таков: если даже возврат к предыдущему шагу окончился неудачей, то
возвращаться к более ранним шагам бессмысленно тем более. Для эффективного
использования информации о более чем 1-м предыдущем шаге требует
использование качественно иного подхода, реализованного в объекте 3.2.

Универсальный интерфейс для одноклеточных микроорганизмов существует на
молекулярном уровне. Однако, в общем случае, уровень организации не имеет
особого значения - важно только чтобы соблюдался принцип полной взаимосвязи
объектов 1-го порядка, которыми оперирует объект 3.1. И если цели можно
достичь только путем изменения размеров, размещения в пространстве и т.п.
макрохарактеристик объектов 1-го порядка, то их взаимовлияния на молекулярном
уровне не нужно. В этом состоит смысл МАСШТАБИРУЕМОСТИ универсального
интерфейса. Более строгое определение понятия масштабируемости универсального
интерфейса можно найти в пункте <a href="#731">"7.3.1. Логические домены. Показатель SN,
глобальные характеристики и элементарные объекты 2-го порядка"</a>).



                    <a name="725">7.2.5. Примеры объектов класса 3.1</a>

Не следует думать что объект класса 3.1 - абстракция. Практически все
одноклеточные живые организмы (а также отдельные клетки многоклеточных
организмов) как раз и являются именно объектами 3.1. У них, как это ни
странно звучит (хотя, по правде говоря, странного тут ничего и нет - например
сине-зеленые водоросли не изменились со времен архейской эры), нет
эволюционного процесса. Все те изменения, которые мы наблюдаем, относятся к
объекту Y. Все остальное для любого из них остается неизменным. Этим в
частности объясняется высокая степень изменчивости некоторых простейших -
изменять Y намного проще чем весь объект 3.1. Несколько особняком стоят
вирусы. Известно что вне чужих клеток они не имеют активного взаимодействия с
внешней средой и сохраняются в основном в виде кристаллов. Скорее всего вирус
- это объект 2-го порядка, хотя возможно мы имеем дело с объектом 3.1,
переходящим в неактивное состояние при определенных условиях (подобно
некоторым видам рыб, вмерзающих зимой в лед, а весной оттаивающих и
продолжающих жить как ни в чем не бывало).

------------------------------------------------------------------------------

                           <a name="73">7.3. Объект класса 3.2</a>

Еще в пункте <a href="#71">"7.1. Принципы построения объектов 3-го порядка. Условие
существования универсального интерфейса. Что такое знания"</a> мы говорили о том,
что знания можно получить в принципе 3-мя способами: случайным перебором, по
аналогии и путем логического вывода. Объект 3.1 реализует 1-й путь. Объект
3.2 получает знания 2-м способом. Что это означает? Это означает что он
отслеживает и запоминает явления, происходящие во внешнем мире (независимо от
того, связаны они с C->Y->D напрямую, подобно обратной связи, или нет), а
затем использует эту информацию для достижения цели. Не вдаваясь в
подробности, о которых будет рассказано ниже, обрисуем в общих чертах принцип
работы объекта 3.2. Он построен на основе объекта 3.1 путем добавления памяти
и средств ее управления:

1. Берется объект 3.1:

                                ┌───────────┐
                                │    3.1    │
                                ├-----------┤
                                │  A->X->B  │
                                │Uпредыдущее│
                                │Zпредыдущее│
                                │Zтекущее   │
                                └──┬─────┬──┘
                                   ^     v
                              ┌----┼-----┼----┐
                              |   ┌┴┐   ┌┴┐   |
                              |   │U│   │Z│   |
                              |   └─┘   └─┘   |
                              | ┌─┐  ╔═╗  ┌─┐ |
                              | │C├─>╢Y╟─>┤D│ |
                              | └─┘  ╚═╝  └─┘ |
                              └---------------┘

2. Добавляются рецепторы (устройства для сканирования состояния окружающей
   среды), память и средства ее заполнения (объект 2-го порядка под названием
   M2.1):

                             ┌───────────┐
                             │    3.1    │
                             ├-----------┤
                             │  A->X->B  │
                             │Uпредыдущее│
                             │Zпредыдущее│
                             │Zтекущее   │
                             └──┬─────┬──┘
                                │     │  ┌──────┐
                                │     │  │Память│
                                │     │  └──┬───┘
                                │     │     ^
                                │     │  ╔══╧═╗
                                │     │  ║M2.1║
                                │     │  ╚══╤═╝
                                ^     v     ^
                           ┌----┼-----┼-----┼---┐
                           |   ┌┴┐   ┌┴┐   ┌┴┐  |
                           |   │U│   │Z│   │R│  |
                           |   └─┘   └─┘   └─┘  |
                           |    ┌─┐  ╔═╗  ┌─┐   |
                           |    │C├─>╢Y╟─>┤D│   |
                           |    └─┘  ╚═╝  └─┘   |
                           └--------------------┘

3. Добавляются эффекторы (в противоположность рецепторам их задачей является
   воздействие на среду функционирования) и средства управления ими,
   использующие информацию из памяти (объект 2-го порядка M2.2):

                          ┌───────────┐
                          │    3.1    │
                          ├-----------┤
                          │  A->X->B  │
                          │Uпредыдущее│
                          │Zпредыдущее│
                          │Zтекущее   │
                          └──┬─────┬──┘
                             │     │  ┌───────────┐
                             │     │  │  Память   │
                             │     │  └──┬─────┬──┘
                             │     │     ^     v
                             │     │  ╔══╧═╗ ╔═╧══╗
                             │     │  ║M2.1║ ║M2.2║
                             │     │  ╚══╤═╝ ╚═╤══╝
                             ^     v     ^     v
                        ┌----┼-----┼-----┼-----┼---┐
                        |   ┌┴┐   ┌┴┐   ┌┴┐   ┌┴┐  |
                        |   │U│   │Z│   │R│   │E│  |
                        |   └─┘   └─┘   └─┘   └─┘  |
                        |       ┌─┐  ╔═╗  ┌─┐      |
                        |       │C├─>╢Y╟─>┤D│      |
                        |       └─┘  ╚═╝  └─┘      |
                        └--------------------------┘

4. Производится связывание логики работы 3.1 и модулей управления памятью
   M2.1 и M2.2, а Z войдет в состав E:

                                 ┌───────────┐
                                 │    3.1    │
                                 ├-----------┤
                                 │  A->X->B  │
                                 │Uпредыдущее│
                                 │Eпредыдущее│
                              ┌─>┤Eтекущее   │
                              │  └──┬─────┬──┘
                              │┌────┘     └────┐
                              ││ ┌───────────┐ │
                              ││ │  Память   │ │
                              ││ └──┬─────┬──┘ │
                              ││    v     ^    │
                              ││ ╔══╧═╗ ╔═╧══╗ │
                              │└<╢    ║ ║    ╟<┘
                              │  ║M2.2║ ║M2.1║
                              ├─>╢    ║ ║    ║
                              │  ╚══╤═╝ ╚═╤══╝
                              ^     v     ^
                         ┌----┼-----┼-----┼----┐
                         |   ┌┴┐   ┌┴┐   ┌┴┐   |
                         |   │U│   │E│   │R│   |
                         |   └─┘   └─┘   └─┘   |
                         |    ┌─┐  ╔═╗  ┌─┐    |
                         |    │C├─>╢Y╟─>┤D│    |
                         |    └─┘  ╚═╝  └─┘    |
                         └---------------------┘

5. Получается следующая конструкция - воздействие 3.1 на C->Y->D происходит
   через модули M2.1 и M2.2, корректирующие управление со стороны 3.1 при
   помощи информации из памяти:

                              ┌───────────┐
                              │    3.1    │
                              └─────┬─────┘
                                    ^
                                    │
                                    v
                              ╔═════╧═════╗   ┌──────┐
                              ║M2.1 и M2.2╟<─>┤Память│
                              ╚═════╤═════╝   └──────┘
                                    ^
                                    │
                                    v
                         ┌----------┴----------┐
                         |    ┌─┐  ╔═╗  ┌─┐    |
                         |    │C├─>╢Y╟─>┤D│    |
                         |    └─┘  ╚═╝  └─┘    |
                         └---------------------┘

Теперь подробнее. Явления, протекающие во внешнем мире, являются объектами
2.2, изменяющими объекты 1.1. Непосредственно работать с интерпретаторами
объектов 2.2 мы не можем. Значит, остается один вариант - отслеживать
изменения состояний объектов 1.1. Это можно сделать лишь одним способом - при
помощи т.н. СЛЕДЯЩИХ объектов 2-го порядка. На их входах будут объекты 1-го
порядка среды функционирования, состояние которых необходимо отслеживать.
Таким образом возникает множество РЕЦЕПТОРОВ - устройств сбора информации о
внешнем мире. На выходе у устройства сбора информации находится МАТРИЦА
РЕЦЕПТОРОВ - множество непрерывно меняющих свое состояние объектов 1.1,
каждый из которых служит входом следящего объекта 2.2. В рамках 3.2 объект
2-го порядка, обслуживающий состояние U называется ГЛАВНЫМ РЕЦЕПТОРОМ.
Основное отличие главного рецептора от всех остальных рецепторов заключено в
его неизменности на всем протяжении времени существования 3.2 (поскольку
любое изменение означает искажение передаваемой по обратной связи информации
о достижении цели, влекущее за собой крайне нежелательные последствия). Дело
в том, что в 3.2 существует эволюционный процесс. В результате его протекания
матрица рецепторов постоянно меняется.

В объекте 3.1 инструментом воздействия на среду функционирования служит
объект 1-го порядка Z. Как уже говорилось, он может быть составлен из
нескольких физически элементарных объектов 1-го порядка. И если в относительно
небольшой среде функционирования объекта 3.1, Z еще может быть элементарным
объектом, то в случае со средой функционирования 3.2 такое уже вряд ли
возможно. Чем больше и сложнее среда функционирования, тем труднее отыскать
элементарный объект 1-го порядка, способный эффективно на нее воздействовать.
Приходится применять несколько физически элементарных объектов 1-го порядка.
Близкие по своим свойствам физически элементарные объекты объединяются в
ЭФФЕКТОР. А несколько эффекторов образуют ЭФФЕКТОРНУЮ МАТРИЦУ.

Третий компонент, необходимый для работы механизма запоминания 3.2 - это
величина dU=Uпредыдущее-U. По ее значению можно определить удачность
сделанного шага: удачный шаг будет обладать dU>0, неудачный dU<0, нейтральный
dU=0. Чем больше dU, тем удачнее шаг. Соответственно для i-го блока памяти
получаем dUi=Uiпредыдущее-Ui.

Итак, информация получена, теперь ее необходимо запомнить. Однако это не
так-то просто как кажется. Число рецепторов и эффекторов в матрицах велико,
состояний у каждого из них много. И если запоминать каждый образ матриц,
отличающийся один от другого состоянием одного рецептора или эффектора, то
потребуется колоссальное количество памяти. Конечно, в реальности это
невозможно. Поэтому тут используется следующий прием: запоминаются не все
подряд состояния, а только те, что привели к уменьшению значения U, т.е для
которых dU>0. Вначале память пуста и в нее заносятся все следующие друг за
другом состояния матриц рецепторов, эффекторов и соответствующие значения
dUi, пока память не заполнится полностью. После того, как память заполнена,
начинает действовать правило - запоминаются лишь те состояния
рецепторно-эффекторных матриц, которые имеют dUi больше минимального значения
уже запомненных dUi.

В процессе функционирования 3.2 будут встречаться ситуации, в которых
значение dUi будет очень мало. И если срок существования объекта 3.2
значителен, то в итоге вся память будет заполнена такого рода уже устаревшей
информацией еще задолго до достижения цели. При этом более новую информацию,
хотя и с меньшим dUi, но более важную ввиду своей новизны некуда будет
записывать. Поэтому с течением времени все значения dUi должны самопроизвольно
постепенно уменьшаться. В этом случае мы имеем дело с процессом забывания.

Опуская подробности построения блока памяти, о которых будет еще рассказано,
перейдем к последней стадии - принципу обработки имеющейся информации. Что мы
имеем: блоки памяти с образами рецепторно-эффекторных матриц и dUi, текущее
состояние рецепторов и эффекторов. Записанные в памяти шаги уже привели к
уменьшению U - приблизили к цели. Если текущее состояние матрицы рецепторов
похоже на состояние записанное в i-м блоке, то значит для уменьшения U можно
просто привести эффекторную матрицу в записанное в этом блоке состояние, а не
искать его случайным способом как в 3.1! Но объект 3.2 должен стремиться к
достижению цели, и если в памяти нет шагов, при которых она была достигнута,
то простое копирование память->эффекторы не приведет к цели. Поэтому кроме
копирования должен быть и процесс случайного поиска, позволяющий создавать
новые состояния эффекторной матрицы. Для этого перед каждым копированием
память->эффекторы в копируемый образ вносятся небольшие случайные изменения.

Введем переменную Ki - коэффициент отличия, показывающий насколько похоже
текущее состояние матрицы рецепторов на образ матрицы рецепторов, отраженную
в i-м блоке памяти. Состояние матрицы эффекторов при этом будет формироваться
по принципу суперпозиции - чем больше у данного блока памяти значение Ki и
чем меньше dUi (если 2 блока памяти похожи, то лучше применить тот у которого
dUi меньше), тем больше будет похоже текущее состояние матрицы эффекторов на
свой образ из данного банка памяти.

Естественно, полностью похожих ситуаций практически не бывает. Чем меньше
имеется похожих состояний, тем больше в формировании эффекторной матрицы доля
генератора случайности. Таким образом, с учетом вышеописанных процессов
заполнения блоков памяти, объект класса 3.2 использует весь предыдущий опыт
своего существования и способен выискивать аналогию в текущих ситуациях, если
они хотя бы чем-то напоминают уже пережитое. Все это позволяет достигать цели
гораздо эффективнее чем объект 3.1. Процесс мышления при этом отсутствует.

Действия объекта 3.2 происходят по аналогии с его же действиями в более
ранних похожих ситуациях. Если представить внешний мир в виде функции
R=M(E,F), где R - матрица рецепторов, E - матрица эффекторов, F - другие
объекты класса 1.1 (отличные от E), M - внешний мир, то фактически объект 3.2
проводит интерполяцию/экстраполяцию функции R=M(E,F).

Необходимо также отметить один важный момент - казалось бы, стоит записывать
в память не только состояния матриц приблизивших к цели, но и отдаливших от
нее. Затем их обработка происходит по принципу обратного знака - если
допустим записанное состояние какого-то эффектора было равно 10, то на этот
эффектор посылается значение -10, аналогично и для других эффекторов.
При этом якобы мы приблизимся к цели. Это ошибка. Такие рассуждения верны
только для случая, когда функция R=M(E,F) нечетная, т.е. M(-E,F)=-M(E,F) при
условии неизменности состояния объектов F. Естественно, это далеко не всегда
так. Но в эпсилон-окрестности точки E можно утверждать, что свойства функции
M(E,F) будут изменяться сообразно изменению аргумента E. И это следует
учитывать при формировании состояния эффекторной матрицы.

Таков принцип работы объекта 3.2. Однако, являясь надмножеством объекта 3.1,
он добавляет массу новых возможностей принципиального характера. И они уже не
могут быть выполнены в рамках тех свойств среды функционирования, которые
характерны для 3.1. Требуется  дополнительное требование к среде
функционирования.


    <a name="731">7.3.1. Логические домены. Показатель SN, глобальные характеристики
           и элементарные объекты 2-го порядка</a>

Как уже отмечалось, объект 3.2 действует по аналогии с ранее уже
осуществленными действиями. Если текущее состояние рецепторов сильно похоже
на образ матрицы рецепторов в одной из ячеек памяти и состояние матрицы
эффекторов, запечатленное в той же ячейке, привело к приближению цели, то
объект 3.2 приведет текущее состояние матрицы эффекторов в состояние, близкое
к образу из памяти в надежде что это приблизит его к цели как и раньше. Если
же это условие не будет выполняться, то возросшая сложность 3.2 по сравнению
с 3.1 теряет всякий смысл. Очевидно что это зависит не от 3.2, а от среды
функционирования. Всегда должно выполняться условие: похожие по виду
явления должны вызываться похожими причинами. То есть должны иметь место
однозначные зависимости "похожие явления - похожие причины". Совокупность
таких зависимостей (они, разумеется, объекты 2-го порядка), где явления и
вызывающие их причины различаются незначительными деталями, мы будем называть
ЛОГИЧЕСКИМ ДОМЕНОМ (сокращенно - ЛД).

Именно существование в среде функционирования логических доменов и позволяет
строить объекты класса 3.2. Очевидно что логические домены вступают в
противоречие с универсальным интерфейсом, так как в идеале изменяющиеся
объекты 1-го порядка одного логического домена не должны влиять на своих
собратьев по порядку в другом логическом домене. Разрешить этот конфликт
можно компромиссно: объекты разных доменов хоть и влияют друг на друга, но
очень слабо. И по сравнению с внутридоменным взаимовлиянием им можно
пренебречь.

Логические домены реально существуют в нашем мире: рассматривая к примеру
атомы и молекулы как объекты класса 1.1, мы можем принять небольшие твердые
тела, состоящие из них за логические домены. Внутри этих тел атомы и молекулы
взаимодействуют достаточно сильно: это и температура тела и его заряд и т.д.,
в то время как молекулы и атомы разных тел практически не влияют друг на
друга. Еще одним примером логических доменов могут служить различные
закономерности, наблюдаемые в природе: например связанные друг с другом
циклические процессы - смена времен года и связанные с ними изменения в живой
природе и т.п.. Искусственно созданные объекты 2-го порядка: строения,
транспортные средства, телекоммуникации и т.д. - тоже являются логическими
доменами. При этом составляющие их детали играют роль взаимосвязанных
объектов 1-го порядка. Одним словом, любой сложный объект, воспринимаемый
нами как единое целое, может считаться логическим доменом. Например автомобиль
состоит из множества узлов и деталей: двигатель, кузов, колеса, рама, кабина
и т.д.. Каждый такой узел - логический домен, поскольку скажем двигатель
можно отсоединить и он будет работать (на стенде или на другом автомобиле)
точно так же. В этом проявляется свойство независимости объектов, строящих
логический домен, от объектов другого логического домена. Но однако тем не
менее они остаются связанными универсальным интерфейсом. Двигатель испытывает
гравитационное, электромагнитное взаимодействие со всеми остальными объектами
Вселенной. В свою очередь и двигатель также состоит из логических доменов:
поршней, цилиндров, валов и др.. Очевидно и автомобиль и двигатель - объекты
2-го порядка. Мы лишь упрощенно называем их объектами 1-го порядка: 1.1, а
нужно 2.1. Более подробно о такой вложенности логических доменов мы поговорим
далее, в пункте <a href="#742">"7.4.2. Бесконечные логические домены. Центральная теорема и
ее следствия"</a>.

Определим критерий, по которому можно определить какие объекты 2-го порядка
образуют логический домен, а какие нет.
Рассмотрим систему из 4-х произвольных объекта класса 2.2: A1, A2, A3 и A4,
причем число возможных состояний i-го объекта 2-го порядка |Ai|, i=1..4,
конечно.
Проведем переход 2.2 -> 2.1 (подробнее о возможности такого перехода
см. <a href="#5">"5. Объекты 2-го порядка"</a>) и перенумеруем их возможные состояния цифрами
1, 2, 3 и т.д.. Поскольку эти объекты образуют систему уравнений, а |Ai|
конечно, число решений будет также конечно. Представим все возможные решения
в виде набора различных состояний объектов:

               ┌──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┐
           A1  │1 │2 │3 │1 │3 │2 │2 │2 │3 │1 │1 │2 │1 │3 │2 │1 │
               └──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┘
               ┌──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┐
           A2  │3 │2 │1 │3 │1 │2 │2 │2 │1 │3 │3 │2 │3 │1 │2 │3 │
               └──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┘
               ┌──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┐
           A3  │1 │1 │2 │1 │2 │3 │4 │5 │8 │1 │2 │1 │1 │6 │7 │1 │
               └──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┘
               ┌──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┐
           A4  │1 │2 │3 │4 │5 │6 │7 │8 │9 │10│11│12│13│14│15│16│
               └──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┘

Как видим, |A1|=3, |A2|=3, |A3|=3, |A4|=16. Обозначив всю систему как один
объект класса 2.1 - объект M, при этом |M|=16. Рассмотрим теперь в качестве
объектов 2.1 следующие сочетания: (A1, A2); (A1, A3); (A2, A3); (A1, A2, A3);
(Aj, A4), где j=1..3.

Пример получения из A1 и A2 объекта (A1, A2):

         ┌                                                        ┐
         │     ┌──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┐  │
         │ A1  │1 │2 │3 │1 │3 │2 │2 │2 │3 │1 │1 │2 │1 │3 │2 │1 │  │
         │     └──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┘  │
         │     ┌──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┐  │
         │ A2  │3 │2 │1 │3 │1 │2 │2 │2 │1 │3 │3 │2 │3 │1 │2 │3 │  │
         │     └──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┘  │
         └                                                        ┘

                                       │
                                       v

               ┌──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┐
      (A1,A2)  │1 │2 │3 │1 │3 │2 │2 │2 │3 │1 │1 │2 │1 │3 │2 │1 │
               └──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┴──┘

В получившимся объекте (A1, A2) цифрами 1, 2, 3 обозначены его состояния.
Получим что: |(A1, A2)|=3; |(A1, A3)|=10; |(A2, A3)|=10; |(A1, A2, A3)|=11;
|(Aj, A4)|=16. Введем понятие СТЕПЕНИ НЕЗАВИСИМОСТИ объектов (в данном случае
объектов класса 2.2):

                                      |(A1, A2, ..., Ai, ..., An)|
   SN(A1, A2, ..., Ai, ..., An) = ─────────────────────────────────────, где
                                  min(|A1|, |A2|, ..., |Ai|, ..., |An|)

min(|A1|, |A2|, ..., |Ai|, ..., |An|) - минимальное значение из |A1|, |A2|,
..., |Ai|, ..., |An|.

Очевидно, что чем ближе значение SN(A1, A2, ..., Ai, ..., An) подходит к 1,
тем более зависимы друг от друга состояния объектов A1, A2, ..., Ai, ..., An,
а значит тем лучше они удовлетворяют условию их нахождения в одном логическом
домене.

В рассмотренном нами примере с A1, A2, A3 и A4 мы получаем следующие значения
SN: SN(A1, A2)=1, SN(A1, A3)=10/3, SN(A2, A3)=10/3, SN(A1, A2, A3)=11/3 и
SN(Aj, A4)=16/3. Отсюда очевидно что A1 и A2 лучше всего отвечают требованию
их нахождения в одном логическом домене, а (Aj, A4) - хуже всего.
В общем случае SN может принимать значения от 1 до бесконечности. Очевидно
что SN любого произвольного логического домена можно сколь угодно близко
приближать 1, убирая лишние процессы (можно вообще дойти до 1 объекта класса
2.2 в составе логического домена, при этом SN=1).

Рассмотрим внешний мир (где существуют логические домены), в виде системы
объектов 2-го порядка:

   ┌
   │A1->X1->B1
   │A2->X2->B2
   │..........
   ┤Ai->Xi->Bi
   │..........
   │An->Xn->Bn
   └

Очевидно что SN одних групп объектов будет больше, других - меньше.
Разделим эту систему на группы объектов с минимальным SN, таким образом, что
один и тот же объект не будет входить только в одну группу. Рассмотрим теперь
каждую группу как объект 2-го порядка. Получим новую систему уравнений:

   ┌
   │C1->Y1->D1
   │C2->Y2->D2
   │..........
   ┤Cj->Yj->Dj
   │..........
   │Cm->Ym->Dm
   └

, где m<n, а Ai->Xi->Bi может иногда совпасть с Cj->Yj->Dj. Затем и в этой
системе выделим группы объектов и рассмотрим их как объекты 2-го порядка,
аналогично предыдущему случаю. И так далее. В результате мы получим что весь
внешний мир - это логический домен N-го уровня, состоящий из более мелких
логических доменов уровня N-1. Логические домены уровня N-1 состоят из
логических доменов уровня N-2 и т.д.. Следовательно, внешний мир можно таким
образом разбить на логические домены, что они образуют ВЛОЖЕННУЮ СТРУКТУРУ
(более подробно про вложенную структуру будет рассказано в <a href="#742">"7.4.2. Бесконечные
логические домены. Центральная теорема и ее следствия"</a>).
Очевидно что своя вложенная структура логических доменов существует у любой
системы с связанными универсальным интерфейсом объектами 1-го порядка.

Показатель SN универсален. Он применим для определения степени определенности
процесса A->X->B: чем ближе SN(A, B) к 1, тем более определен объект 2-го
порядка. В простейшем случае вся система объектов 2-го порядка и есть
один-единственный логический домен (если SN для любой комбинации объектов
2-го порядка равен 1).

Введем понятие ГЛОБАЛЬНОЙ ХАРАКТЕРИСТИКИ или ГЛОБАЛЬНЫХ ПАРАМЕТРОВ логических
доменов. Глобальная характеристика - это характеристика объекта 2-го порядка,
состоящего из 2-х или более логических доменов, и отсутствующая в каждом из
объектов 2-го порядка, образующих данные логические домены.

Поясним суть этого определения на примере. Пусть мы имеем 2 логических домена:

         ┌
         │A1->X1->B1
   ЛД1:  ┤A2->X2->B2
         │A3->X3->B3
         └

         ┌
   ЛД2:  ┤A4->X4->B4
         │A5->X5->B5
         └

Приведем их в форму объектов класса 2.1:

                                 ┌──┬──┐
                                 │A1│B1│
                                 ├──┼──┤
                                 │A2│B2│ = L1
                                 ├──┼──┤
                                 │A3│B3│
                                 └──┴──┘

                                 ┌──┬──┐
                                 │A4│B4│
                                 ├──┼──┤ = L2
                                 │A5│B5│
                                 └──┴──┘

За счет существования вложенной структуры логических доменов мы можем
рассмотреть их как новый логический домен: L1->Z->L2. Этот объект 2-го
порядка и будет являться глобальными характеристиками для ЛД1 и ЛД2. Таким
образом, глобальные характеристики - это фактически упрощение вида
(n 2.2)->(2.1)->(1.1), при котором опускаются несущественные для внешнего
наблюдателя детали. Глобальные характеристики существуют для любого
логического домена, поскольку любой логический домен состоит как минимум из
2-х объектов класса 2.2, каждый из которых можно рассматривать как логический
домен. Практическое применение глобальных характеристик мы рассмотрим в
главе, посвященной объектам класса 3.3.

Рассматривая логические домены необходимо вспомнить понятие математически и
физически элементарного объекта 2-го порядка (о них мы говорили в <a href="#5">"5. Объекты
2-го порядка"</a>): очевидно что любой логический домен состоит как минимум из
2-х физически элементарных объектов 2-го порядка.

На основе понятия вложенной структуры логических доменов можно более строго
определить масштабируемость универсального интерфейса. Универсальный
интерфейс i-го масштаба описывается системой уравнений, отражающей
взаимодействие логических доменов i-го уровня. В нижнем пределе, при i=1,
универсальный интерфейс 1-го масштаба совпадает с универсальным интерфейсом
физически элементарных объектов 2-го порядка (см. <a href="#71">"7.1. Принципы построения
объектов 3-го порядка. Условие существования универсального интерфейса. Что
такое знания"</a>).

Существование логических доменов не обязательно влечет за собой цикличность в
поведении среды функционирования. Но желательно чтобы состояния среды
функционирования повторялись хотя бы приближенно, т.к. в противном случае все
преимущества 3.2 по сравнению с 3.1 теряют смысл.


                    <a name="732">7.3.2. Устройство объекта класса 3.2</a>

                        Общая схема объекта класса 3.2
                               ┌---------------┐
╔═══╗                          | ┌─┐  ╔═╗  ┌─┐ |                        ╔═══╗
║AU1╟<─────────────────────────┼─┤A├─>╢X╟─>┤B├─┼───────────────────────>╢BU2║
╚╤══╝                          | └─┘  ╚═╝  └─┘ |                        ╚══╤╝
 │                             |      Цель     |                           │
 │  ┌──┐                       └---------------┘                     ┌──┐  │
 └>─┤  │                            ╔═════╗                          │  ├<─┘
    │U1├───────────────────────────>╢U1U2U╟<─────────────────────────┤U2│
 ┌>─┤  │                            ╚══╤══╝                          │  ├<─┐
 │  └──┘                               v                             └──┘  │
 │                                     └──────┐                            │
 │┌---------------------------------------─┐  │  ┌------------------------┐│
 │|             Модуль M2.1                |  │  |    Объект класса 3.1   |│
 │| ┌─────────────────────────────┐        |┌─┴─┐|                        |│
 │| │ ┌────────────────────────┐  │        |│ U │|                        |│
 │| │ │ ┌-------------------┐  v  v        |└┬─┬┘| ╔═════════════════════╗|│
 │| │ │ |Ячейки памяти 4 шт.| ╔╧══╧╗       | v v | ║      Модуль M1      ║|│
 │| │ │ |      ┌─────────┐  | ║    ╟───────┼─┘ └─┼─╢                     ║|│
 │| │ │ |      │E1,R1,dU1├<─┼>╢    ║       |     | ╚═════╤══════╤═╤══╤══╤╝|│
 │| │ │ |      └────────┬┘  | ║    ║       |     |       ^      ^ ^  ^  ^ |│
 │| │ │ |    ┌─────────┐│   | ║    ║       |     |       │      │ │  │  │ |│
 │| │ │ |    │E2,R2,dU2├│─<─┼>╢    ║       |     |       v      v v  │┌─┴┐|│
 │| │ │ |    └────────┬┘│   | ║M2.1║       |     | ┌─────┴─────┐│ │  ││ГС│|│
 │| │ │ |  ┌─────────┐│ │   | ║    ╟─<─────┼─────┼─┤Uпредыдущее││ │  │└──┘|│
 │| │ │ |  │E3,R3,dU3├│─│─<─┼>╢    ║       |     | └───────────┘│ │  │    |│
 │| │ │ |  └────────┬┘│ │   | ║    ║       |     |   ┌──────────┴┐│  │    |│
 │| │ │ |┌─────────┐│ │ │   | ║    ║       |     |   │Eпредыдущее││  │    |│
 │| │ │ |│E4,R4,dU4├│─│─│─<─┼>╢    ║       |     |   └───────────┘│  │    |│
 │| │ │ |└────────┬┘│ │ │   | ╚════╝       |     |     ┌──────────┴┐ │    |│
 │| │ │ └---------┼-┼-┼-┼---┘              |     |     │ Eтекущее  │ │    |│
 │| │ │           │ │ │ │                  |     |     └─────┬─────┘ │    |│
 │└-┼-┼-----------┼-┼-┼-┼------------------┘     └-----------┼-------┼----┘│
 │  │ │           │ │ │ │                                    │       │     │
 │  │ │    ┌------┼-┼-┼-┼------------------------------------┼-┐     │     │
 │  │ │    |      │ │ │ │                                    ^ |     │     │
 │  │ │    |      │ │ │ │      Модуль M2.2                   │ |     │     │
 │  │ │    |      v v v v                                    │ |     │     │
 │  │ │    |╔═════╧═╧═╧═╧════════════════════════════════════╧╗|     │     │
 │  │ │    |║                       M2.2                      ║|     │     │
 │  │ │    |╚═════════════════╤═══════╤═══════════════════════╝|     │     │
 │  │ │    |                  ^       v                        |     │     │
 │  │ │    |                  │     ┌─┴─┐                      |     │     │
 │  │ │    |                  │     │Em │                      |     │     │
 │  │ │    |                  │     └─┬─┘                      |     │     │
 │  │ │    └------------------┼-------┼------------------------┘     │     │
 │  │ │                       │       └──────────┐                   │     │
 │  │ └───────────────────────│─────────────────┐│┌──────────────────┘     │
 │  └───────────────────────┐ │                 │v│                        │
 │                       ┌--┼-┼-----------------┼┼┼--┐                     │
 │                       | ┌┴─┴┐               ┌┴┴┴┐ |                     │
 │                       | │ R │               │ E │ |                     │
 │                       | └───┘  Внешний мир  └───┘ |                     │
 │                       |     ┌---------------┐     |                     │
 │       ╔═══╗           |     | ┌─┐  ╔═╗  ┌─┐ |     |       ╔═══╗         │
 └──────<╢CU1╟<──────────┼─────┼─┤C├─>╢Y╟─>┤D├─┼─────┼──────>╢DU2╟>────────┘
         ╚═══╝           |     | └─┘  ╚═╝  └─┘ |     |       ╚═══╝
                         |     └---------------┘     |
                         └---------------------------┘


Приведем упрощенный (просто показывающий суть идеи и неоптимизированный)
алгоритм работы объекта 3.2, полагая что имеется 2 эффектора, 3 рецептора,
и 4 ячейки памяти, содержащие такие значения:

   ((E11, E12), dU1, (R11, R12, R13))
   ((E21, E22), dU2, (R21, R22, R23))
   ((E31, E32), dU3, (R31, R32, R33))
   ((E41, E42), dU4, (R41, R42, R43))

--------> Начало алгоритма:

0. Инициализация:
    а) Получение значения U
    б) Uпредыдущее := U
    в) Eтекущее := ГС
    г) Eпредыдущее := Eтекущее

1. Получение значений U, R, E

2. Если U=0, то цель достигнута. Перейти на пункт 1.

---------------------------логика работы 3.1----------------------------------

3. Если U<=Uпредыдущее, то сделанный шаг оказался удачным (или нейтральным),
   3.1 делает новый шаг:
    а) Получает значение Eтекущее: Eтекущее := E
    б) Запоминается состояние U: Uпредыдущее := U
    в) Запоминается состояние Eпредыдущее: Eпредыдущее := Eтекущее
    г) Случайно генерируется новое состояние Eтекущее: Eтекущее := ГС

4. Если U>Uпредыдущее, то сделанный шаг оказался неудачным - привел к
   увеличению значения U, 3.1 возвращается назад:
    а) Запоминается состояние U: Uпредыдущее := U
    б) Осуществляется возврат к состоянию Eпредыдущее: Eтекущее := Eпредыдущее
    в) Так как в случае если и этот шаг окажется неудачным смысла
       возвращаться уже нет, поэтому 3.1 не сохраняет Eпредыдущее, а
       присваивает ему случайное значение: Eпредыдущее := ГС

---------------------------логика работы M2.1---------------------------------

5. dU := Uпредыдущее-U

6. Если имеются свободные ячейки памяти и dU>0, то записать в первую
   свободную ячейку (с номером i):
    Ei := E
    Ri := R
    dUi := dU
   Перейти на пункт 8.

7. Если dU>0, то шаг удачный, M2.1 производит заполнение памяти:

    а) Рассчитываются коэффициенты Ki по формуле:

        (1) Ki=sqrt((Ri1-R1)^2+(Ri2-R2)^2+(Ri3-R3)^2)),

        где i=1..4, sqrt - функция извлечения квадратного корня,
        значок ^ - знак возведения в степень (в данном случае в квадрат).

    б) Произвести уменьшение значения dUi у всех ячеек памяти по формуле:

                          Ki+1
        (2) dUi=dUi*(1- ────────),
                         H*Ki+1

        где H - большое положительное число (В принципе H можно рассчитать
        как произведение мощностей множества состояний рецепторов:
        H=|R1|*|R2|*...|Rm|).

    в) Если dU>=min(dUi), то записать в ячейку с наименьшим dUi текущее
       состояние рецепторно-эффекторных матриц (R, E) и dU.
       min(dUi) - минимальное значение dUi

8. M2.2 проводит подготовку к очередному шагу:

    а) Рассчитывает коэффициенты влияния Qi каждой ячейки памяти на будущий
       облик эффекторной матрицы. Чем больше Qi, тем меньше образ матриц
       запечатленный в i-й ячейке памяти похож на текущее состояние
       рецепторно-эффекторных матриц. Если Qi=0, то различия отсутствуют.

       (3) Qi=Ki/sqrt(3*dUi)=sqrt(((Ri1-R1)^2+(Ri2-R2)^2+(Ri3-R3)^2)/(3*Ui))

    б) Учитывает информацию поступающую из 3.1. Для этого рассчитывается
       коэффициент влияния массива Eтекущее на будущий облик эффекторной
       матрицы. Он рассчитывается как среднее арифметическое значений
       коэффициентов Qi ячеек памяти:

                Q1+Q2+Q3+Q4
       (4) Q0=──────────────
                     4

       Это позволяет вносить в процесс формирования матрицы эффекторов
       необходимый компонент случайности.

    в) Формируется образ эффекторной матрицы Em - расчет каждого компонента,
       j=1..3:

       (5) Emj=( (Eтекущееj)/Q0+(E1j)/Q1+(E2j)/Q2+(E3j)/Q3+(E4j)/Q4 )*
               *( 1/Q0+1/Q1+1/Q2+1/Q3+1/Q4 )^(-1)=

             ┌   4       ┐ ┌   4       ┐^(-1)
             │ ____      │ │ ____      │
             │ \     Eij │ │ \      1  │
           = │  >   ─────│*│  >   ─────│ =
             │ /___   Qi │ │ /___   Qi │
             │  i=0      │ │  i=0      │
             └           ┘ └           ┘

                    E0j*Q1*Q2*Q3*Q4+E1j*Q0*Q2*Q3*Q4+E2j*Q0*Q1*Q3*Q4
           = ──────────────────────────────────────────────────────────── +
              Q1*Q2*Q3*Q4+Q0*Q2*Q3*Q4+Q0*Q1*Q3*Q4+Q0*Q1*Q2*Q4+Q0*Q1*Q2*Q3

                             E3j*Q0*Q1*Q2*Q4+E4j*Q1*Q2*Q3
           + ────────────────────────────────────────────────────────────
              Q1*Q2*Q3*Q4+Q0*Q2*Q3*Q4+Q0*Q1*Q3*Q4+Q0*Q1*Q2*Q4+Q0*Q1*Q2*Q3


       Видно что если, например Q4=0, то Ej=Ej4, т.е. на матрицу эффекторов
       будет передано без изменения состояние образа эффекторной матрицы из
       4-й ячейки памяти.

    г) Чтобы избежать появления коллизий с 3.1, нужно перезаписать Eтекущее
       значением Em: Eтекущее := Em

------------------------------Производство шага-------------------------------

9. Производится шаг - матрица эффекторов переводится в состояние Em. Перейти
   на пункт 1.

--------> Конец алгоритма

Комментарии к алгоритму:

 - формула (2) реализует функцию т.н. ИЗБИРАТЕЛЬНОГО ЗАБЫВАНИЯ. В среде
   функционирования 3.2 может быть множество логических доменов, поэтому
   при переходе в область другого логического домена зависимость E=M(R,F)
   претерпит изменения: реальная взаимосвязь U=M(R,F) будет другой, чем
   образы эффекторно-рецепторных матриц в памяти, оставшиеся со старого
   домена - может случиться так, что Ri будет примерно равным R, а при попытке
   скопировать Ei в E, dU станет совсем другим чем dU. Поэтому при переходе в
   новый домен желательно побыстрее заполнить память новой информацией.
   Поскольку заполнение памяти происходит путем записи информации в ячейки с
   минимальным dUi, то процесс забывания должен обеспечить в уменьшение dUi в
   зависимости от степени похожести текущего состояния рецепторно-эффекторных
   матриц с i-й ячейкой. В пределе получается такая зависимость:
   dUi=dUi/H, при Ki=бесконечность (т.е. когда вообще нет никакого сходства)
   dUi=0, при Ki=0 (100%-е сходство)

 - в памяти отсутствуют значения с dUi<=0, запоминаются только удачные шаги

 - так же как и в случае с объектом класса 3.1, приведенные схемы и алгоритм
   работы не являются описание способа достижения цели. Они говорят лишь о
   последовательности срабатывания блоков и только. Объект 3.2 фактически
   проводит интерполяцию/экстраполяцию поведения внешнего мира по узловым
   точкам - ячейкам памяти.

 - Из (5) очевидно что в памяти не должно быть 2-х или более ячеек памяти с
   Qi=0, поскольку возникает деление на 0.

 - ГС формирует E0 по принципу: каждому физически элементарному объекту,
   слагающему E0, приписывается случайное значение.

 - Описанный алгоритм является упрощенным и неоптимизированным. Он лишь
   показывает принцип работы. В нем не учитываются многие возможные варианты
   (например когда в памяти присутствует образ с Qi=0 и ГС тоже сформировал
   E0 с Q0=0). Поскольку учет всех возможных вариантов сделал бы алгоритм
   сложным, непонятным и нечитабельным, было решено ограничиться простым.

 - Так же как и в случае с объектом класса 3.1 приведенный алгоритм работы -
   это не алгоритм достижения цели. Он просто отражает последовательность
   срабатывания блоков. Точно так же как не существует у животных жесткого
   детального алгоритма их повседневного поведения, но есть логика общего
   стремления к цели (например выживаемости вида, борьбы за существование).
   Если убрать из среду существования 3.2 логические домены и универсальный
   интерфейс, то цель не будет достигнута, несмотря на оставшийся неизменным
   алгоритм работы.

В конце пункта <a href="#721">"7.2.1. Треугольная схема объекта класса 3.1"</a> мы поднимали
вопрос управления объектами Z, Zтекущее и Zпредыдущее. В случае если они
представляют собой логические домены, процедура их копирования несколько
упрощается. Рассмотрим два похожих логических домена A и B. Изменение
глобальных параметров логического домена A вызывает соответствующие изменения
в слагающих его более мелких доменах Ai. Если теперь произвести примерно
такие же изменения глобальных параметров домена B, то можно утверждать что
возникшие в результате этого изменения составляющих его доменов Bi будут
аналогичны изменениям Ai. Таким образом, благодаря схожести логических доменов
A и B, для приближенного управления ими необязательно иметь в формальных
моделях полную картину. Следовательно, создателю объекта 3-го порядка нужно
лишь чтобы Z, Zтекущее и Zпредыдущее были похожими логическими доменами.
Кроме этого в объекте класса 3.2 возможно считывать состояния объектов 1-го
порядка эффекторной матрицы (что и происходит в пунктах "1", "3.1 а)", "6"
рассмотренного алгоритма). Это имеет смысл, поскольку: во-первых в отличие от
объекта Z каждый их слагающих эффекторную матрицу объект 1-го порядка связан
с средой функционирования достаточно слабо; во-вторых заполнение памяти также
требует наличия возможности считывать состояние E.

Таково устройство наиболее простой разновидности объекта 3.2. Однако в таком
виде он малопригоден для практического использования.


      <a name="733">7.3.3. Эволюционный процесс и механизм полуактивной защиты, память
             стекового типа и косвенная цель. Объект класса 3.2.2</a>

Мы уже упоминали что для нормальной работы любого объекта 3.х необходимо
обеспечить как можно более слабую связь составляющих его блоков с внешним
миром. Иначе говоря - обеспечить им защиту от деструктивных факторов внешнего
мира.

В объекте 3.1 используется ПАССИВНЫЙ тип защиты. Т.е. предполагается решить
эту проблему чисто конструктивным путем: рациональным выбором конструкционных
материалов, самой конструкции, параллелизмом (создания и одновременного
запуска нескольких копий 3.1) и т.п.. И этот подход оправдан - объект 3.1
невелик по размерам, а внедрение в конструкцию специальных средств защиты
значительно ее усложнит и в итоге может привести к парадоксальной ситуации -
объем защиты станет больше и важнее самого защищаемого объекта.
В случае с 3.2 уже нельзя так делать - он слишком велик для такого подхода.
Проблема осложнена и тем, что невозможно сделать защитный комплекс в виде
отдельного модуля - при большой величине 3.2 защитный модуль также будет
велик и возникнут аналогичные проблемы уже с защитой самого защитного модуля.
Как же быть?

Защита должна быть "встроена" в сам принцип функционирования 3.2 и быть
неотъемлемой его частью. Тогда любая часть 3.2 будет защищаться от
повреждений и восстанавливаться в случае поломки всеми его остальными
частями. Чтобы окончательно вывести из строя такой объект 3.2 придется
одновременно сломать некоторую "критическую массу" составляющих его
компонент. Чем больше будет 3.2, тем больше эта "критическая масса", тем
труднее ее одновременно сломать. Надежность 3.2 будет повышаться с ростом
его массы, что в общем-то и требуется. С проблемой защиты тесно связан
эволюционный процесс (напомним, что эволюционный процесс подразумевает
изменение конструкции объекта 3.х в целях более эффективного достижения
цели). В 3.1 его нет по причине отсутствия частей поддающихся улучшению.
В 3.2 такие части уже имеются - это рецепторно-эффекторные матрицы, основной
модуль и частично вспомогательный модуль. В 3.2 эволюционный процесс может
использоваться не только по своему прямому назначению, но и для саморемонта.
К тому же эволюционный процесс в 3.2 не просто прихоть - он жизненно
необходим (изначального набора E и R вряд ли хватит для достижения цели, его
необходимо модернизировать).

Итак, эволюционный процесс. Очевидно, что цели мы достигнем тем быстрее и с
меньшими потерями, чем будем больше знать о внешнем мире и чем лучше будут у
нас инструменты для воздействия на него. Так как принцип алгоритма обработки
информации остается неизменным, то единственным способом остается наращивание
количества и ассортимента рецепторов и эффекторов. Основная идея такая:
основной модуль должен работать не непосредственно с рецепторами и
эффекторами, а с их отображениями - объектами 1.1 e1...ei, r1...rj,
находящимися в однозначной связи с E1...Ek, R1...Rl. Назовем матрицу
e1...ei матрицей выхода, а r1...rj - соответственно матрицей входа. В том
месте, где физически расположены рецепторно-эффекторные матрицы имеется
большое количество однотипных объектов m класса 1.1. Причем |m| настолько
велико, что каждый объект m может выступать как в качестве будущего
рецептора, так и эффектора. Разумеется, можно было бы обойтись без
отображений, непосредственно подключив к основному модулю новые рецепторы и
эффекторы. Но это не самый хороший вариант, т.к. рецепторы и эффекторы
находятся, как правило, в опасной близости с объектами внешней среды. И если
связь от них к основному модулю устанавливать напрямую, то основной модуль
так же неизбежно окажется в опасной зоне. Поэтому связь необходимо
устанавливать через посредников - объектов e1...ei, r1...rj.

Возникновение новой ячейки в матрицах протекает следующим образом: в
отображающих матрицах e или r добавляется новый элемент. Та же самая операция
проводится и с памятью и во всех местах, где фигурируют матрицы. Затем с
новым элементом e или r связывается очередной свободный m (это вполне
возможно, т.к. элементы данного типа однотипны). При этом m превращается,
скажем, в новый рецептор. В силу универсального интерфейса он уже связан с
внешним миром. Нужно лишь усилить эту связь в сторону наиболее эффективного в
данном месте рецептора Ri. И тут мы наблюдаем самое интересное. Как это ни
странно звучит, но стремление m к Ri идет само собой! При помощи эффекторной
матрицы E. В самом деле: чем лучше работает m (т.е. чем ближе он подошел к
Ri), тем ближе мы подходим к цели. А задача 3.2 как раз и состоит в
приближении к цели путем изменения свойств различных объектов 1.1 и
связывания их в объекты 2.2. Причем m будет меняться сильнее и быстрее других
объектов внешнего мира. Это объясняется следующими обстоятельствами:

1. Физически  расположен поблизости матрицы E, и значит изменение состояния
   последней отражается на нем сильнее чем на других, более далеких
   объектов внешнего мира.

2. Находится в более сильно связанном состоянии с 3.2, чем другие
   объекты внешнего мира (этого мы добились, принудительно подключив к
   отображению рецепторной матрицы).

Если же m изначально неэффективен (малоинформативен, т.е. его состояние
остается неизменным) и никакие преобразования не могут привести его к Ri, то
в этом случае он мало будет влиять на конечный результат, так как
коэффициенты Qi почти не будут зависеть от m (см. формулы в алгоритме). Когда
m выдает только "шум", его можно рассматривать как дополнение к генератору
случайности. К тому же его значения в одних Qi будут компенсированы
аналогичными значениями из других Qi, так что будто бы m и вовсе отсутствует.

Тот же принцип глобального движения к цели применим и к дополнению
эффекторной матрицы и для саморемонта. На последнем стоит остановиться
поподробнее. Что означает "в системе что-то сломалось"? Это означает что ряд
объектов 1.1, составляющих 3.2 изменили свое нормальное состояние
относительно друг друга и других объектов 1.1 объекта 3.2. Очевидно что в
самом общем виде эволюционный процесс затрагивает не только
рецепторно-эффекторные матрицы, но и бОльшую часть основного и
вспомогательного модуля. Если эти изменения пошли на пользу (приблизили к
цели), то матрица E будет играть для них роль катализатора, поддерживая этот,
уже эволюционный процесс. Если нет, то роль ингибитора. И лишь когда поломки
превысят некоторый критический уровень матрица эффекторов уже не сможет
сколь-нибудь эффективно противостоять им. Более того, поломки такого масштаба
могут исказить сигналы, подаваемые на матрицу эффекторов до такой степени,
что она превратится из инструмента созидания в инструмент самоликвидации,
разрушающий объект 3.2 изнутри. В дальнейшем мы будем называть защиту такого
типа ПОЛУАКТИВНОЙ защитой. Полуактивная защита не должна затрагивать цель и
искажать сигналы обратных связей.

Первое достигается мощной пассивной защитой цели (это не так уж и трудно,
учитывая ее сравнительную простоту и небольшие размеры), гарантирующей в
большинстве случаев ее неприкосновенность. Также реально использование
нескольких параллельно работающих объектов A->X->B:
A1->X1->B1, A2->X2->B2, A3->X3->B3, ..., Ai->Xi->Bi, ..., An->Xn->Bn.

Если характеристики нескольких Ak->Xk->Bk станут отличаются от аналогичных
показателей большинства других Am->Xm->Bm, то значит произошло нарушение
работы первых. Их можно либо отключить, либо восстановить прежний режим
работы, используя возможности эволюционного процесса. Алгоритмы выявления
некорректно работающих Ak->Xk->Bk имеют своей основой сравнение состояний
объектов Ai и Bi (i=1..n), сделанное в течение шага получения состояния U
(см. приведенный выше алгоритм работы объекта класса 3.2).
Далее, воспользовавшись одним из многочисленных способов математической
статистики получения среднего значения (например методом медианной фильтрации),
требуется вычислить средние значения Ai и Bi и в дальнейшей обработке
использовать их как значения A и B.

Организовать пассивную защиту обратных связей, очевидно, гораздо труднее, но
зато можно использовать их многочисленность. Вероятность их одновременного
выхода из строя очень мала. Поэтому полуактивной защитой корректируются те
связи, что дают сигналы сильно отличающиеся от общей картины рецепторной
матрицы (поиск ошибочных связей идет аналогично разрешению рассмотренной выше
ситуации для параллельных объектов-целей Ai->Xi->Bi). Выявить сломавшиеся
связи можно также на основе анализа информации из памяти. Если во всех
похожих до этого ситуациях данная связь выдавала совершенно другие показания,
то имеет смысл усомниться в ее корректности.

Следует отметить неприменимость для целей защиты одного "очевидного" и,
казалось бы, чрезвычайно эффективного подхода коррекции ошибок. Идея данного
метода состоит в том, чтобы использовать в качестве средства повышения
устойчивости объекта 2-го порядка и оперативного устранения его повреждений
...объект 3-го порядка! В самом деле: ничто не мешает использовать объект
A-X->B в качестве выходного контура (2-го порядка) объекта 3-го порядка (т.е.
для него он будет представлять собой C->Y->D). Продолжая рассуждения в этом
ключе мы приходим к такой цепочке:
(A0->X0->B0)->O1->(A1->X1->B1)->O2->(A2->X2->B2)->...->On->(A->X->B), где
Oi - это i-й объект 3-го порядка (какой конкретно: 3.1 или 3.2 в принципе
неважно). Выходной контур i-го объекта служит входным контуром для объекта с
номером i+1.

Возникает МНОГОСТУПЕНЧАТАЯ система 3-го порядка (не следует путать с т.н.
пирамидальной конструкцией объектов 3-го порядка, о которой будет рассказано
в пункте <a href="#75">"7.5. Преемственность объектов"</a>). В общем случае многоступенчатая
система 3-го порядка - это объект 3-го порядка, в котором один или несколько
составляющих его объектов 2-го порядка (любых) представляют собой выходной
контур объекта 3-го порядка. Первая ступень - это "чистые" объекты 3-го
порядка, не содержащие других объектов 3-го порядка. Вторая ступень - объекты
3-го порядка, содержащие в своем составе объекты 3-го порядка 1-й ступени и
т.д. В завершении появляется ступень n - исходный объект 3-го порядка.
Очевидно что все составляющие многоступенчатую систему объекты 3-го порядка
довольно слабо связаны друг с другом. Любая ступень полностью сохраняет свою
работоспособность без других ступеней. Любой объект 3-го порядка любой
ступени также представляет собой полностью автономное устройство, способное
к самостоятельной деятельности. Т.е. в этом смысле наблюдается полная
аналогия с устройством многоступенчатых ракетоносителей. В этом заключено
отличие многоступенчатой системы от пирамидальной (каждый последующий уровень
пирамиды неотделим от предыдущего).

Следует обратить внимание читателя на то обстоятельство, что принцип работы
многоступенчатой системы не нарушает положений теории объектов (см. <a href="#3">"3. Теория
объектов"</a>). Объекты 3-го порядка i-й ступени не могут управлять j-й ступенью
и тем более всей системой в целом (в том определении термина "управление" что
было дано в теории объектов; см. также <a href="#735">"7.3.5. Фундаментальные свойства
объектов 3-го порядка"</a>), где i,j=1..n; n - общее число ступеней.
И многоступенчатая система, будучи комбинацией объектов 3-го порядка, также
является объектом 3-го порядка.

Очевидно что как и для любого объекта 3-го порядка, в случае для Oi, объект
A(i-1)->X(i-1)->B(i-1) более устойчив к помехам внешней среды по сравнению с
Ai->Xi->Bi (но не следует забывать что |Ai|=|Aj| и |Bi|=|Bj|, i,j=1..n).
Объект O(i-1) служит корректировщиком цели объекта Oi. Значит, посредством
многоступенчатой системы возможно значительно повысить устойчивость не только
цели A->X->B, но и практически любого другого объекта 2-го порядка.

Однако нетрудно видеть что применение эквивалентного объекта 3-го порядка
(A0->X0->B0)->O->(A->X->B) позволяет достичь тех же результатов. Ведь если
удалось построить многоступенчатую цепочку связи от A0->X0->B0 к A->X->B, то
аналогичную связь можно провести и напрямую, минуя промежуточные звенья. При
этом суммарная стойкость к воздействию внешней среды обратных связей, блоков
и модулей многочисленных объектов Oi будет не меньше (реально - гораздо
больше) получившегося в результате объекта O. Следовательно, защита цели
объекта 3-го порядка при помощи другого объекта 3-го порядка бессмысленна -
гораздо проще сразу сделать пассивную защиту цели максимально мощной.

Та же самая ситуация (за редким исключением) и в случае с защитой объектов
2-го порядка образующих логику работы модулей M1 и M2, обслуживающих
Uтекущее, Uпредыдущее и др. критически важные объекты 1-го порядка. Во всех
указанных случаях единственно действенным способом противостояния вредному
воздействию окружающей среды служит пассивная защита и эволюционный процесс.

И, наконец, защита при помощи многоступенчатой системы последней, третьей,
группы объектов 2-го порядка - обратных связей - также напрасное усложнение.
Рассмотрим 2 вида обратной связи: простую и с многоступенчатой системой
коррекции.

Простая обратная связь (приведен фрагмент полной схемы объекта 3.1):

                                    │
                                    ^
                                    │
                                   ┌┴─┐
                                   │U1│
                                   └┬─┘
                                    ^
                                    │
                                  ╔═╧═╗
                                  ║CU1║
                                  ╚═╤═╝
                                    ^
                                    │
                                   ┌┴┐
                                   │C├─>─
                                   └─┘

Та же обратная связь, но с применением многоступенчатой коррекции. В целях
наглядности показан один объект 3-го порядка (класс 3.1, треугольная схема).
Разумеется предлагаемую схему можно неограниченно наращивать, рассматривая в
качестве входных контуров 2-го порядка U1->U1U->U, C->CM1->M1, блоки объекта
класса 3.1.

                                                     │
                                                     ^
           ┌ - - - - - - - ┐          ┌--------------┼----┐
               Объект 3.1             | Область      │    |
           |  (упрощенно)  |          | изменений,   │    |
                                      | производимых │    |
           |               |          | объектом 3.1 │    |
                  ┌─┐         ╔═══╗   |             ┌┴─┐  |
           |      │U├<─────┼──╢U1U╟<──┼─────────────┤U1│  |
                  └┬┘         ╚═══╝   |             └┬─┘  |
           |       │       |          |              ^    |
                   v                  |              │    |
           |     ╔═╧═╗     |          |  ┌─┐         │    |
                 ║ M1╟────────────────┼─>┤Z│       ╔═╧═╗  |
           |     ╚═╤═╝     |          |  └─┘       ║CU1║  |
                   ^                  |            ╚═╤═╝  |
           |       │       |          |              ^    |
                   │                  |              │    |
           └ - - - ┼ - - - ┘          └--------------┼----┘
                   │          ╔═══╗                 ┌┴┐
                   └──────────╢CM1╟<────────────────┤C├─>─
                              ╚═══╝                 └─┘

Трудности предлагаемого варианта реализации защиты обратной связи при помощи
многоступенчатой системы порождаются обратными связями U1U и CM1. Будут ли в
общем случае эти две обратные связи более устойчивы и надежнее чем CU1?
Конечно, нет.

Вывод: в качестве защитного механизма многоступенчатая система малоприменима.
Но ее широкое распространение в живой природе (многоклеточные организмы)
наводит на мысль о наличии у многоступенчатой конструкции достаточно весомых
преимуществ. Вероятно они связаны с особенностями развития живого организма
как саморазворачивающейся системы, проходящей в ограниченный срок сложнейший
путь развития от яйцеклетки до гигантского многоклеточного комплекса.
Возможно многоступенчатый подход играет не последнюю роль в решении задачи
генерации большого количества объектов m для построения
рецепторно-эффекторных матриц. А может быть многоступенчатые природные
системы - это не более чем продукт унификации и стандартизации
(см. <a href="#734">"7.3.4. Примеры объектов класса 3.2. Недостатки их конструкции"</a>).
Ясно одно: для получения точных исчерпывающих ответов необходимы глубокие
теоретические и практические исследования живых организмов как объектов 3-го
порядка.

Как видим, все основные проблемы - и эволюционный процесс, и саморемонт
принципиально разрешимы с помощью одной и той же системы. Выбранный принцип
функционирования как бы сам уже позаботился о ее живучести и
работоспособности.

Кроме полуактивной системы защиты в 3.2 может быть применен еще один
механизм, резко повышающий его эффективность. Это механизм СТЕКОВОЙ ПАМЯТИ.
В чем его суть: запоминать не только сам удачный шаг, но и некоторое
количество предшествующих ему шагов, независимо от того были они удачными
или нет. Это и дает дополнительное преимущество - если мы увидим что
последние несколько состояний рецепторно-эффекторных матриц похожи на
последовательность шагов записанных в одной из ячеек, то в силу существования
логических доменов можно утверждать что последовательно копируя последующие
образы эффекторной матрицы из данной ячейки памяти на матрицу эффекторов, мы
будем получать состояния рецепторной матрицы, аналогичной ее последовательным
образам из данной ячейки. В итоге такого "прохождения" всех состояний,
записанных в ячейке мы придем к уменьшению значения U, т.е. приблизимся к
цели. Особенно эффективен такой подход в случае, когда среди предшествующих
состояний есть неудачные и когда ситуация с похожими последовательностями
шагов встречается достаточно часто. Обычный объект 3.2 в такой ситуации
начнет каждый раз искать путь к цели заново, "наугад", тогда как 3.2 со
стековой памятью достаточно найти его только однажды и затем просто
использовать уже полученный путь лишь с небольшими вариациями.

Очевидно, что для стековой памяти роль рецепторов важнее роли эффекторов,
поскольку общий смысл заключен в поиске и идентификации последовательности
похожих состояний внешней среды. Из этого также вытекает что общее состояние
внешней среды должно сравнительно слабо зависеть от состояния рецепторной
матрицы, во всяком случае быть меньше аналогичной зависимости в случае с
простым 3.2. Поэтому стековая память может эффективно применяться только
когда общее влияние 3.2 на внешнюю среду мало, т.е. по сравнению с размерами
среды в случае с простым 3.2 размер новой среды будет гораздо больше.

Общий принцип реализации стековой памяти таков. Между памятью и
рецепторно-эффекторными матрицами вводится буфер размерности N, куда
записываются последние N состояний матриц. Буфер представляет собой стек типа
"последний пришел - последний ушел", т.е. при записи нового состояния
предыдущие состояния смещаются к концу буфера, а состояние в конце буфера
при этом будет замещено предыдущим. Анализ состояния матриц ведется как и в
обычном 3.2 - анализируется текущее состояние матриц. Если его нужно записать
в память, то в соответствующую ячейку памяти записывается не только головной
элемент буфера, а весь буфер. Для этого в каждой ячейке вместо одного места
должен быть предусмотрен массив размерности N, куда и записывается все
значения буфера. Анализ памяти отличается тем, что в памяти идет поиск
непрерывной последовательности фрагментов, похожих на некоторую, также
непрерывную, последовательность фрагментов в буфере. При этом принцип поиска
такой же, как и при работе с обычной памятью - также рассчитываются
соответствующие коэффициенты Ai и т.д.. После того, как обнаружилось
совпадение с массивом одной из ячеек, происходит копирование записанной в
последующих значениях массива этой ячейки образов эффекторной матрицы на
матрицу эффекторов. Если похожих ячеек несколько, то каждая из них вносит
свой "вклад" в формировании эффекторной матрицы в зависимости от значения
коэффициентов Ai.

Но это еще не все. Эффективность работы стековой памяти 3.2 можно значительно
увеличить, если не просто сравнивать состояния рецепторно-эффекторных матриц
с каждой из ячеек памяти по отдельности, а дополнительно еще проводить
совместный анализ содержимого ячеек на предмет выявления похожих
последовательностей.

Покажем это на примере:

                    ┌───┬───┬───┬───┬───┬───┬───┬───┐
   Ячейка 1, dU=17  │2.2│2.3│ 2 │5.1│5.2│5.3│5.4│ 5 │
                    └───┴───┴───┴───┴───┴───┴───┴───┘

                    ┌───┬───┬───┬───┬───┬───┬───┬───┐
   Ячейка 2, dU=8   │3.4│3.5│ 3 │4.1│4.2│4.3│4.4│ 4 │
                    └───┴───┴───┴───┴───┴───┴───┴───┘

                    ┌───┬───┬───┬───┬───┬───┬───┬───┐
   Ячейка 3, dU=5   │1.7│ 1 │3.1│3.2│3.3│3.4│3.5│ 3 │
                    └───┴───┴───┴───┴───┴───┴───┴───┘

                    ┌───┬───┬───┬───┬───┬───┬───┬───┐
   Ячейка 4, dU=4   │1.5│1.6│1.7│ 1 │2.1│2.2│2.3│ 2 │
                    └───┴───┴───┴───┴───┴───┴───┴───┘

                    ┌───┬───┬───┬───┬───┬───┬───┬───┐
   Ячейка 5, dU=3   │1.1│1.2│1.3│1.4│1.5│1.6│1.7│ 1 │
                    └───┴───┴───┴───┴───┴───┴───┴───┘

В этом примере мы предполагаем что у 3.2 имеется всего 5 ячеек памяти,
а глубина стека равна 8. На рисунке целыми числами обозначены состояния
(образы рецепторной и эффекторной матрицы), приведшие к уменьшению значения
dU, а дробными - состояния предшествующие им. Например для ячейки 5 мы имеем
уменьшение dU на 3, получившееся в результате достижения состояния 1.
В результате работы 3.2 в течении некоторого времени память примет вид,
показанный на рисунке. Допустим теперь что стек, в который записываются
последние 8 образов рецепторной и эффекторной матрицы принял следующий вид:

                    ┌───┬───┬───┬───┬───┬───┬───┬───┐
                    │1.1│1.2│1.3│1.4│1.5│1.6│1.7│ 1 │
                    └───┴───┴───┴───┴───┴───┴───┴───┘

Если не проводить совместный анализ содержимого ячеек памяти, то 3.2 должен
выбрать сценарий из ячейки 3, поскольку в этом случае dU=5, что превышает
dU=4 из сценария по ячейке 4. Однако при совместном рассмотрении всех ячеек
мы видим что нужно выбрать именно сценарий 4-й ячейки, т.к. достигнув
состояния 2 можно воспользоваться информацией из 1-й ячейки и тем самым
уменьшить dU значительно сильнее, чем по информации из ячейки 3 или даже в
результате последовательного выполнения ячеек 3 и 2.

Этот пример наглядно демонстрирует необходимость совместного анализа, однако
в реальности он может оказаться достаточно сложным (не исключено даже что его
алгоритм - объект 2-го порядка - можно подвергнуть эволюционному процессу).
Поэтому мы не станем рассматривать его в деталях во избежании появления
досадных ошибок и недоразумений, оставив конкретную проработку создателям
количественной теории ИИ и его конкретных работающих образцов.

В связи со значительным ростом объекта 3.2 по сравнению с объектом 3.1
становится затруднительным организовывать обратную связь с объектами
C и D. Чем больше 3.2, тем как правило, длиннее обратная связь (проходит через
множество объектов-посредников). А чем она длиннее, тем больше вероятность ее
повреждения и искажения передаваемой информации. К тому же у нас нет в
наличии механизма, который мог бы автоматически восстанавливать эти
повреждения (подобно защите 3.2). Следовательно сделать связь более надежной
можно лишь 2-мя способами:

1. Сократить количество объектов-посредников.
2. Повысить их устойчивость к внешним воздействиям.

Очевидно что при неизменных C и D этого не сделать - существует какой-то
оптимальный путь, улучшить который уже невозможно.
Следовательно, остается одно - изменять сами объекты C и D, заменив их на
объекты C' и D'. Они должны быть достаточно велики и сильно связаны с
остальными объектами среды функционирования. В этом случае обратная связь от
них станет гораздо устойчивее к внешним помехам. Но как быть, если нас
интересует изменение состояний именно С и D, а не C' и D'. Для решения
проблемы используется такой подход: C' и D' выбираются таким образом, что
изменение их состояний псевдооднозначно отражается на изменении состояний C и
D. Это дает возможность косвенного управления ими. Образно говоря, чтобы
нагреть иголку в комнате мы повышаем температуру воздуха во всей комнате.
Естественно что так можно гарантировать достижение истинной цели лишь
приближенно, но другого пути нет.
Рассмотренный механизм называется механизмом КОСВЕННОЙ цели и он применяется
только в объектах класса 3.2. Очевидно что C, D, C' и D' являются объектами
одного логического домена. Более того, чтобы еще больше повысить устойчивость
обратной связи, можно применить помимо C' и D' и другие (а лучше даже все)
объекты, входящие в этот логический домен. В результате мы получим множество
зависимых друг от друга объектов 1-го порядка. Если подвести теперь к каждому
из них обратную связь, то в случае повреждения одной из них можно будет
пользоваться остальными. И это не все! Благодаря эволюционному процессу
открывается возможность устранить повреждение. Однако у косвенной цели есть
недостаток - она не позволяет точно задать требуемое состояние целевого
объекта, как это возможно в 3.1.

Эволюционный процесс, механизм стековой памяти и косвенная цель настолько
сильно повышают эффективность объекта класса 3.2, что дает основания выделить
его в отдельный подкласс - 3.2.2. Соответственно объект 3.2 в первоначальном
простом варианте - класса 3.2.1. Как мы убедимся в дальнейшем, такое
разделение на подклассы далеко не случайно и, возможно, эта закономерность
носит глобальный характер для всех объектов Мира.


       <a name="734">7.3.4. Примеры объектов класса 3.2. Недостатки их конструкции</a>

Перед тем как перейти к рассмотрению объекта класса 3.3 остановимся на
примерах объектов 3.2 в живой природе и рассмотрим возможные пути улучшения
этих конструкций.

Как уже говорилось выше, объектами 3.1 в живой природе являются простейшие
одноклеточные организмы. Вполне возможно также что все растения - это также
параллельные объекты 3.1, где каждая клетка - независимый объект класса 3.1.
Хотя они могут быть и объектами 3.2 с полуактивной защитой, но без стековой
памяти. Объекты класса 3.2 представлены в природе тоже широко:
это многоклеточные организмы и практически все животные.

Животных вообще можно рассматривать как классический пример объекта 3.2.
В различных их видах представлены варианты 3.2: с полуактивной защитой
(медузы, черви и т.п.) и полный (рыбы, птицы, почти все высшие животные).
Способность животных залечивать и даже полностью восстанавливать
поврежденные органы сложной структуры говорит о наличии у них полуактивной
защиты. На наличие этого механизма указывает также и существование
эволюционного процесса. Следует заметить что эффекторы и рецепторы животных
вовсе не ограничиваются "ногами" и "руками". В составе эффекторной матрицы
присутствуют все то, что поддается управлению и способно оказывать
воздействие на организм и окружающие его предметы. А этот список весьма
широк: эндокринная система, нервная система, механизмы внутренней регуляции
жизнедеятельности отдельных клеток... Одним словом в эффекторной матрице
задействован практически весь организм. Аналогично дело обстоит и с
рецепторной матрицей.

Высшие животные способны к запоминанию когда-то пережитых ощущений и
способов действия в этих ситуациях. Они обладают условными рефлексами. Эту
способность дает им наличие стековой памяти. Она также объясняет и тот факт,
что по истечении времени знания забываются, и то, что опыт одних животных
нельзя передать другим. Каждое животное нужно дрессировать индивидуально
(подражание животных друг другу объясняется стадным эффектом, являющимся
врожденным, безусловным рефлексом и имеющим со стековой памятью мало общего).
Все сказанное остается справедливым для подавляющего большинства
представителей мира природы. Однако, науке известны некоторые животные
способные к передаче своего жизненного опыта потомству и оказанию
взаимопомощи друг другу, животные проявляющие зачатки мышления.
Это в частности касатки, слоны, человекоподобные обезьяны и некоторые другие.
Известно например что некоторые птицы бросаются на нарисованные изображения их
природных врагов и добычи. А вот шимпанзе никогда не станет атаковать
рисованный муляж, даже если и видит его впервые. В случае с птицами все
понятно - их мозг воспринимает только внешний образ наблюдаемого предмета.
И если он находит ассоциацию в памяти, то вызываются соответствующие реакции.
Мозг же обезьяны устроен по-другому: он видит мир не как набор ассоциаций, а
как набор объектов 2-го порядка и поэтому легко отличает настоящего врага от
нарисованного. Эти и другие характерные черты поведения высших животных не
объясняется с позиций объекта 3.2. Они - объекты класса 3.3, к которому
относится и человек.

Поговорим теперь о недостатках, которыми обладают живые организмы. И первый
из них - неполное использование таблицы химических элементов. Все организмы
имеют белковую структуру и построены на основе 20 "волшебных" аминокислот.
В основном используются лишь 4 элемента - углерод, водород, кислород и азот.
При том что общее число стабильных элементов около 100. Естественно это
негативно отражается на готовой конструкции. Однако природа редко использует
неэффективные пути. Значит в таком подходе есть свой резон. Во-первых это
простота реализации: белки знамениты тем, что имеют большое количество форм и
изомеров, значительно отличающихся друг от друга по физическим
характеристикам. Это дает возможность, используя всего 4 элемента, создавать
разные блоки объектов 3.1 и 3.2.
Из "твердых" белков (к примеру кератина) - элементы защиты и агрессии,
из белков имеющих большое количество изомеров и легко меняющих свою форму
- память и т.п.. Т.е. появляется возможность стандартизации - использование
в качестве "кирпичиков" при постройке стандартные блоки.
Во-вторых использование одной основы - белковой во всех постройках делает
процесс интеграции всех объектов в единый комплекс гораздо более легким
чем при использовании разных основ. Налицо унификация.
Особенно сильно эти плюсы проявляются при постройке 3.2 (например для
создания активной защиты гораздо проще иметь одну основу объектов m, чем
разную. Поэтому, в частности, стволовые клетки организмов изначально
совершенно одинаковы).

Всем известно что стандартизованная и унифицированная продукция гораздо
легче осваивается производством и быстрее совершенствуется и тиражируется.
Так же и в природе. Пойдя таким путем она увеличила скорость эволюции и
распространения жизни на Земле.
Но известно также что от стандартных изделий - своего рода ширпотреба не
приходится ждать уникальных характеристик. В этом заключен их основной
недостаток. Как ни крути, а жаропрочность вольфрамовых сплавов все равно
гораздо выше любых белковых конструкций, а на роль механической защиты титан
подходит гораздо лучше любого кератина. Таких примеров множество.
Физические условия же на Земле "тепличные" и сравнительно стабильны.
Поэтому в таких условиях просто нет нужды создавать что-то сверхпрочное,
сверхбыстрое, сверхсильное, а значит сложное, потребляющее много ресурсов.
Так зачем тратить силы понапрасну? Этим и объясняется "непризнание" природой
никаких других конструкций, кроме белковых.

Второй большой недостаток живых организмов в общем-то является следствием
первого: это однотипность поведения. Их основной задачей является выживание
вида. Эта цель характерна для всех без исключения живых организмов.
Все остальное - размножение, рефлекс самосохранения, стремление победить
соперников, стадный эффект и т.п. - ее производные, различные пути ведущие
к ней. Смерть тоже, как ни странно, родилась из этой цели - для вида важнее
иметь постоянное обновление, эволюционный процесс, чем группу слабоменяющихся
бессмертных особей. Однотипность конструкции и единая цель играют рука об
руку - что бы было, если вдруг одни организмы получили бы принципиальное
преимущество над другими в виде обладания всеми химическими элементами или
скажем возможностью неограниченного развития рецепторно-эффекторных матриц в
процессе своей жизни? Наверное примерно тоже, что и сейчас, когда человек,
обладая принципиальным преимуществом - мозгом, фактически уничтожает все
живое вокруг. Примерно тоже получится и при разных целях.

И наконец третий большой недостаток - большая избыточность конструкции
практически всех живых организмов. Наличие множества лишних блоков и
процессов, которые невозможно отключить, ставит объект 3-го порядка в
опасную зависимость от резких перемен в окружающей его среде
функционирования, увеличивает вероятность отдаления от цели. Очевидно что
если какой-то блок становится ненужным объект 3.2 его самостоятельно
"стирает" в процессе самомодификации. Но в природе не все так гладко: из-за
постоянства "тепличных" условий многие блоки находятся в "спящем" состоянии.
Пока внешние условия неизменны они практически не препятствуют прогрессу 3.2
и он их не "замечает". Но многие из них обладают коварным свойством: резким
изменением своих физических характеристик при незначительных изменениях в
окружающей среде.
В результате чего 3.2 просто не успевает их вовремя изменить или удалить.
В лучшем случае лишние блоки лишь замедляют движение к цели. В худшем -
влекут гибель объекта 3.2. Возникновение избыточности неизбежно в живой
природе, так как построение в 3.2 принципиально новых блоков идет по принципу
"постепенное улучшение случайно найденного". При этом велика вероятность того,
что вместе с действительно нужными компонентами заодно перенесутся и ненужные,
но при данных условиях нейтральные (а потому "невидимые" для 3.2) компоненты.
Бороться с избыточностью можно только одним способом - изначально
конструировать 3.2 таким образом, чтобы вероятность появления избыточных
компонент при его работе была бы минимальна. Естественно что при построении
каждого нового образца 3.2 для этого следует использовать специально
разработанные блоки и модули, что нереально в условиях всеобщей стандартизации
и унификации, как это имеет место в природе. Как видим, существующие природные
образцы объектов 3-го порядка весьма далеки от идеала.

Так было и есть на Земле. Но в будущем, когда наша цивилизация начнет
превращаться в цивилизацию 4-го порядка, осваивать Солнечную систему,
"тепличных" условий уже не будет. А бесконечность космических ресурсов
сделает борьбу одних организмов с другими за их, ресурсов, обладание лишенной
всякого смысла. Поэтому только остается еще напомнить: при проектировании
искусственных объектов 3-го порядка естественные объекты 3-го порядка следует
рассматривать не более чем как пример, но никак не эталон.


           <a name="735">7.3.5. Фундаментальные свойства объектов 3-го порядка</a>

Завершая обзор устройства объектов класса 3.1 и 3.2 неизбежно возникает
вопрос: что фундаментально нового содержат приведенные схемы по сравнению с
объектами 2-го порядка? Напомним что фундаментальные свойства объекта порядка
N - это такие свойства, которые невозможно представить в виде произвольной
комбинации свойств объекта порядка N-1 (см. <a href="#3">"3. Теория объектов"</a>). Исходя же
из схем объектов 3.1 и 3.2 таких свойств мы не видим - любой блок представляет
собой объект с порядком не выше 2-го. Это противоречие раскрывается просто -
нужно, рассматривая объект 3-го порядка, принимать во внимание не только то
что составляет схему 3.1 или 3.2, но и всю среду функционирования!
Т.е. на самом деле объект 3-го порядка - это как бы и есть среда
функционирования, в которой создана определенным образом построенная область
(то, что мы изображали на схемах 3.1 и 3.2). Этот вывод парадоксален лишь на
первый взгляд. Но на самом деле так и должно быть.

Например объекты 1-го порядка A и B из объекта 2-го порядка A->X->B - такие
же неотъемлемые его атрибуты как и интерпретатор X. Рассмотрение A, X и B
поодиночке просто не имеет смысла. Аналогично и в случае объекта 3-го порядка
мы имеем схему P->M->Q, где P - входящий объект 2-го порядка (цель),
Q - исходящий объект 2-го порядка (целевой объект), в M входят объекты 1-го и
2-го порядка, составляющие схему объекта 3-го порядка, а также свойство
внешнего мира, использование которого и дает возможность строить объекты 3-го
порядка (универсальный интерфейс - см. <a href="#71">"7.1. Принципы построения объектов 3-го
порядка. Условие существования универсального интерфейса. Что такое знания"</a>).
Но поскольку и универсальный интерфейс и логические домены и бесконечность
внешнего мира (свойство, необходимое для создания объектов класса 3.3)
неотделимы от объектов 2-го порядка внешнего мира, то в M должны учитываться
и они. В этом случае запись P->M отражает весь внешний мир, за исключением Q.
Поэтому предложенные выше схемы 3.1 и 3.2, строго говоря, не полностью их
описывают. Но т.к. практический смысл имеет только описание этой части, то
данными схемами, а также схемой объекта класса 3.3, мы будем пользоваться и
дальше. Предлагаемые схемы объектов класса 3.1 и 3.2 используют лишь одну из
4-х теоретических возможностей создания объекта 2-го порядка C->Y->D
(см. конец пункта <a href="#71">"7.1. Принципы построения объектов 3-го порядка. Условие
существования универсального интерфейса. Что такое знания"</a>). При этом объект
3-го порядка, создавая зависимость С->Y->D, фактически переводит объект 2-го
порядка С->Y->D из его потенциальной формы в физическую.

В силу распространенности M на весь внешний мир ни один объект 3-го порядка
не может управлять другим объектом 3-го порядка, поскольку управление
подразумевает способность менять любое свойство управляемого объекта
(см. <a href="#3">"3. Теория объектов"</a>). Естественно что такой возможности по управлению M
не существует - нельзя, к примеру, изменить свойства универсального
интерфейса, логических доменов, а в случае среды функционирования объекта
класса 3.3 - бесконечности внешнего мира.

Все это так. Но возможна ли ситуация, когда объект 3-го порядка будет
изменять или создавать только то, что приведено в схемах объектов 3-го
порядка? Ведь все фигурирующие в них блоки - объекты 2-го порядка. Частично
такое управление возможно, но его рамки ограничены. Например создание
генератора случайности - ГС в 3.1 невозможно, его можно только выбрать из уже
существующих объектов 1-го порядка. Точно также нельзя создать и Z. А для
успешного выбора того и другого необходимо владеть информацией об абсолютно
всех объектах 1-го порядка внешнего мира. В противном случае высоковероятно
что ГС и Z будут низкого качества. Но даже объект класса 3.3, обладающий
непрерывно наращиваемым внутренним миром, не владеет такой информацией.
Поскольку ГС и Z связаны с другими блоками, эти сложности относятся и к ним.

В случае с объектом класса 3.2 ситуация гораздо сложнее. Причина тому -
эволюционный процесс, непрерывно меняющий бОльшую часть блоков 3.2.
В результате кроме цели и обратных связей в нем нет ни одного неизменного
объекта 2-го порядка. Поэтому объектом 3.2 невозможно управлять при помощи
другого объекта 3-го порядка, т.к. нет возможности провести обратную связь от
непрерывно меняющихся, исчезающих и вновь возникающих объектов 2-го порядка
(как мы помним обратная связь работает с объектами A и B объекта 2-го порядка
A->X->B; в результате эволюционного процесса A и B могут оказаться за
"бортом" 3.2 - их состояние не будет на нем отражаться никоим образом).

Все сказанное для случая 3.1 и 3.2 остается справедливым и для 3.3, прибавляя
ко всему этому новые непреодолимые сложности. Внешний мир, оказывающий на
блоки объектов 3-го порядка огромное влияние (неподдающееся алгоритмизации),
практически лишает возможности управлять ими. Решающее влияние внешнего мира
на формирование конечного облика объекта 3-го порядка уже получило
практическое подтверждение: клонированные особи животных, несмотря на
абсолютно одинаковые ДНК, вырастали совершенно разными и по физиологическим
данным и по характеру.

Таким образом, как мы видим, кроме цели и отходящих от нее обратных связей в
объекте 3-го порядка практически не существует "удобных" для управления
областей.

Нетрудно видеть что универсальный интерфейс представляет собой нечто, что
объединяет разрозненные объекты 2-го порядка в единую глобальную систему, а
логические домены и бесконечность внешнего мира определяют свойства этой
системы. При переходе от объектов 1-го порядка к объектам 2-го мы также
наблюдаем объединение первых в систему. Сохраняется ли эта тенденция и в
дальнейших переходах к объектам высших порядков? Увы, но ответ на этот вопрос
по-видимому никогда не будет получен, поскольку требует чтобы порядок
стороннего наблюдателя был не меньше максимального порядка объекта,
участвующего в наблюдаемом переходе. В противном случае внутри стороннего
наблюдателя не найдется свойств, через которые он смог бы описать
фундаментальные свойства любого объекта перехода.

------------------------------------------------------------------------------

                           <a name="74">7.4. Объект класса 3.3</a>


Перед тем как перейти к рассмотрению объекта класса 3.3 выясним, а зачем
собственно нужен такой переход? Что нас не устраивает в 3.1 и 3.2?
В объектах класса 3.1 и 3.2 движение к цели осуществляется в основном при
помощи случайного перебора различных вариантов. Память, присутствующая в
объекте 3.2 (даже в стековом варианте) лишь увеличивает эффективность этого
процесса. Поэтому при работе объектов 3.1 и 3.2 многое зависит от воли
случая: удастся или не удастся подобрать состояние эффекторов, приближающие
нас к цели. В небольших системах процесс такого перебора сходится к
достижению цели достаточно быстро. Однако чем больше система (внешний мир),
тем все труднее и труднее достигать цели указанным способом. Удачные
сочетания состояния эффекторов становятся все реже, а неудачные, наоборот
- чаще. Более того, некоторые случайные состояния эффекторной матрицы могут
настолько сильно отдалить от цели, что ее повторное достижение станет уже
бессмысленным или даже невозможным (разрушение объекта 3-го порядка).
Кроме случайности существует еще один вредный фактор - ограниченность
рецепторно-эффекторных матриц. Суть его сводится к тому, что текущего набора
рецепторов и эффекторов недостаточно для успешного движения к цели. Его
необходимо модернизировать. В объектах класса 3.1 рецепторы и эффекторы
вообще не меняются. В объектах класса 3.2 новые рецепторы и эффекторы
формируются в основном случайно. В крупных системах случайного формирования
уже недостаточно - слишком мала вероятность того, что сформированный
случайным образом рецептор/эффектор в нужной мере будет удовлетворять
поставленной перед ним задаче. Ведь для этого необходимо наличие сильной
связи между ним и объектом воздействия. Добиться этого можно двумя путями:
либо заранее создавать в рецепторе/эффекторе необходимые свойства, либо
сгенерировать такое количество рецепторов/эффекторов, что они займут
практически весь внешний мир и тем самым повысят вероятность достижения цели.
Для первого пути нужно знать устройство внешнего мира чтобы наверняка,
с первых же попыток, создать рецептор/эффектор с заданными свойствами.
Для второго - обладать огромными материальными ресурсами и большим запасом
субъективного времени (т.е. времени с точки зрения объекта 3-го порядка.
Оно может быть дискретным - например по количеству шагов к цели).
И то и другое отсутствует в 3.1 и 3.2. В сумме все это резко сужает область
применения объекта 3.1 до небольших систем. В средних, а тем более в больших
системах, применение 3.1 практически нереально. Если в среде функционирования
присутствуют логические домены, то возможно применение объекта 3.2. За счет
применения памяти объект 3.2 может успешно достигать цели в средних по
величине системах. В более малых системах доменная структура выражена слабо
ввиду относительно небольшого числа объектов 1.1. В крупных системах в
результате ограниченности рецепторно-эффекторных матриц 3.2 "не видит"
большинства логических доменов внешнего мира и потому не может построить
связи "причина->следствие". Это резко понижает его эффективность.
Принципиально 3.2 применим в любых конечных системах с доменной структурой -
лишь бы было достаточно заполненной памяти. Но в бесконечных системах 3.2
оказывается неработоспособным. В силу существования универсального интерфейса
в бесконечных системах на каждый объект в предельном случае может
непосредственно действовать бесконечное количество других объектов.
Естественно чтобы корректно реагировать на изменение состояния такого
внешнего мира в рамках 3.2 необходимо иметь бесконечно большую память с
бесконечно большой скоростью ее обработки, что представляется нереализуемым.
В реальности уже в крупных конечных системах применение стековой памяти не
дает нужного эффекта.

Одной из причин такого понижения эффективности служит то, что 3.2 располагает
в своей памяти, так сказать, статическую информацию о внешнем мире, своего
рода коллекцию объектов 1.1 - фотографий состояния рецепторов и эффекторов.
Но внешний мир - не набор изолированных объектов 1.1, а совокупность
связанных друг с другом объектов 2.2. В результате чего память 3.2, как
инструмент описания внешнего мира, работает с погрешностью. Чем больше мир,
тем больше погрешность. При достижении определенного уровня она становится
неприемлемо велика.

В рамках 3.1 и 3.2 также невозможно преодолеть так называемые потенциальные
барьеры. Допустим для достижения цели необходимо привести некоторые объекты
внешнего мира в определенное состояние. Но чтобы это сделать при помощи
эффекторов нужно несколько раз подряд привести матрицу эффекторов в такое
состояние, при котором происходит повышение значения U - возникает
потенциальный барьер. В результате чего объекты 3.1 или 3.2 никогда (разве
что путем чисто случайного перебора, что крайне маловероятно) не смогут
достичь цели. Хотя для этого нужно всего лишь "перейти" через барьер,
временно пойдя на увеличение U. Для того, чтобы определить какое направление
движения действительно отдаляет от цели, а какое является потенциальным
барьером также необходимо знать пути развития текущего состояния внешнего
мира.

Таким образом, для эффективного достижения цели в крупных системах необходимо
как-то уменьшить влияние различного рода случайных факторов в формировании
матрицы эффекторов и приобрести способность предугадывать развитие состояния
внешнего мира. Как этого достигнуть? Ведь реальный внешний мир, что нас
окружает - бесконечен.

Очевидно что улучшением "механических" характеристик объекта 3.2: объема
и быстродействия памяти, рецепторно-эффекторных матриц и т.д. достигнуть
желаемого невозможно - бесконечность внешнего мира сводит на нет эффект всех
этих доработок. Нужен принципиально новый подход к решению этой проблемы.
В самом начале нашего рассказа про объекты 3-го порядка мы упоминали о 3-х
путях получения знаний: случайным перебором, из внешнего мира в явной форме и
из внешнего мира в неявной форме. Первые 2 пути реализуются в объектах 3.1 и
3.2. Значит единственно оставшейся неиспользованной возможностью остается 3-й
путь.

Что значит "знания присутствуют в явной форме" или "знания присутствуют в
неявной форме"? Знание - это объект 2-го порядка, служащий однозначным
отображением процесса, протекающего во внешнем мире. Объект класса 3.2
использует знания в явной форме - его память вместе с основным модулем
однозначно отображает логические домены внешнего мира. При этом набора
рецепторов у объекта 3.2 хватает для выявления причин возникновения того или
иного явления, что и позволяет использовать эти зависимости для достижения
цели. Таким образом если объект 3-го порядка может однозначно
идентифицировать логический домен, правильно установить истинную причину
явления, то это знание присутствуют для него в явной форме. Очевидно, что
количество знаний в явной форме находится в прямой зависимости от мощности
рецепторной матрицы и в обратной от числа логических доменов внешнего мира.
Каждому явлению кроме его причины сопутствует множество посторонних факторов.
Некоторые из этих факторов обладают удивительным постоянством - в большинстве
случаев сопутствовать причине явления. Это и может сбить с толку объект 3.2 -
при недостаточной мощности рецепторной матрицы он может принять сопутствующий
фактор за причину.


             <a name="741">7.4.1. Идея внутреннего мира объекта класса 3.3</a>

Таким образом при увеличении размеров внешнего мира число явных знаний о нем
будет уменьшатся. При бесконечно большом внешнем мире оно может стать равным
нулю. Но это не говорит о том, что мы ничего не знаем о внешнем мире -
просто мы не имеем достаточного количества именно явных зависимостей типа
"причина -> явление". Косвенные же знания, т.е. знания вида
"(причина+сопутствующие факторы) -> явление" и
"сопутствующие факторы -> явление" у нас имеются. Остается только извлечь
из них явные знания. Представим эти знания в виде Q->P. Очевидно что это
можно сделать в результате их совместного анализа и только в 2-х случаях:

1. Если имеются несколько зависимостей

   ┌
   │Q1->P
   ┤ ...
   │Qn->P
   └

, то можно попробовать выявить похожие части в Q1...Qn. Чем больше n, тем
больше вероятность что похожая часть как раз и будет причиной.

2. В случае зависимостей вида

   ┌
   │Q11->P1
   │Q12->P2
   ┤ ...
   │Q1n->Pn
   └

, где Q1i - похожие причины, Pi - разные явления. В этом случае ищутся разные
части Q1i - истинные причины Pi. Достоверность причин при этом возрастает с
ростом n. Очевидно, что и в 1-м и во 2-м случаях рассматриваются зависимости
"(причина+сопутствующие факторы) -> явление". Для зависимостей же вида
"сопутствующие факторы -> явление" найти причину указанными способами
невозможно. А именно зависимости такого типа как раз в основном-то и
встречаются. К тому же анализ в 1-м и 2-м случаях принципиально не дает
никаких преимуществ перед интерполяцией/экстраполяцией, проводимой 3.2.
Как же быть? Увеличивать число рецепторов и ячеек памяти до бесконечности мы
не можем.

Остается один вариант - построить внутри объекта 3-го порядка некий аналог
внешнего мира - его действующую модель, ВНУТРЕННИЙ МИР. Причем это должна
быть очень правдоподобная модель - практически эквивалент внешнего мира.
Как и внешний мир он состоит из большого числа объектов класса 2.2 и обладает
теми же свойствами, что и "исходник". А именно: имеет свои внутренние
логические домены и универсальный интерфейс. Мало того, внутри внутреннего
мира имеются двойники самого объекта 3-го порядка (как он самого себя
представляет через показания матрицы рецепторов)! В результате чего у него
появляется важнейшее свойство - в принципе внутри этого внутреннего мира можно
промоделировать абсолютно все процессы и явления протекающие в настоящем,
внешнем мире. Но он имеет и два принципиальных отличия от внешнего мира:

1) возможность отката - любое действие, совершенное с внутренним миром
   всегда можно отменить. Это и делает внутренний мир именно испытательным
   полигоном, а не просто двойником внешнего мира.

2) возможность работы с любым объектом внутреннего мира, включая и те
   аналоги объектов внешнего мира, с которыми во внешнем мире нельзя
   непосредственно связаться при помощи рецепторно-эффекторных матриц.

Для обеспечения основных требований к внутреннему миру (возможность отката и
возможность работы с любым объектом внутреннего мира), необходимо чтобы
каждый объект внутреннего мира был доступен т.н. внутренним рецепторам и
эффекторам (работа с любым объектом) и также необходимо иметь несколько
последовательно сделанных копий внутреннего мира (либо каким-то другим
образом фиксировать изменения состояний объектов vM) - своего рода стек
состояний (откат).

В этом состоит суть объекта 3.3 - имея внутренний мир и экспериментируя с
ним, он выявляет наиболее перспективные направления достижения цели (включая
преодоление потенциальных барьеров) и уже только после этого применяет их во
внешнем мире. Такой подход позволяет резко повысить эффективность достижения
цели в крупных системах.

Что же нужно для существования внутреннего мира (а следовательно и объекта
класса 3.3)? Конечно, одних только логических доменов и универсального
интерфейса мало для существования внутреннего мира. Ведь смысл его
заключается в том, чтобы быть полной аналогией внешнего мира, частью которого
является и он сам. Очевидно что часть не может быть равна целому. Но только в
случае конечных систем. Если же внешний мир бесконечен, то такое оказывается
возможным, подобно тому, как количество нечетных чисел равно количеству чисел
всего натурального ряда. Таким образом объект 3.3 помимо универсального
интерфейса и логических доменов требует для своего существования
бесконечно большой среды функционирования. Иначе говоря - БЕСКОНЕЧНОГО
внешнего мира.

Естественно что далеко не во всех случаях от внутреннего мира требуется
полная аналогия с внешним. Иногда хватает даже аналогии с его небольшой
конечной частью. Это дает возможность ограничиться конечным внутренним миром.
Но в пределе внутренний мир должен быть все же бесконечным. В реальных
системах (например мозге человека) внутренний мир обладает ПОТЕНЦИАЛЬНОЙ
бесконечностью - изначально он конечен (состоит из конечного числа физически
элементарных объектов 2.2 или описание глобальных параметров слагающих его
бесконечных логических доменов имеет конечную глубину вложенности - т.е. ряд
этих вложенных друг в друга доменов бесконечен, но наши знания их
взаимодействия простираются только на конечную величину), но может быть
расширен (надстроен) до бесконечности. Расширение может происходить как
"вширь" - повышение числа логических доменов на одном или нескольких уровнях
вложенности, так и "вглубь": увеличение глубины вложенности логических
доменов. В дальнейшем для простоты мы будем говорить "бесконечный внутренний
мир", опуская слово "потенциально".

Поскольку объект класса 3.3 является дальнейшим развитием 3.2, то для его
функционирования также требуется доменная структура внешнего мира.
В бесконечном внешнем мире возникают бесконечные логические домены -
содержащие бесконечное количество физически элементарных объектов 2-го
порядка. Потенциальная бесконечность внутреннего мира выражается в том, что
он представляет собой описание глобальных параметров бесконечных логических
доменов. При необходимости можно провести детализацию бесконечных логических
доменов, представив их в виде совокупности более мелких логических доменов -
расширить внутренний мир.

Наличие внутреннего мира и функционирование в бесконечно большой среде
вынуждает существенным образом пересматривать облик цели объекта 3.3 и
способов ее достижения. Но перед тем как перейти к рассмотрению этих вопросов
сделаем небольшое теоретическое отступление.


                <a name="742">7.4.2. Бесконечные логические домены.
                       Центральная теорема и ее следствия</a>

В пункте 7.3.1. разбиралось понятие логического домена и его основных
характеристик: показателя SN и глобальных характеристик (параметров).
Бесконечный логический домен - это логический домен, содержащий бесконечное
количество физически элементарных объектов 2-го порядка. Особого интереса
бесконечные логические домены не представляли бы, если не одно их очень
важное для создания ИИ свойство.

   Центральная теорема
   -------------------
В бесконечном логическом домене можно управлять любым глобальным параметром:
создавать его по подобию уже существующего в другом бесконечном логическом
домене, изменять его свойства или удалять.

Иначе говоря в рамках глобальных параметров бесконечных логических доменов
делаются реальными все 4 пути создания объектов 2-го порядка (не путать их с
путями получения знаний), о которых было сказано в пункте <a href="#71">"7.1. Принципы
построения объектов 3-го порядка. Условие существования универсального
интерфейса. Что такое знания"</a>! Докажем эту теорему.

Вначале определим правило построения вложенной структуры логических доменов.
Поскольку речь идет об объекте класса 3.3, то подразумеваем что помимо
бесконечной структуры внешний мир содержит универсальный интерфейс и доменную
структуру. Итак, внешний мир состоит из физически элементарных объектов класса
1.1, 2.1 и 2.2. В силу существования универсального интерфейса и логических
доменов все они связаны между собой. Рассмотрим простейшие логические домены,
каждый из которых состоит только из одного физически элементарного объекта
2-го порядка: (A->X->B); (C->Y->D); ...;
Найдем глобальные параметры этих простейших доменов - доменов 1-го уровня:
(A->X->B) = A1; (C->Y->D) = C1; ...;, где A1, C1, ... - объекты класса 2.1.
Построим домены 2-го уровня и найдем их глобальные параметры:
(A1, A11, A12, ...) = A2; (C1, C11, C12, ...) = C2; ...;
Построим домены 3-го уровня и найдем их глобальные параметры:
(A2, A21, A22, ...) = A3; (C2, C21, C22, ...) = C3; ...;
И так далее. При переходе от доменов более низкого уровня к доменам более
высокого уровня мы должны придерживаться следующего условия:
SN(A1i, A1j) < SN(A1i, C1k); SN(C1i, C1j) < SN(C1i, A1k);
SN(A2i, A2j) < SN(A2i, C2k); SN(C2i, C2j) < SN(C2i, A2k) и т.д.,
где i,j,k = 1..n, а n стремится к бесконечности.
В результате в конце мы получим что весь внешний мир будет представлен в виде
одного логического домена - L. Он состоит из логических доменов
L1, L2, L3, ..., и являться для них глобальным параметром. Те, в свою
очередь, состоят из доменов L11, L12, ..., L21, L22, ..., L31, L32, ....
При этом SN(L11, L12) < (любое из [ SN(L11, L21), SN(L12, L21), ... ]).
Возникает вложенная структура логических доменов внешнего мира. Поделив Lij
на более мелкие логические домены мы опять увидим туже самую картину. Таким
образом, чем меньше логический домен Lx принадлежащий L1 и Ly принадлежащий
L2, тем больше будет SN(Lx, Ly), т.к. при каждом делении SN будет возрастать
на конечную величину. При бесконечно глубоком, неограниченном делении,
SN станет равной бесконечности. Отсюда вытекает что состояния физически
элементарных объектов 1-го порядка Q1 принадлежащего домену L1 и P2
принадлежащего L2, практически не зависят друг от друга, несмотря на их
связанность универсальным интерфейсом!

Рассмотрим возможность ситуации, когда SN(A1i, A1j)=SN(A1i, C1k). Это
возможно только в случае принадлежности A1i, A1j, C1k одному логическому
домену. Если мощность множества таких объектов будет превышать мощность
множества объектов, для которых SN(A1i, A1j)<>SN(A1i, C1k), то мы не сможем
представить внешний мир в виде совокупности бесконечных логических доменов.
В результате чего возникает противоречие с нашим первоначальным
предположением о доменной структуре внешнего мира. Поэтому мощность множества
объектов с SN(A1i, A1j)=SN(A1i, C1k) не должна, во всяком случае, превышать
мощность множества объектов для которых SN(A1i, A1j)<>SN(A1i, C1k).

Рассмотрим логический домен бесконечно большого уровня A->X->B, где A и B -
глобальные параметры, являющиеся объектами класса 2.1, X - зависимость B от A,
также являющаяся глобальной характеристикой, образуя в сумме с A и B объект
класса 2.2. Чтобы иметь возможность управлять им требуется следующее:

 - наличие возможности произвольным образом менять не только состояния
   объектов A и B, но и их структуру - добавлять, удалять и изменять свойства.
 - управлять структурой зависимости X: менять при необходимости вид функции
   B=X(A)

Рассмотрим A и B как логические домены - объекты класса 2.1. Если бы A и B
состояли из конечного числа физически элементарных объектов, то поменять
структуру A и B мы не сможем, поскольку в этом случае придется изменять
физический носитель составляющих их элементарных объектов. А сделать этого мы
не в силах - можем только менять их состояние. Тем более не можем мы поменять
и интерпретатор X.

Но поскольку A и B состоят из бесконечного числа элементарных объектов 1.1,
каждый из которых вносит определенный вклад в вид их глобальных параметров,
то меняя состояния элементарных объектов мы сможем тем самым как угодно
менять и глобальные параметры. Естественно что заставить их принять любую
форму мы не сможем, но по условию теоремы этого и не требуется - достаточно
изменить их "по подобию уже существующих". А сделать это уже вполне реально:
т.к. все элементарные объекты класса 1.1 охвачены универсальным интерфейсом,
то значит содержат эквивалентные свойства. Глобальные характеристики одного
логического домена тоже эквивалентны глобальным характеристикам другого
домена, причем эта закономерность прослеживается на всех уровнях их вложенной
структуры. Очевидно что эквивалентность глобальных характеристик одного
логического домена глобальным характеристикам другого объясняется
эквивалентностью слагающих их физически элементарных объектов. А отсюда
следует что меняя состояние элементарных объектов логического домена мы можем
с неограниченно малой степенью погрешности приравнять его глобальные параметры
к глобальным параметрам любого другого логического домена равного уровня.

Итак, A и B поменять можно. Но остался еще интерпретатор X. Оказывается можно
поменять и его характеристики. Каким образом взаимодействуют между собой
элементарные объекты логического домена A и B? Естественно что может быть
только 2 варианта: либо это влияние идет напрямую через физически элементарные
объекты класса 2.2 (например a1->x1->b1), либо через цепочку объектов
(a1->x1->c1->x2->c2->...->b1). Если бы имел место первый случай, то X нам не
изменить. Но он отсутствует, поскольку тогда SN(a1, b1)=k, где k - конечное и
сравнительно небольшое число, а из свойств вложенной структуры логических
доменов вытекает что SN(a1, b1) равно бесконечности. Значит влияние идет
через цепочку объектов. Однако при ограниченной длине этой цепочки опять
получим что SN(a1, b1)=k. Значит цепочка состоит из бесконечного числа
физически элементарных объектов класса 1.1, состояние каждого из которых
вносит определенный вклад в формирование конечного вида зависимости X
(подобно тому, как состояниями элементарных объектов определяется вид целевой
зависимости C->Y->D в объектах 3.1 и 3.2). Следовательно, меняя состояние
этих объектов можно как угодно изменять и X. Покажем это.
Представим функцию, реализуемую интерпретатором в аналитическом виде. Это
можно сделать с любой степенью точности. Например логическая функция
(IF x<1 THEN y=0 ELSE y=1) аппроксимируется функцией y=a*arctg(b*x+c), при
соответствующем подборе параметров a, b и c. Аналогичным образом можно
поступить с любой логической функцией (не следует забывать что мы
рассматриваем определенные объекты 2-го порядка!).
В результате преобразования мы получим аналитическую функцию вида:
b1=f(a1, c1, c2, c3, ...). Разложим получившуюся зависимость в ряд Тейлора.
Получим полином, состоящий из суммы членов. Некоторые из них содержат все
переменные a1, c1, c2, c3, .... Некоторые - только их часть. Раскладывая в
ряд каждый из членов, содержащий больше одной переменной, раскрывая скобки и
проводя другие преобразования, в итоге можно получить полином состоящий из
суммы членов только с одной переменной. Если изменить теперь значения
некоторых переменных (сделав их например равными 0) и "свернуть" все это
разложение в аналитическую зависимость b1=f1(a1, c1, c2, c3, ...), мы увидим
что f1 будет отличаться от f. Но поскольку число переменных бесконечно, то
выходит что таким путем можно менять f каким угодно образом! Следовательно,
изменяя состояния физически элементарных объектов, передающих взаимодействие
между доменами A и B, мы можем изменить вид функции интерпретатора X, что и
требуется. Доказательство закончено.

На центральной теореме основан способ АБСТРАКТНЫХ ПОСТРОЕНИЙ - создания
бесконечных логических доменов с заранее заданными глобальными параметрами.

Есть два способа создания логического домена с заранее заданными свойствами,
используя глобальные характеристики уже существующих логических доменов. Из
начальных доменов (возьмем для простоты только 2 домена), содержащих нужные
глобальные характеристики - L1 и L2, необходимо получить целевой домен - L5.
Кроме L5 образуются L3 и L4 - конечный вид L1 и L2 после прохождения
процедуры создания L5.

Способ 1.
 Модель "руда - металлы - сплав". В этом способе происходит расщепление L1 и
 L2, в результате которого физически элементарные объекты, образующие
 необходимые глобальные характеристики (в данном случае A1->X1->B1 и
 C1->Y1->D1) высвобождаются в "химически чистом" виде и синтезируются в
 целевой домен L5.

        L1
    ┌──────────┐                   L3
    │A1->X1->B1│              ┌──────────┐
    │A2->X2->B2│              │A2->X2->B2│                    L5
    │A3->X3->B3│      \       │A3->X3->B3│       │       ┌──────────┐
    └──────────┘    --- \     └──────────┘    ───┼───    │A1->X1->B1│
        L2          --- /          L4            │       │C1->Y1->D2│
    ┌──────────┐      /       ┌──────────┐               └──────────┘
    │C1->Y1->D1│              │C2->Y2->D2│
    │C2->Y2->D2│              └──────────┘
    └──────────┘

 Обратите внимание на распад и синтез доменов. И первое и второе вытекает из
 центральной теоремы, если в качестве глобального параметра рассмотреть
 свойство принадлежности логических доменов (в данном случае A2->X2->B2,
 A3->X3->B3, C2-Y2->D2) логическим доменам более высокого уровня (в данном
 случае L1 и L2). Поэтому существование логических доменов подобных
 A2->X2->B2, A3->X3->B3, C2-Y2->D2 в доменах отличных от L1 и L2 говорит о
 том что параметром "принадлежность" можно управлять. Значит для того чтобы
 иметь теоретическую возможность распада/синтеза необходимо и достаточно
 наличия 2-х и более похожих логических доменов принадлежащих разным доменам
 более высокого уровня (к этому обязывает требование "по подобию уже
 существующего" центральной теоремы). Говоря по-простому нужно убедиться в
 том, что данный глобальный параметр не является исключительной пререргативой,
 уникальным свойством одного и только одного домена, а представляет собой
 более или менее распространенное явление. Провести в случае необходимости
 детализацию внутреннего мира на предмет поиска явлений.

Способ 2.
 Модель "построение по аналогии". Изменение L1 и L2 не происходит, но идет
 преобразование глобальных характеристик произвольных логических доменов
 внешнего мира, имеющего своей целью получить логический домен с 2-мя
 глобальными параметрами, как можно более близкими к A1->X1->B1 и C1->Y1->D1.
 Домены L1 и L2 используются в качестве источника знаний об устройстве
 требуемых глобальных параметров.

        L1                                     L3
   ┌──────────┐     ┌──────────┐           ┌──────────┐
   │A1->X1->B1│     │Логические│           │A1->X1->B1│
   │A2->X2->B2│     │  домены  │           │A2->X2->B2│            L5
   │A3->X3->B3│     │ внешнего │     \     │A3->X3->B3│       ┌──────────┐
   └──────────┘ ─┼─ │   мира,  │   --- \   └──────────┘  ─┼─  │A1->X1->B1│
        L2          │содержащие│   --- /        L4            │C1->Y1->D2│
   ┌──────────┐     │ объекты  │     /     ┌──────────┐       └──────────┘
   │C1->Y1->D1│     │A1->X1->B1│           │C1->Y1->D1│
   │C2->Y2->D2│     │C1->Y1->D1│           │C2->Y2->D2│
   └──────────┘     └──────────┘           └──────────┘


Определим что требуется для того, чтобы реализовать указанные способы в общем
виде. Вот эти требования:

 1) Любые глобальные характеристики Ai->Xi->Bi любых логических доменов должны
    существовать независимо от остальных глобальных характеристик,
    т.е. в виде отдельных логических доменов
 2) В любом логическом домене можно управлять любым глобальным параметром
 3) Между любыми глобальными характеристиками можно установить любую степень
    независимости - показатель SN может принимать любые значения

Как мы видим, требования 1), 2) и 3) являются следствием центральной теоремы.
Кроме того требование 1) вытекает также и из вложенной структуры бесконечных
логических доменов внешнего мира. Очевидно что выполнимость всех 3-х
требований делает реальным реализацию способа 1 и способа 2. Следовательно,
возможно построение любого бесконечного логического домена с заранее заданными
свойствами, при условии что эти свойства по отдельности уже где-то существуют
- являются глобальными характеристиками бесконечных логических доменов
внешнего мира.
Строго говоря эти способы в принципе равносильны, поскольку с учетом
нахождения свойств объектов в потенциальной форме можно сказать что в 1-м
способе в доменах L3 и L4 объекты 2-го порядка A1->X1->B1 и C1->Y1->D1 никуда
не исчезли, а просто перешли в потенциальную форму. Поэтому L3 и L4 одинаковы
что для первого способа, что для 2-го. Аналогичные рассуждения могут быть
сделаны и для всех остальных логических доменов. Однако рассмотрение этих
способов по отдельности проще для понимания.

В отдельных случаях вполне возможно построение домена на основе глобальных
параметров разноуровневых логических доменов и притом на различных принципах.
Рассмотрим как целевой логический домен строительную балку. Важнейший ее
глобальный параметр - жесткость - может быть получен различными путями:
изготовлением из какого-либо прочного материала; приданием соответствующей
формы (цилиндр, швеллер, тавр и т.п.); подбором температурного режима;
помещением в сильное магнитное поле и др.. Аналогично дело обстоит и с другими
глобальными параметрами. В результате теоретически мы имеем возможность
выбора из нескольких комбинаций лучший вариант относительно затрат (времени,
ресурсов) на создание целевого домена и совместимости друг с другом различных
его глобальных характеристик. Причем число таких вариантов сравнительно
невелико (и каждый из них ГАРАНТИРОВАННО ведет к достижению цели - следствие
центральной теормеы. В противоположность классическому преобразованию
характеристик домена, неминуемо заводящего в один из тупиков бесконечного
лабиринта решений). Во всяком случае неизмеримо меньше числа вариантов путей
преобразования характеристик доменов простым перебором.
Описанная многовариантность - в ряду наиболее ценных свойств предлагаемого
подхода и оно широко используется в работе объекта класса 3.3.

Очевидно что все вышесказанное имеет силу только в случае наличия у внешнего
мира вложенной структуры логических доменов. Вложенная структура существует в
любой среде функционирования имеющую доменную структуру, поскольку по
определению логического домена слагающие его объекты 2-го порядка связаны
друг с другом сильнее чем с объектами 2-го порядка любого другого домена.
Следовательно всегда имеет место вложенная структура для системы логических
доменов с уровнем не менее 2-х (1-й уровень - физически элементарные объекты
2-го порядка). Поэтому строя модель внешнего мира - внутренний мир, нужно
разбивать внутренний мир на логические домены на как вздумается, а так чтобы
они образовывали вложенную структуру. Это одно из ключевых требований к
организации доменной структуры внутреннего мира.


                       <a name="743">7.4.3. Цель объекта класса 3.3</a>

Бесконечность внешнего и внутреннего миров заставляют кардинально
пересмотреть взгляды на цель. У 3.3 она необычна - она охватывает как минимум
один бесконечный логический домен внешнего мира.

Смысл достижения цели любого объекта 3-го порядка, в т.ч. и объекта класса
3.3 редко когда носит характер "цель для цели". В основном он диктуется
необходимостью повлиять через объект 3-го порядка на внешний мир. Естественно
для этого количество физически элементарных объектов слагающих целевой объект
должно быть соизмеримо с общим числом объектов внешнего мира. Поэтому в
бесконечно большом мире и целевой объект обязан быть бесконечным. А иначе
просто нет смысла создавать объект 3-го порядка - изменение им состояний
конечного числа физически элементарных объектов неспособно оказать влияние на
внешний мир в целом. Цель объекта класса 3.3 - описание глобальных
характеристик бесконечного логического домена. Есть и еще одна причина
бесконечности домена-цели. Если домен будет конечен, то у нас нет гарантии
что мы на 100% сможем определить достигнута цель или нет. Причина та же, что
и в случае с косвенной целью в 3.2. Очевидно что в 3.3 цель не может быть
проще чем в 3.2 - она как минимум должна быть косвенной. В случае же косвенной
цели нельзя наверняка сказать достигнута истинная цель или нет. Можно говорить
лишь о коэффициенте достижения цели принимающем значение от 0 до 1. Величина
коэффициента достижения находится в прямой зависимости от отношения массы C1
и D1 к массе среды функционирования, т.е. внешнего мира.
В случае с бесконечным внешним миром коэффициент достижения цели может
принимать ненулевые значения только в случае бесконечной массы C1 и D1.
Введя аналогичный коэффициент достижения D и C относительно D1 и C1 мы опять
обнаружим, что он будет ненулевым только при бесконечных D и C.
Ну и наконец, основная причина бесконечности целевого домена. Забегая немного
вперед, укажем что достижение цели в объекте класса 3.3 основано на
центральной теореме, а точнее на способах 1 и 2 постройки бесконечного
логического домена. Естественно что к конечным структурам эти способы
неприменимы. Отказавшись от них мы автоматически теряем способность создавать
домены с заранее заданными свойствами. И нам придется опять пользоваться
"старыми добрыми" способами случайного перебора 3.1 или памяти в 3.2. А они в
бесконечных средах функционирования оказываются бесполезными.

Таким образом цель объекта 3.3 представляет собой описание глобальных
характеристик как минимум одного бесконечного логического домена. Достижение
цели означает то, что глобальные параметры реального домена будут отличаться
от заданных на величину, меньшую некоторой заранее заданной погрешности.

Глобальные характеристики домена являются обобщенными характеристиками
составляющих его объектов (если рассматривать воду в стакане как логический
домен, то его глобальным параметром будет, скажем, температура).
Однако лишь в простейших частных случаях цель "охватывает как минимум
один логический домен". В реальности же она практически всегда представляет
собой описание всего внешнего мира, таким каким его хотели бы видеть
создатели объекта 3.3. Цель описывает желаемый облик внешнего мира начиная с
некоторого бесконечного уровня N1 глобальных параметров логических доменов и
заканчивая уровнем N. Причем логический домен уровня N обязательно равен
всему внешнему миру - это своеобразная точка отсчета на координатной линии
уровня логических доменов. Если домен уровня N не равен внешнему миру, то в
результате масштабируемости универсального интерфейса невозможно предсказать
на каком интервале уровней будет реализован целевой объект.
Применительно к нашей Вселенной: логику работы любого объекта 2-го порядка
можно реализовать на любом уровне от атомного до планетарного. Например
простую систему из 3-х объектов 1-го порядка связанных общим взаимодействием
можно реализовать и как 3-х атомную молекулу и как звездную систему.


           <a name="744">7.4.4. Устройство основных узлов объекта класса 3.3.
                  Энциклопедия первичных знаний</a>

Рассмотрим теперь механизмы объекта 3.3, реализующие указанные свойства.
Необходимо решить 2 проблемы - проблему формирования (детализации, построения)
внутреннего мира и проблему поиска с его помощью пути к цели.

Рассмотрим механизм формирования внутреннего мира. Что физически представляет
из себя внутренний мир? Это с возможно большей степенью изолированности от
воздействия внешнего мира обособленная группа объектов 2.2, образующая
логические домены. Причем эти домены, так же как и домены внешнего мира,
имеют вложенную структуру. Метафорически внутренний мир можно изобразить в
виде шара, заполненного связанными универсальным интерфейсом и образующими
вложенную структуру логических доменов объектами 2.2. Вначале эти объекты
имеют исходные состояния, определяемые начальной детализацией внутреннего
мира.

К внутреннему миру ведут 3 магистрали:
 - матрица внутренних эффекторов (чтобы не путать рецепторно-эффекторные
   матрицы с аналогичными устройствами для работы с внешним миром будем
   называть их соответственно внутренними эффекторами и рецепторами.
   Аналогичные матрицы для внешнего мира - внешние эффекторы и рецепторы)
 - матрица внутренних рецепторов
 - канал передачи информации от памяти подсистемы класса 3.2 и энциклопедии
   первичных знаний к объекту-формирователю внутреннего мира

Итак, нам предстоит таким образом изменить состояния объектов, заполняющие
внутренний мир, что станет выполнятся условие его эквивалентности внешнему
миру. Как это сделать? Необходим рабочий орган - ФОРМИРОВАТЕЛЬ ВНУТРЕННОГО
МИРА (обозначаемый FvM) - позволяющий изменять состояния объектов класса 2.2.
Во-вторых нужны знания как и что конкретно надо изменить.

Рабочим органом в нашем случае может быть только объект 3-го порядка. Это
могут быть объекты 3.1 либо 3.2. Если представить внешний мир в виде E->M->R,
где E, R - матрицы внешних эффекторов и рецепторов соответственно,
M - внешний мир, то внутренний мир представится в виде vE->vM->vR; vE,
vR - матрицы внутренних эффекторов и рецепторов соответственно,
vM - внутренний мир. В этом случае целью объекта-формирователя внутреннего
мира станет E->M->R, а целевым объектом vE->vM->vR (по аналогии с объектами
A->X->B и C->Y->D, см. <a href="#72">"7.2. Объект класса 3.1"</a>). В общем случае vE и vR
неэквивалентны своим аналогам E и R и как правило всегда превосходят
последние по своим относительным возможностям. Во-первых это связано с
отсутствием каких-либо негативных последствий в случае ошибочного шага, т.к.
во внутреннем мире всегда можно использовать откат. Во-вторых, и главное, при
помощи vR и vE осуществляется произвольный доступ к любому объекту внутреннего
мира. В том числе и к недоступным для R и E аналогам объектов внешнего мира.
Как будет показано ниже, в связи с существованием во внутреннем мире т.н.
динамического распределения вероятностей, это единственный способ
осуществления операций произвольного доступа. В момент запуска объекта 3.3
необходима эквивалентность vE и E, vR и R. Смысл данного требования будет
раскрыт далее.

Следует заметить что не существует понятия внутренней цели, поскольку смысл
цели объекта 3.3 - это описание того, каким образом должен выглядеть внешний
мир (соответственно и внутренний мир). А для этого вполне достаточно иметь
один объект-цель 2-го порядка и нет необходимости дополнять им внутренний мир.

Зависимость E->M->R или R=M(E) нужно рассматривать только в рамках объекта
класса 3.3. Как известно, в 3.2 аналогичная зависимость имеет вид R=M(E,F),
где F - другие объекты класса 1.1 (отличные от E). Но в случае, когда в
общем виде целью служит преобразование всего внешнего мира (а не локального
целевого объекта), следует рассматривать уже функцию R=M(E).

Теперь по поводу того, откуда брать информацию, необходимую для построения и
непрерывной корректировки внутреннего мира. Всего имеется 3 источника:

 - Собственно матрицы внешних рецепторов и эффекторов. Как источник довольно
   слабоват, поскольку позволяет получить только сиюминутную информацию.
 - Образы этих матриц, записанные в стековых блоках памяти объекта 3.2
   (следует заметить, что 3.3 является надмножеством 3.2, и следовательно ему
   также доступна информация из указанных блоков).
 - Т.н. энциклопедия первичных знаний

Очень велика роль памяти объекта 3.2 при формировании vM. Она служит
фильтром, защищающим формирователи от перегрузки. Изменение состояний E и R
напоминает беспорядочное тепловое движение атомов и молекул. В основном эта
информация повторяется и по большей своей части бесполезна. Если бы не было
памяти, то формирователи попросту были бы парализованы огромным и быстро
меняющимся объемом малоценной информации. И только наличие памяти, хранящей
значимые состояния E-R позволяет уменьшить нагрузку на формирователи до
разумных пределов. Естественно, для этого в памяти должны храниться не только
состояния, приблизившие когда-то к цели, но и состояния отдалившие от нее.
Это нужно для построения целостной, а не однобокой картины мира. В этом в
общем-то и заключено основное отличие памяти 3.2, находящегося в составе 3.3
от автономно функционирующего 3.2. Алгоритмы обработки остаются при этом
неизменными. Формирование состояния эффекторной матрицы со стороны 3.2
происходит как и раньше - в алгоритм формирования нужно лишь внести небольшую
поправку, чтобы он не "замечал" ячеек памяти с состояниями, отдалившими от
цели. Запись в память будет идти на основе анализа абсолютных величин Ui, без
учета их знака.

Объекты-формирователи FvM, представляющие собой объекты класса 3.1 и 3.2
изменяют vM таким образом, что взаимные состояния матриц vE и vR становятся
равными соответствующим состояниям записанным в памяти. На первый взгляд
кажется что этого достаточно. Но это не так. Вспомним: основное условие при
построении внутреннего мира - это сделать его неотличимым с позиций
рецепторно-эффекторных матриц от внешнего мира. Т.е. результаты функции
R=M(E) НИКОГДА не должны отличаться от результатов функции vR=vM(vE) (vR=R,
vE=E при всех возможных E). Проблема же в том, что вид функций vM и M
(линейная, полином n-го порядка, система уравнений и т.д.) должна быть одна и
та же. Чтобы гарантировать совпадения состояний объекта 1-го порядка A1 и A2
при рассмотрении функций A1=M(B1), A2=vM(B2) для любого состояния любого
объекта 1-го порядка B1 и его аналога B2. Причем вместо A1, A2, B1 и B2 могут
быть не только E, vE, R и vR, но и любые другие объекты 1-го порядка (условие
эквивалентности M и vM с любых "точек зрения" помимо R и vR).
В случае E, vE, R и vR указанное условие требует совпадения "входов" и
"выходов" vM и M не только для значений, хранящихся в памяти 3.2, а и для
всех других возможных значений E и vE.
Формируя же его предложенным выше способом мы можем лишь гарантировать что
неотличимость эта будет строго выполняться для состояний, равных состояниям
записанным в ячейках памяти 3.2 и текущему состоянию матриц. А чем дальше мы
будем отходить от них, тем все меньше и меньше внутренний мир будет напоминать
оригинал. Экспериментировать с таким внутренним миром бессмысленно.

Таким образом мы видим что внутренний мир невозможно построить, используя
только информацию с рецепторно-эффекторных матриц. Это еще одна принципиальная
ошибка которую допускают проектировщики ИИ, проектируя (пускай даже мысленно)
его образцы, которые якобы научатся понимать закономерности внешнего мира
путем обучения начиная с нуля. Объект 3.3 не может воспринять внешний мир
иначе чем через образы рецепторно-эффекторных матриц. Для него не существует
ни светового спектра, ни тепла, ни движения и ни каких-либо других
"осмысленных" восприятий внешнего мира. Только набор объектов 1-го порядка из
памяти подсистемы 3.2 - аналог набора чисел, да интерпретирующий их внутренний
механизм. Вот и все. Разумеется из этого набора чисел просто невозможно
извлечь схему устройства внешнего мира. Какой его объект вызвал изменение
того или иного рецептора. Какие его свойства (объекты 2-го порядка) влияют на
прохождение изменений в цепочке эффекторы->внешний мир->рецепторы. Невозможно
с высокой долей вероятности предсказать как поведет себя внешний мир при
значительном отклонении последовательности состояний эффекторной матрицы от
уже известных ее образов из стековой памяти 3.2. Чтобы положительно разрешить
эти и многие другие проблемы необходимо заранее знать вид функции R=M(E).
Получить его из совокупности взаимных состояний R и E невозможно. Он должен
быть изначально задан в момент создания vM. Информация из памяти 3.2 лишь
конкретизирует уже известную в общем виде модель внешнего мира.

Вид функции R=M(E). Поскольку в силу протекания эволюционного процесса
матрицы R и E непрерывно меняются, в общем случае требуются знания вида
функций интерпретаторов всех без исключения объектов 2-го порядка внешнего
мира. Да вдобавок еще нужно как-то записать все это и использовать при
формировании внутреннего мира. Конечно же в реальности учесть знания о всех
физически элементарных объектах 2-го порядка просто невозможно. Также
практически невозможно описать виды функций связи глобальных параметров всех
бесконечных логических доменов.

Решение проблемы видится в использовании информации не о всех доменах, а
только той их части, что используется целью: с уровнями N1..N (минимально
необходимый объем знаний). Объектам 2-го порядка внутреннего мира - аналогам
логических доменов внешнего мира уровней N1..N - изначально придается не
только вложенная структура логических доменов, но и свойства позволяющие
формирователям создавать функцию vR=vM(vE) не по случайной цепочке объектов
2-го порядка (о том как образуется упомянутая цепочка см. <a href="#723">"7.2.3. Механизм
создания объекта 2-го порядка"</a>), а более-менее упорядоченно. Упорядочить
процесс построения цепочки возможно при условии что вероятность изменения
формирователями определенных объектов 2-го порядка при определенном состоянии
внутреннего мира выше вероятности изменения остальных объектов 2-го порядка.
Аналогично как повышение давления воды в системе водоснабжения вызывает
прорыв трубы в наиболее слабом месте. Водопровод постоянно стареет и
ремонтируется, поэтому каждый раз вода течет из разных мест.
Картина распределения вероятностей изменения объектов внутреннего мира в
зависимости от его состояния - ДИНАМИЧЕСКОЕ РАСПРЕДЕЛЕНИЕ ВЕРОЯТНОСТЕЙ - ДРВ
и будет нести информацию об реальном устройстве внешнего мира. ДРВ по своему
определению не зависит от внешних факторов и определяется исключительно
свойствами объектов 2-го порядка внутреннего мира и их взаимовлиянием. Каким
образом будет создаваться ДРВ в принципе неважно. Создатели объекта 3.3 как
бы встраивают во внутренний мир формулы (виды зависимости) взаимодействия
логических доменов внешнего мира в общем виде. А затем формирователи
внутреннего мира по информации из памяти 3.2 проводят конкретизацию - находят
значения коэффициентов при неизвестных. Т.е. если какой-то объект 2.2
описывается к примеру формулой y=a1*x^2+a2*x+a3 (очевидно они будут
глобальными параметрами логических доменов внутреннего мира), то в процессе
формирования vM коэффициенты a1, a2, a3 принимают соответствующие значения.
При этом не нарушается принцип нужности 3.3 ("а не делаем ли мы за него всю
работу?!") - знание общей картины построения мира еще не означает знания его
в деталях. А эти детали необходимы при движении к цели. Глубина конкретизации
зависит от поставленной перед 3.3 цели - чем она конкретнее, тем конкретнее
должно быть описание M. По сути дела, мы просто даем 3.3 картину
распределения логических доменов внешнего мира без их детального описания.
Детализация происходит в процессе работы 3.3 - построения пути к цели.
Отсюда следует что формирователи vM должны изменять только "коэффициенты"
объектов 2.2, но не могут влиять на их структуру. Достигнуть этого можно
разными способами: используя масштабируемость универсального интерфейса;
чтобы изменение структуры сопровождается гораздо большими затратами энергии,
чем изменение коэффициентов (естественно энергетические возможности
формирователей намеренно должны быть занижены); или даже используя различный
порядок объектов: формирователь - объект 2-го порядка, структура - объект 2-го
порядка, "коэффициенты" структуры - состояния объектов 1-го порядка, таким
образом формирователь ни при каких условиях неспособен изменить структуру.
Однако последний способ весьма сложен в практической реализации, поскольку
внутренний мир состоит из логических доменов и все операции затрагивают их
глобальные характеристики. Следовательно объекты 1-го порядка в "чистом" виде
отсутствуют, имеются только объекты класса 2.1.

Наличие ДРВ делает невозможным решение проблемы доступа к произвольному
объекту внутреннего мира при помощи "встроенных" в структуру внутреннего мира
средств наподобие самого ДРВ. Поскольку встраивание в структуру внутреннего
мира любых дополнительных систем исказит ДРВ, что совершенно недопустимо.
Поэтому проблема произвольного доступа должна решаться другими методами, а
именно созданием связей между объектами 1-го порядка внутреннего мира и ядром
объекта 3.3 (модулем М3). Ввиду того что подобные связи по своему смыслу
эквивалентны матрицам внутренних рецепторов и эффекторов, то имеет смысл
объединить первое со вторым. Получаемые в результате vR и vE по своим
относительным возможностям будут намного превосходить свои аналоги R и E,
являясь их надмножеством.

Приведем в качестве примера методику создания ДРВ на основе принципа деления
множества всех возможных состояний объектов 1-го порядка на устойчивые и
неустойчивые. Неустойчивое состояние характеризуется либо самопроизвольным
переходом в устойчивое состояние (благодаря работе объектов 2-го порядка),
либо необходимостью крайне малого внешнего воздействия для осуществления
такого перехода (в результате действий формирователя внутреннего мира).
Устойчивые состояния в противоположность неустойчивым не переходят сами по
себе в другие состояния (устойчивые или неустойчивые) и гораздо более
стабильны по отношению к внешним воздействиям. Совокупность объектов 2-го
порядка, образующих универсальный интерфейс и имеющие устойчивые и
неустойчивые состояния - нестационарный универсальный интерфейс. Если все
состояния устойчивые или все неустойчивые - стационарный.
Заполним внутренний мир объектами 1-го порядка - аналогами объектов 1-го
порядка внешнего мира и свяжем их нестационарным универсальным интерфейсом.
При этом изменение состояний объектов 1-го порядка, сопровождающее переход от
одного стационарного состояния в другое, с высокой долей сходства будет
описывать поведение реальных объектов 1-го порядка внешнего мира.
Вероятность пребывания внутреннего мира в неустойчивом состоянии мала, а в
устойчивом велика. Следовательно при построении формирователем внутреннего
мира функции vE=vM(vR) получаемая цепочка объектов 2-го порядка будет
использовать в основном переходы затрагивающие только устойчивые состояния.
Таким образом для возникновения ДРВ по принципу нестационарного универсального
интерфейса нужно чтобы с точки зрения формирователей, vE и vR и всех других
блоков и модулей объекта 3.3, внутренний мир состоял только из объектов 2.1,
правила взаимодействия которых заданы нами. Забегая вперед отметим что именно
эти объекты образуют энциклопедию первичных знаний.
Итак, создание ДРВ посредством нестационарного универсального интерфейса
возможно. Однако возникает вопрос: не слишком ли много ручной работы
потребуется на построение такого универсального интерфейса?
Очевидно попытка решения проблемы "в лоб": каждому объекту 1-го порядка
внешнего мира создать аналогию с последующим построением объектов 2-го
порядка обречена на неудачу по причине колоссального объема работ и незнания
картины распределения ВСЕХ объектов 1-го порядка внешнего мира даже в рамках
глобальных параметров бесконечных логических доменов уровней N1..N.

Но выход существует благодаря двум обстоятельствам.
Первое. Общее количество объектов 1-го порядка огромно, в пределе бесконечно.
Но количество их типов (т.е. если свойства различаются несущественно)
ограничено. Подобно тому как число атомов куска металлического сплава велико,
а количество типов элементов его химического состава всего несколько штук.
Значит нужно лишь выявить число типов объектов 1-го порядка внешнего мира.
Следует обратить внимание читателя что число типов объектов 1-го порядка в
любом случае меньше числа объектов 1-го порядка, поскольку в силу наличия
универсального интерфейса у логических доменов уровня Nx имеется хотя бы одно
эквивалентное свойство. Следовательно относительно этого свойства логические
домены образуют один тип объектов 1-го порядка. Различные количества
эквивалентных свойств различных множеств логических доменов порождают
соответственно несколько типов объектов 1-го порядка.
Второе. Заполнив внутренний мир огромным числом объектов 1-го порядка
нескольких типов мы еще не решим задачу. Ведь предстоит еще создавать объекты
2-го порядка. Если бы объекты 1-го порядка были физически элементарны, то от
процедуры создания объектов 2-го порядка вручную уйти невозможно. Но в том-то
и дело что все не так! На самом деле это глобальные параметры бесконечных
логических доменов. Следовательно объекты класса 2.1. А это значит что вместо
пассивных объектов 1-го порядка - физических неоднородностей, мы оперируем с
активными объектами 2-го порядка. Способ взаимодействия между двумя типами
объектов класса 2.1 (через общую ось - см. <a href="#51">"5.1. Математические модели
объектов 2-го порядка"</a>) остается независимым от того в какой точке внутреннего
мира они находятся. Задав набор правил взаимодействия - аналога законов
природы - мы получим автоматическое построение нестационарного универсального
интерфейса, поскольку выполнение заданных правил приводит к упорядочиванию
взаимодействий по всему объему внутреннего мира. Но самая замечательная
особенность системы объектов 2.1, пожалуй, в ее способности к порождению
комбинаций: простые знаний служат строительным сырьем более сложных знаний
(являясь глобальными характеристиками логических доменов).

С учетом всего вышесказанного схема "внутренний мир - формирователи" выглядит
следующим образом:

                 ┌───────────────┐ ┌──────────────────────┐
                 │Стековая память│ │Энциклопедия первичных│
                 │подсистемы 3.2 │ │     знаний - ЭПЗ     │
                 └───────┬───────┘ └───────────┬──────────┘
                         v                     v
                    ╔════╧═════════════════════╧════╗
                    ║ Формирователь FvM внутреннего ║
                    ║ мира (объект 3-го порядка)    ║
                    ╚═══════════════╤═══════════════╝
                                    v
                               ┌────┴─────┐
                               │Внутренний│
                               │   мир    │
                               └──────────┘

Устройство, в котором хранится априорный набор типов объектов класса 2.1 из
которых строится внутренний мир, носит название ЭНЦИКЛОПЕДИИ ПЕРВИЧНЫХ ЗНАНИЙ
(сокращенно ЭПЗ). Рассмотрим ее подробнее.
По своему назначению ЭПЗ подобна энциклопедии (отсюда и название), где как
можно всесторонне описан внешний мир. Видимо ЭПЗ больше будет напоминать
энциклопедию по обзору науки и техники чем абстрактные
математическо-ориенированные издания в силу необходимости связать описанное в
ней с картиной внешнего мира, получаемой из стековой памяти подсистемы 3.2.
Как и обычная энциклопедия, ЭПЗ не содержит точного описания конкретно
взятого объекта внешнего мира. Она содержит описание ключевых параметров
однотипных объектов. Каждый такой тип при соответствующем варьировании
параметров превращается в аналог одного из реально существующих объектов
класса 2.1 внешнего мира. ЭПЗ содержит не только типы объектов 2.1, но и
возможно, их базовые комбинации. Будучи помещенные во внутренний мир они
способны намного облегчить его построение и построение целевого объекта.
Как уже указывалось выше, минимально возможный объем знаний для построения
внутреннего мира должен охватывать логические домены уровней N1..N. Знания
большего уровня состоят из знаний меньшего.
Уровень набора простейших первичных или АТОМАРНЫХ, уже неделимых далее,
знаний не должен превышать N1. В ряде частных случаев, когда взаимодействие
разноуровневых доменов внешнего мира имеет какие-либо аналогии, корректность
работы внутреннего мира сохранится и при выходе за пределы N1..N. В противном
случае выходе за N1..N объект 3.3 моментально теряет преимущество априорных
знаний об устройстве мира и переходит к малоэффективному принципу работы
интерполяции/экстраполяции объекта 3.2. Поэтому создателям объекта 3.3
желательно занести в ЭПЗ не минимальный набор знаний, а как можно больше.
Из требования ДРВ иметь во внутреннем мире только объекты из ЭПЗ вытекает то,
что vE и vR также должны быть построены на основе ЭПЗ. По той же причине
крайне важна целостность и универсальность ЭПЗ - любой объект (явление)
внешнего мира должен непременно представлятся комбинацией тех или иных знаний
из ЭПЗ.

Из теории объектов (см. <a href="#3">"3. Теория объектов"</a>) известно что два полностью
одинаковых по своим свойствам объекта сливаются в один. При копировании знаний
из ЭПЗ во внутренний мир мы создаем во внутреннем мире новый объект,
отличающийся от своего шаблона в ЭПЗ по таким свойствам, которые не несут
полезной информации (заложенных создателями 3.3 знаний). Это своеобразные
ксерокопии, клоны. Они отличаются от оригинала только своим положением в
пространстве (или по иной координате). В дальнейшем процесс копирования
знаний из ЭПЗ будем называть процессом клонирования.

Рассмотрим вопрос универсальности атомарных знаний. Очевидно объект класса
3.3 не может изменять содержимое ЭПЗ в процессе своего функционирования
(любое изменение ЭПЗ приведет в конечном итоге к искажению ДРВ, что чревато
исчезновением похожести vM и M). Следовательно внутренний мир не может
состоять из непредусмотренных ЭПЗ объектов. Но в процессе работы 3.3 реальна
ситуация когда нужно будет выйти за пределы доменов уровней N1..N и строить
внутренний мир за пределом N1..N (пусть даже он и будет совпадать с внешним
миром только в ограниченном числе состояний, определяемых стековой памятью
подсистемы 3.2). И если набор атомарных знаний из ЭПЗ недостаточно
универсален, то может создаться положение невозможности такого построения. Но
увеличивать универсальность набора атомарных знаний ЭПЗ и гибкость множества
их комбинаций по своему произволу мы тоже не можем, т.к. это неминуемо
приведет к "размазыванию" ДРВ. Одно из решений может заключаться в создании
УНИВЕРСАЛЬНОГО АКСИОМАТИЧЕСКОГО БАЗИСА. Это набор объектов класса 2.1 при
помощи комбинации которых можно построить любые логическое домены, в т.ч. и
образующие вложенную структуру. Это вполне возможно, ведь набором элементарных
математических понятий и их последующими комбинациями можно описать любой
объект 2-го порядка. Следовательно универсальный аксиоматический базис нужно
создавать как аналог элементарных математических объектов. В дальнейшем
универсальный аксиоматический базис ложится в основу атомарных объектов ЭПЗ.
Чтобы исключить непосредственное использование универсального аксиоматического
базиса во внутреннем мире на уровне доменов N1..N можно использовать те же
приемы что и при изменении "коэффициентов" объектов vM без затрагивания их
структуры, например энергетический способ. Существование универсального
аксиоматического базиса по-видимому будет одним из многих принципиальных
положительных отличий ИИ от человека, т.к. в человеке универсальный
аксиоматический базис скорее всего отсутствует и атомарный уровень нашей ЭПЗ
определяется границей возможностей рецепторов и эффекторов (зрение, слух,
руки, ноги и т.д.), остающихся как известно неизменными на протяжении всей
жизни. Неспособность человека к наглядному мысленному представлению объектов
микромира с присущими им корпускулярно-волновым дуализмом, принципом
неопределенности и другими квантово-механическими свойствами также следствие
отсутствия универсального аксиоматического базиса.

Практический пример содержимого ЭПЗ скорее всего будет представлять собой
концентрат всех знаний человечества. Возможно содержимое ЭПЗ будет увязано
с т.н. информационными плагинами (см. <a href="#92">"9.2. Информационные плагины"</a>)
и альтернативным миром (см. <a href="#91">"9.1. Объекты класса 3.3.2 и 3.3.3"</a>). Вообще если
представить себе 3.3 в виде автозавода, то знания из ЭПЗ - это что-то подобное
поставляемым на этот завод комплектующим деталям. Разным болтам, гайкам,
резинотехническим заготовкам, стеклам и стальному прокату определенных
размеров соответствуют простейшие знания ЭПЗ, а заготовкам дверей, кузова,
элементам двигателя, частям электрооборудования и другим сложным составным
изделиям-блокам - составные знания ЭПЗ. Завод имеет цель: выпускать
автомобили для нестандартной работы, например карьерные самосвалы. Ясно что
гораздо проще собрать машину из готовых полуфабрикатов, чем все делать самим.
Но каждый болт подходит к гайке только определенного размера,
электрооборудование рассчитано на определенное напряжение и т.д.. Поэтому
собрать комплектующие каким угодно образом не удастся. В этом проявляется
свойство внутренней активности знаний из ЭПЗ. Они подходят друг к другу
только определенным образом. Как ключ к замку. Следовательно вероятность
появления конструкций в которых детали подходят друг к другу высокая,
а в которых не подходят - ничтожная. Возникает ДРВ.
Поэтому в карьерных самосвалах будут имеющиеся болты и гайки, рама сваренная
из стандартных швеллеров и типовое электрооборудование. Но т.к. карьерные
самосвалы сильно отличаются от обычных автомобилей, то многое придется
изготавливать с нуля: покрышки к огромным колесам, электротрансмиссию и
другое. Возможно нужно будет размонтировать отдельные комплектующие на
составные части и затем собирать из них новые полуфабрикаты. Так же происходит
и со знаниями из ЭПЗ: объект 3.3 максимально использует уже имеющиеся, но если
их недостаточно он начинает дробить сложные знания на более простые и
образовывать из получившегося новые знания. Но болты и шурупы разобрать
невозможно - это аналог простейших неделимых знаний ЭПЗ. Значит создателям
3.3 нужно постараться разработать такой комплекс атомарных (и притом
подходящих друг к другу, дополняющих друг друга) знаний, что на их основе
можно собрать что угодно. Не только карьерный самосвал, но и велосипед и
атомный подводный корабль. Универсальный аксиоматический базис - аналог
законов взаимодействия атомов и молекул для сборочного завода, инструмент для
работы с отдельными атомами и молекулами. Собственный поставщик любых
материалов и сплавов, любых заготовок из них. Однако уменьшение размеров
простейших знаний ЭПЗ делает их не только универсальнее но и придает ДРВ все
меньшую и меньшую четкость. Необходимо сделать так, что чем проще знания тем
сложнее ими управлять (дробить и изменять). В этом случае вероятность
использования готовых полуфабрикатов без их модификации будет выше
вероятности их мутации. Возможно есть и другие способы сохранения силы ДРВ без
ущерба универсальности.
Создание ЭПЗ возможно уже сейчас, т.к. вероятно получение человечеством
знаний подчинено нормальному закону распределения. Если отложить по оси X
время а по оси Y количество полученных знаний, то знания бывшие у
человечества до момента времени t=0 составляли его ЭПЗ. И к настоящему
времени максимум по Y уже пройден (нам известны основополагающие законы
природы). Иными словами "критическая" масса знаний уже имеется.

В завершении рассказа про FvM, ДРВ и ЭПЗ укажем начальные условия (состояние)
объекта 3.3, необходимые для того чтобы все это работало.
Как подчеркивалось раньше, формирование внутреннего мира происходит в три
последовательно протекающие стадии:

 1. Создается набор объектов 2.1 - ЭПЗ, возможно с использованием
    универсального аксиоматического базиса.
 2. Путем клонирования объектами из ЭПЗ в большом количестве заполняется vM.
    Для этой работы можно применить объекты 2-го порядка, рассматривая знания
    из ЭПЗ (реальный порядок 2.1) как объекты класса 1.1.
 3. Происходит формирование vM - его приведение к состоянию, эквивалентному M.
    Для этого служит т.н. формирователь внутреннего мира: объект 3-го порядка
    (E->M-R)->[FvM]->(vE->vM->vR).

Говорилось что (E->M->R)->[FvM]->(vE->vM->vR) является ни чем иным как 3.1
либо 3.2. Однако если вспомнить схемы упомянутых объектов, то нетрудно
видеть что помимо общего описания (A->X->B)->[3.*]->(C->Y->D) обязательно
наличие обратных связей от C и D, а также требование неизменности структуры
(не состояний!) A и B, C и D. Причем протекающий в 3.2.2 эволюционный процесс
не в состоянии изменить ни первое, ни второе. Следовательно, если мы решили
применить 3.1 или 3.2 в качестве инструмента постройки vM, мы также будем
вынуждены соблюсти данные требования. Но не лишаясь при этом возможности
изменения структуры E, R, vE, vR эволюционным процессом и в результате
неизбежного общего преобразования vM в процессе достижения цели. Противоречие
решается несложно: первоначально проводится не просто клонирование знаний из
ЭПЗ с последующим хаотическим заполнением vM. Создателям 3.3 нужно обеспечить
первоначальное соответствие E и vE, R и vR. Для этого необходимо выделить vE и
vR из общей (пока еще никак не упорядоченной) массы объектов заполняющих vM и
установить связь между ними и ядром объекта 3.3 - модулем М3. И уже только
после успешного осуществления данной процедуры можно включать FvM.

Следует отметить что в принципе поверх первоначального выделения vE и vR
создателям 3.3 не нужно дополнительных действий по детализации vM. Он и так
будет автоматически построен формирователем. Но если по каким-либо причинам
требуется ускорить этот процесс и/или сделать его более точным (как известно
FvM обеспечивает приближенное построение vM, хотя и до сколь угодно высокой
степени), нужна дополнительная первоначальная детализация vM. После завершения
формирования vE и vR умощняются: увеличивается их количество и ассортимент.
Создаются внутренние плагины рецепторов и эффекторов vpE, vpE. Причем данный
прогресс обеспечивается исключительно vE и vR (они создают себе надстройку,
затем при помощи этой надстройки еще более мощную надстройку и т.д.). Так что
весь процесс умощнения воспроизводИм и в M.

Если при формировании vM кроме информации из памяти подсистемы 3.2 решено
использовать и непосредственно состояния E и R, то необходимо соблюдать еще
одно дополнительное условие: равенство скоростей протекания процессов
E->M->R и vE->vM->vR. Иными словами субъективное, внутреннее время, должно
быть синхронизировано с внешним, объективным. В противном случае возможны
серьезные ошибки формирования. Но на этапе достижения цели в рамках vM, когда
vM уже сформирован, внутреннее время желательно многократно ускорять. Более
подробно о понятии времени в рамках сред существования объектов 3-го порядка
см. <a href="#93">"9.3. Время. Квазирекурсия в средах существования объектов класса 3.3"</a>.

Рассмотрим следующий ключевой узел объекта 3-го порядка: ПОЛИГОН внутреннего
мира. Как ясно из названия, его задачей служит отработка действий по распаду
и синтезу логических доменов. Более предметно о распаде/синтезе логических
доменов будет рассказано в пункте <a href="#745">"7.4.5. Путь к цели"</a>. А пока просто примем к
сведению что принцип работы полигона использует центральную теорему и
сводится к получению целевого домена, облик которого определяется целью
объекта 3.3.
Необходимость в наличии полигона обусловлена требованием сохранения
эквивалентности внутреннего мира внешнему. Поэтому любые опыты, связанные с
изменением его структуры должны проводится не в нем самом, а в соответствующей
копии - полигоне. Такой подход заодно устраняет возможные последствия при
неправильном построении целевого домена.
Очевидно перед началом проведения "умозрительных опытов" свойства совокупности
объектов 2-го порядка слагающих полигон равны соответствующим свойствам
объектов 2-го порядка внутреннего мира. Это достигается путем, аналогичным
созданию самого внутреннего мира (создается формирователь полигона, сам
полигон выступает в роли внутреннего мира, в роли внешнего мира выступает либо
внутренний мир, либо внешний). Имеется 2 концепции создания полигона: либо
копировать в полигон состояние внутреннего мира, либо создавать параллельно
несколько внутренних миров и впоследствии использовать часть из них как
полигоны. Второй путь более предпочтителен, поскольку цепочка
M->FvM->vM->Fполигона->полигон накапливает больше ошибок чем цепочка
M->Fполигона->полигон. Режим отката в случае неустранимых "по-простому"
(посредством внутриполигонных эффекторно-рецепторных матриц vplE и vplR)
ошибок при построении в полигоне целевого домена реализуется по той же
методике: полигон попросту формируется заново с потерей текущего состояния.

Если полигонов несколько применим гораздо более эффективный вариант:
пересоздавать неудачный полигон на основе не M, а того полигона где целевой
домен частично уже успешно построен. Наглядное представление о сути работы
такой древовидной системы логического вывода дает ее схематичный рисунок
(буква P - "полигон"):

   vM->[FP1]->P1->P11->P12->P13->P14->P15->P16->P17->...
                            │                   │
                            │                   └>[FP4]->P41->P42->P43->...
                            │
                            └>[FP2]->P21->P22->P23->...
                                          │
                                          └>[FP3]->P31->P32->...

Цепочка вида "P11->P12->P13->" означает что полигон P1 в силу протекающих в
нем процессов создания логических доменов последовательно проходит состояния
P11, P12, P13 и т.д. Разумеется полигон населяют многие миллиарды объектов
1-го и 2-го порядков и рассматривать каждое изменение каждого объекта как
изменение состояния всего полигона с практической точки зрения бессмысленно.
Поэтому состояния P11, P12, P13, ... отражают лишь существенные изменения:
определение местоположения "сырьевых" доменов (из которых потом путем распада
будут изъяты необходимые объекты 2-го порядка), отдельные стадии распада и
синтеза и др..
Если какое-либо состояние имеет особо важное, ключевое, значение то оно
копируется в другой полигон. Например на рисунке состояние P13 при помощи
формирователя полигона (устроенного точно так же как и формирователя vM) FP2
создается новый полигон P21. Что ценно: в дальнейшем P21 уже никак не связан
с P13 и развивается по своему собственному сценарию.
Теперь если полигон P1 потребуется пересоздать заново, а полигон P21 оказался
успешным, то его можно использовать в качестве образа при создании P1.
При этом удачные шаги P1->P12->P13 потеряны не будут, как это имело бы место
при использовании в качестве образа vM.
Если несколько полигонов построили целевой домен разными способами, то имеется
возможность отобрать лучший вариант. Этот большой дополнительный плюс хорошо
коррелирует с многовариантным синтезом целевого домена на различных принципах
(см. <a href="#742">"7.4.2. Бесконечные логические домены. Центральная теорема и ее
следствия"</a>).

Но в принципе можно обойтись и без многовариантности, поскольку оптимизация
пути к цели в рамках 3.3 ...не нужна! Ведь смысл любой оптимизации заключен в
улучшении пути к цели относительно состояния других, не входящих в цель,
объектов. Например оптимизация программы для компьютера по критерию ее объема
или быстродействия проводиться для улучшения условий работы пользователя с
ней. Но она (оптимизация) никак не сказывается на результате работы программы.
Как мы знаем объект 3.3.1 достигает цели путем постройки целевого логического
домена. При этом ему совершенно неважно что происходит с остальными доменами
внешнего мира. А значит для него просто не существует критерия оптимизации
постройки целевого домена, поскольку нет нужды заботиться о состоянии
объектов, не входящих в целевой домен. Если в силу каких-то соображений
существует необходимость контроля состояния некоторых объектов 2-го порядка,
их просто нужно включить в цель. Следовательно в рамках объекта 3.3.1
бессмысленно говорить о "хороших" или "плохих", "оптимальных" или
"неоптимальных" путях достижения цели. Теоретически оптимизация полезна только
на этапе отбора путей распада/синтеза промежуточных логических доменов (так
сказать "промежуточных" целей). Поскольку может случиться что некоторые из
таких "промежуточных" целей поглощают для своего создания слишком много
ресурсов (материальных, временнЫх), в результате чего главная цель (целевой
логической домен) вполне может оказаться недостижимой в результате ресурсового
истощения внешней среды.
Все сказанное справедливо для случая когда объекту 3.3.1 задается
принципиально достижимая цель. Но конкретно для нашей цивилизации представляет
интерес противоположный случай принципиально недостижимой цели (почему см.
<a href="#105">"10.5. Неразрушающая цель"</a>). В таких условиях имеет смысл говорить о близости
текущего состояния целевого домена к требуемому. Следовательно необходимо
проводить оптимизацию нескольких путей достижения цели относительно критерия
погрешности отклонения каждого из них от конечной цели.

Следы наличия древовидной, многовариантной, системы логического вывода имеются
у человека. Однако по всей видимости этот механизм еще в зачаточном состоянии.
В искусственно создаваемом ИИ, где не будет дефицита ресурсов, объема и
энергии при постройке областей внутреннего мира и полигонов, безусловно
следует уделить совершенствованию параллельной многополигонной системе много
внимания.

Кроме использования в создании полигона формирователей 3-го порядка в редких
частных случаях применим дополнительный весьма интересный, очень быстрый и
мощный механизм отката/копирования. Допустим что все знания из ЭПЗ имеют т.н.
МНОГОСЛОЙНУЮ СТРУКТУРУ:

                                      ┌──────────────┐
             ╔═══════════════╗        │              │─┐
             ║ Привод слоев  ╟─1──────┤              │ │─┐
             ║ переключаемый ╟─2──────│             1│ │ │
             ║ из модуля M3  ╟─3──────└──────────────┘2│ │
             ║               ║ ....... └───────────────┘3│───┐
             ║               ║           └───────────────┘   │
             ║               ╟─N─────────────┤     .......   │
             ╚═══════════════╝               │              N│
                                             └───────────────┘

Каждый слой: 1, 2, 3, ..., N представляет собой объект 2.1 и несет
полагающуюся смысловую нагрузку: знания. Как и обыкновенный (немногослойный)
объект ЭПЗ, будучи помещенный в vM, он манипулируется формирователем FvM,
способен вступать во взаимодействие с одноименными слоями других, также
многослойных, объектов клонированных из ЭПЗ и соответственно образовывать ДРВ.
При этом изменение состояния одного слоя никак не сказывается на остальных
слоях. Т.е. каждый слой ведет себя совершенно автономно будто других слоев и
вовсе не существует. В целом вся эта конструкция напоминает концепцию
масштабируемости универсального интерфейса: одноименные слои как бы образуют
соответствующий уровень, не пересекающийся с остальными. Но есть три важные
особенности:

 - Каждый слой изначально (пока еще многослойный объект находится в ЭПЗ и не
   менялся формирователем и внутренними рецепторно/эффекторными матрицами) по
   хранимым знаниям равен другим слоям.
 - ДРВ образуемое одноименными слоями одно и то же;
 - Самое важное. Состояние любого слоя при помощи т.н. ПРИВОДА СЛОЕВ можно
   скопировать в состояние любого другого слоя. Что важно, при данном
   копировании достигается 100%-е сходство не в пример приближенному для
   случая работы формирователей. И притом это делается в один (!) шаг, т.е.
   очень быстро.

Очевидно самое важное скрыто в конструкции привода слоев. Каким образом
удается достичь преимуществ в точности и скорости? Ведь как известно знания
из ЭПЗ представляют собой объекты 2-го порядка. Следовательно такие вещи как
их копирование равносильны управлению ими и требуют объекта 3-го порядка:
что-то аналогичного формирователям. Но не следует забывать о том, что объекты
ЭПЗ представляют собой бесконечные логические домены. А в своей основе они
состоят из массы физически элементарных объектов 1-го и 2-го порядков. Поэтому
требование изменения глобальных параметров доменов уровня N влечет за собой
требование изменить глобальные параметры доменов уровня N-1 и так до
бесконечности. Вот если бы многослойная конструкция существовала начиная с
элементарного уровня, то изменив параллельно при помощи объекта 2-го порядка
состояние физически элементарных объектов 1-го порядка одного слоя на основе
информации другого слоя мы бы автоматически придали первому слою свойства
второго мгновенно и независимо от числа объектов 1-го порядка. Поэтому привод
слоев к сожалению работоспособен только если он поддерживается на физически
элементарном уровне и встроен в среду функционирования наподобие самого
универсального интерфейса.
Однако развитие физики и техники к моменту создания объекта 3.3 может быть
позволит обнаружить возможно существующие состояния пространства и вещества,
где эффект привода слоев хорошо проявляется. Создание подобных условий в
областях внутреннего мира и полигона объекта 3.3 и использование в дальнейшем
механизма привода слоев дало бы существенный рост эффективности.

Продолжая начатую выше аналогию 3.3 с автозаводом копирование одного полигона
в другой (а равно и формирование внутреннего мира) при помощи формирователей
выглядело бы так. В цех (аналог полигона) приходит бригада метрологов и
испытателей (аналог внутренних рецепторов и эффекторов) и измеряет все подряд,
запускает станки, смотрит как все работает. А после приходит в совершенно
пустой цех и по результатам замеров строит там точную копию того что видела.
Естественно 100% копии не будет - вот и погрешность при копировании одного
полигона в другой. Привод слоев работает по-другому. Каждый атом каждого цеха
связан со своими "побратимами" из других цехов. Если понадобится скопировать
содержимое цеха A в цех B некто нажимает кнопку и в тот же миг атомы цеха B
выстраиваются в том же порядке что и в A. Даже векторы скоростей сохраняются.

Рассуждая про внутренний мир возникает законный вопрос: в чем его отличие от
памяти компьютера? Основные различия естественно заключены в порядке: vM -
объект класса 2.2, а память компьютера - 1.1. Что касается эквивалентности
внутреннего мира всему компьютеру (т.е. системе вида
"обработчик 2.2" <--> "данные 1.1"), то желательно чтобы внутренний мир
представлял собой именно набор независимых объектов класса 2.2, а не систему
вида "обработчик 2.2" <--> "данные 1.1". Естественно главным аргументом в
пользу выбора набора независимых объектов выступает необходимость наличия ДРВ
(соответственно обязательность внутренней активности знаний ЭПЗ) а также отбор
оптимальных путей его получения. Но имеются и другие полезные качества:

 1) Необходимость наличия у внутреннего мира вложенной структуры логических
    доменов и бесконечности последних. Реализовать это требование при помощи
    автономных объектов класса 2.2 гораздо проще чем в системе вида
    "обработчик 2.2" <--> "данные 1.1". Этому способствуют явления изомерии
    (многообразие пространственной конфигурации сложной молекулы при
    неизменной химической формуле, сопровождаемое значительным диапазоном
    изменений физико-химических свойств соединения), голографии, динамического
    превращения свойств макросистем (например живой клетки) и др..

 2) Способность к детализации внутреннего мира из автономных объектов 2.2
    выше чем у системы "обработчик 2.2" <--> "данные 1.1".

 3) Внешний мир представляет собой набор логических доменов, которые можно
    представить как объекты класса 2.2. И чем ближе по конструкции модель
    будет к реальности, тем лучше. (Естественно внешний мир далеко не так
    прост - он объект 4-го порядка. Но так как в рамках объекта 3-го
    порядка невозможно управлять объектами выше 2-го порядка мы приближенно
    считаем внешний мир совокупностью объектов 2-го порядка).

 4) В процессе формирования и абстрактных построений неизбежно возникает
    необходимость в изменении свойств внутреннего мира. В случае
    независимости объектов 2.2 сделать это гораздо проще - изменение одного
    объекта не влияет на свойства остальных.

 5) В некоторых случаях некоторые объекты 2.2 внутреннего мира по своим
    физическим характеристикам могут быть очень близки к своим аналогам из
    внешнего мира. Такое физическое соответствие дает очень точное
    моделирование процессов, протекающих в реальном, внешнем мире. Очевидно
    что реализовать такие похожие объекты класса 2.2 нельзя при структуре
    вида "обработчик 2.2" <--> "данные 1.1".

Ясно что все вышеперечисленные пункты имеют чисто практическое значение, т.к.
принципиально множество маленьких объектов 2.2 равносильно одному большому.

При рассмотрении идеи внутреннего мира возникает вопрос вложенности
внутренних миров: образ объекта 3.3 во внутреннем мире тоже может содержать
внутренний мир. Тот, в свою очередь, опять может содержать образ 3.3 с
внутренним миром и т.д.. Таким образом возникает бесконечный ряд вложенных
друг в друга внутренних миров. Это неверные рассуждения. Ведь внутренний мир
формируется объектами 3-го порядка, а следовательно не должен содержать
объектов порядком выше 2-х. Если же говорить о вложенности внутренних миров,
то тогда получается что во внутреннем мире, где существует образ 3.3 также
содержащий внутренний мир, должны присутствовать объекты 3-го порядка
- формирователи вложенного в образ 3.3 внутреннего мира. При этом получается
что образ 3.3 будет уже объектом не 2-го, а 3-го порядка. Естественно это
противоречит требованию содержать во внутреннем мире только объекты 1-го и
2-го порядков.

Таким образом, внутренний мир не может содержать в себе других вложенных
внутренних миров. Образ объекта 3.3, других объектов 3-го порядка, да и
вообще всего внешнего мира, представлены во внутреннем мире как объекты 2-го
порядка. Это, конечно, приводит к появлению погрешности в описании внешнего
мира. Но при больших уровнях объектов 2-го порядка, слагающих внутренний мир,
влиянием этой погрешности на принятие правильного решения в достижении цели
можно пренебречь. Например все знания людей об устройстве Вселенной
представляют собой объекты 2-го порядка. Как следствие, все они имеют рамки
своей применимости. Точно так же ведут себя и объекты внутреннего мира: они
корректно описывают внешний мир лишь в определенных пределах. Для расширения
этих пределов необходимо проводить расширение ЭПЗ и, возможно, детализацию
внутреннего мира. Очевидно использование копирования знаний из ЭПЗ и
последующее автоматическое построение на их основе внутреннего мира делает
процедуру первоначальной ручной детализации излишней (кроме установки
соответствия vE и E, vR и R). Однако если такая возможность имеется, то ей
желательно воспользоваться (как и описанием в ЭПЗ знаний о доменах выходящих
за пределы уровней N1..N).


                             <a name="745">7.4.5. Путь к цели</a>

Рассмотрим теперь проблему поиска пути к цели. Путь к цели - это ряд из
последовательности команд на E, в результате выполнения которых цель будет
достигнута. Как нам уже известно, у нас остался единственный способ получения
знаний - путем логического вывода из имеющихся знаний.
Обычно этот путь прорисовывается в виде поиска нужной последовательности
комбинаций объектов из vM. Известным также как поиск в лабиринте решений.
В нем решаются 2 основные задачи: получение возможных путей и их оптимизация -
выбор лучшего из них. Как известно лабиринт решений - камень преткновения
создателей ИИ. В соответствии с законами комбинаторики его рост нелинейно
зависит от роста числа входных данных. В нашем случае ситуация гораздо хуже -
внешний мир бесконечен, внутренний мир также.
Из этого следует что и сам лабиринт будет также бесконечным. И эта
бесконечность сводит к нулю эффективность всех 3-х методов прохождения
лабиринта: повышения скорости, параллелизма и улучшение алгоритмов поиска.
В таких условиях мы вообще не сможем найти ни одного решения, не говоря уже
об их оптимизации. Итак, в рамках классической теории пройти бесконечный
лабиринт за конечное время и при конечной скорости невозможно. Но только при
случае если в самих объектах, составляющих лабиринт не содержится подсказка -
указатели нужного и притом оптимального пути. Что ж, такое вполне возможно,
но только в частных случаях построения внешнего мира. Нас же интересует
решение задачи в общем виде.
Напрашивается такое решение: в изначальной неактивной модели внутреннего
мира в неактивных объектах 2.2 самим поставить такие указатели (если мы
знаем общую картину построения M, то почему бы нам не знать и оптимальный
путь в общем же виде). Но изначально мы имеет только общую модель внешнего
мира, не детализированную еще на отдельные объекты. И расставить указатели
мы сможем лишь в общем виде. Образно говоря мы сможем только сказать
"иди на север" или "иди на юг", не раскрывая при этом конкретной дороги.
Но в случае бесконечного числа вариантов таких дорог может оказаться и так,
что число возможных путей от одного указателя до другого также бесконечно.
Таким образом нам придется усеять указателями весь путь, вплоть до
мельчайших деталей. Такое конечно недопустимо, не говоря уже и том, что в
этом случае придется самим же проводить детализацию пути, чтобы было куда
ставить указатели.

Но решить задачу все же возможно. И поможет нам в этом то, против чего
мы безуспешно боролись - бесконечность внешнего мира. Враг превратится в
союзника.

Так как vM бесконечен, то разделив его на конечное количество примерно равных
частей мы увидим что эти части также бесконечны. Разделим таким образом, что
каждая часть станет представлять собой логический домен, а все вместе они
образуют вложенную структуру. Это возможно, так как общая схема построения M
нам известна изначально. Каждый домен при этом будет состоять из бесконечного
количества физически элементарных объектов 1.1, уже неделимых далее. Либо его
опять можно представить как совокупность логических доменов более высокого
уровня (это также вытекает из вложенной структуры логических доменов внешнего
мира). Как известно логический домен - это совокупность связей типа
"причина - следствие", которые можно рассматривать как объекта класса 2.2.
Допустим у нас имеется некий логический домен, глобальные характеристики
которого описываются множеством объектов 2.2, среди которых имеются
A->X->B и C->Y->D. Так вот, если домен бесконечен и указанные процессы не
являются непосредственными свойствами слагающих его физически элементарных
объектов а являются свойствами их коллектива, то можно утверждать что домен
поддается разделению на два других домена (также бесконечных). Причем один из
них содержит процесс A->X->B и не содержит процесса C->Y->D, а другой
наоборот, содержит C->Y->D и не содержит A->X->B. И это условие выполнимо с
любой заданной степенью точности. Такое деление можно продолжать сколь угодно
долго. Справедливо и обратное: взяв два домена, содержащих различные процессы,
можно слить их в единый домен, обладающий процессами как первого, так и
второго домена. Причем гарантировать существование в новом домене процессов
A->X->B и C->Y->D как независимых объектов можно с вероятностью, сколь
угодно близкой к единице.

Эти свойства, вытекающие из центральной теоремы, и дают нам возможность
эффективно двигаться к цели. Очевидно что деление/слияние доменов возможно
только в случае бесконечной среды функционирования и только тогда, когда
разговор идет о глобальных характеристиках доменов. В конечных системах
объекты 2-го порядка неотделимы от объектов 1-го порядка и являются их
неотъемлемыми свойствами, подобно тому как масса в нашем мире однозначно
связана с энергией, а волновые свойства объектов неотделимы от корпускулярных.

Еще в самом начале нашего рассказа про объекты 3-го порядка мы говорили
о том, что объект 3.3 не может создавать объекты 1-го и 2-го порядка, а может
лишь менять свойства существующих. Не можем мы создать физически элементарные
объекты и в данной задаче. Но мы можем создавать логические домены. Из ничего,
из пустоты, создать логический домен конечно невозможно. Но его можно получить
путем деления произвольного логического домена на более мелкие домены и
объединяя их с другими доменами (уже существующими или являющимися продуктами
какого-либо деления). Известно, что цель в 3.1 и 3.2, состоящая из конечного
числа физически элементарных элементов может быть преобразована конечным
количеством способов и только определенным кругом объектов, который также
конечен. Это вынуждает искать эти объекты и последовательность шагов
преобразования. В разделах, посвященных описанию 3.1 и 3.2 для простоты
подразумевалось что путь управления от эффекторов до цели (цепочка объектов
2.2) существует. Но строго говоря это не всегда так. Вполне возможно что
такого пути и нет. Или же он есть, он не позволяет управлять объектом C->Y->D
в полной мере. Если же мир бесконечен, то на основании центральной теоремы
можно утверждать что построение бесконечного логического домена, глобальные
параметры которого уже существуют по отдельности в других доменах, возможно
всегда. Это утверждение вытекает и из общего принципа получения знаний из
внешнего мира: поскольку знания это объекты 2-го порядка - логические домены,
то стало быть наличие знаний во внешнем мире говорит о том что существуют и
несущие их домены.

Нужно лишь найти подходящие домены и преобразовать их. Как будет показано,
это преобразование принципиальным образом отличается от преобразования
внешнего мира в 3.1 и 3.2. В 3.3 мы имеем уже процесс создания, а не поиска.
Построение логического домена и изменение свойств существующего - не одно и
то же. При изменении свойств любого объекта структура объекта остается
неизменной. Поэтому изменяя состояние домена мы не должны менять его
структуру - распределение в нем объектов 1.1 и связей между ними, предполагая
что требуемое состояние домена может быть получено только путем изменения
состояний (значений координат в многомерных переменных объектов 1.1) слагающих
его объектов 1.1. Для этого приходится перебирать возможные состояния домена,
ища требуемый (за счет изменения состояния окружающих его доменов или иным
способом). Возникает лабиринт решений. В общем, изменение состояния домена
можно сравнить с поиском нужного решения в системе уравнений, без права
изменения этих уравнений. А создание домена - самим составлять систему
уравнений, которая будет иметь нужное решение, причем значения переменных,
соответствующих требуемому решению в общем-то уже известны.

Таким образом в рамках бесконечного внешнего и внутреннего миров нам не нужно
проходить лабиринт решений - отпадает сама необходимость его прохождения.
Вместо этого строятся логические домены с заранее заданными свойствами, т.е.
создаются объекты 2-го порядка с условно-постоянными в рамках данной задачи
свойствами. А на основе уже их комбинаций - следующие объекты класса 2.2 и
т.д.. С уходом лабиринта решений уходит и проблема потенциальных барьеров.
Они существуют лишь тогда, когда мы пользуемся готовыми путями и притом
вслепую - руководствуясь генератором случайности. Если же дорога к цели
строится нами самостоятельно, то на ней нет и барьеров, т.к. отсутствует
понятие выбора из множества путей: дорога-то одна! К этому стоит добавить что
многовариантный синтез логических доменов на разных принципах не приводит к
возникновению потенциальных барьеров, поскольку любой из вариантов уже
гарантированно приводит к цели.

Почему обладая конечным набором E и R объект 3.2 не может эффективно достигать
цели, а обладающий тем же конечным набором E, R, vE, vR в бесконечном M и vM
объект 3.3 может? Потому что 3.2 пытается преобразовать логический домен в
котором обнаружил зависимость "причина-следствие" целиком и тем самым
обременяет себя необходимостью преобразовывать бесконечную массу совершенно
ненужных процессов этого же домена. А 3.3 лишь выделяет необходимый процесс
путем распада и синтезирует из разных процессов разных доменов нужный ему
домен (знания о том как произвести распад и синтез также черпаются из M).

У цели 3.3 имеется важная характеристика: ее устойчивость. Т.к. цель
представляет собой конгломерат объектов 2-го порядка образующих систему
уравнений, то процесс перехода решений может как стремиться к некоторому
множеству похожих состояний, так и нет. В первом случае наблюдается нечто
аналогичное ДРВ. Разумеется удобнее работать с устойчивой целью, ведь тогда
во время создания целевого домена в полигоне (а затем и во внешнем мире) сама
цель сильно не поменяется. Однако не всегда можно сделать цель и устойчивой и
одновременно полезной создателям объекта 3.3. И в таком случае необходимо
ускорять процессы создания целевого домена и его воплощения в реальность пока
цель еще не успела существенно измениться. Повысить устойчивость цели можно
если изготовить ее из элементов ЭПЗ, которые уже способны образовывать
устойчивые соединения.

Процесс построения логических доменов мы наблюдаем на примере нашей
цивилизации - она не создает ничего нового на атомарном уровне (или если
угодно на кварковом - примеры ускорителей элементарных частиц и искусственно
осуществленных атомных превращений непринципиальны). Все машины и механизмы
были созданы путем преобразования из существующих массивов вещества и энергии.



            <a name="746">7.4.6. Процесс построения бесконечного логического домена
                   с заранее заданными свойствами</a>

Рассмотрим процесс построения бесконечного логического домена на качественном
уровне. В качестве примера возьмем построение на основе модели
"руда - металлы - сплав" (см. <a href="#742">"7.4.2. Бесконечные логические домены.
Центральная теорема и ее следствия"</a>).

Пусть в качестве цели мы имеем набор требуемых глобальных характеристик
A, B, C, являющихся объектами 2-го порядка, а точнее 2.2. Причем они не
противоречат свойствам слагающих их физически элементарных объектов.
Во внешнем мире должны существовать логические домены X, Y, Z,
удовлетворяющие следующему условию: среди глобальных характеристик домена
X (x1, x2, ...., xn) есть некоторая характеристика xi, похожая на A.
Аналогично среди свойств домена Y (y1, y2, ...., yn) некоторая характеристика
yj похожа на B. Аналогично и с Z - характеристика zk.
Взяв домен X начнем делить его до тех пор, пока одно из слагаемых не станет
равным xi. Аналогично поступим с Y и Z.
В результате мы получим домены со свойствами xi, yj, zk, похожие на A, B и C
в "химически чистом" виде. Соединив домены xi, yj, zk мы и получим домен,
обладающий требуемыми характеристиками.

Хорошей аналогией построения требуемого домена на основе свойств существующих
служит аналогия с получением сплава металлов, обладающего заданным свойством
(что и дало название модели "руда - металлы - сплав").
Допустим мы хотим получить сплав, обладающей твердостью, легкостью и хорошей
электропроводностью. Очевидно что готового сплава, обладающего такими
свойствами в природе нет. Мы начинаем искать материалы - руду, в которых
имеется хотя бы одно из указанных свойств. Из полученного списка материалов
мы начинаем выделять металлы, входящие в их состав и придающие им эти
свойства. Получив их, мы сплавляем металлы в единое целое, получая требуемый
сплав.

Из качественной схемы построения видно, что требуемый логический домен не
существует изначально. Следовательно, целью объекта 3.3 не может быть
требование переделывания уже существующего домена. Она задает конечный
его вид и не накладывает каких-либо дополнительных требований. Любые попытки
придания цели ориентира на преобразование заранее заданного домена обречены
на неудачу, так как любое преобразование автоматически означает поиск
возможных путей такого преобразования, а это влечет за собой необходимость
прохождения бесконечного лабиринта решений и борьбы с потенциальными
барьерами. Естественно что такая цель недостижима. Такое принципиальное
отличие цели 3.3 от целей 3.1 и 3.2 заставляет смотреть на проблему
прогнозирования поведения 3.3 совершенно с другой точки зрения. Изначально
любой искусственный объект, в т.ч. и объект 3-го порядка создается для того,
чтобы изменить существующее положение вещей в определенной области мира.
Смысл цели 3.1 и 3.2 заключается в придании объекту 2-го порядка C->Y->D
определенных состояний. Придя, по замыслу создателей, в эти состояния объект
C->Y->D тем самым за счет универсального интерфейса изменит и состояния
окружающих его объектов.
Манипулируя, таким образом, состоянием одного-единственного объекта 2-го
порядка можно вызывать целые серии следующих за этим событий и управлять ими.
Таким образом, истинной целью создателей 3.1 и 3.2 служит, в общем случае, не
столько изменение состояния самого C->Y->D, сколько следующие за этим
изменения в мире.

В случае с 3.3 все по-другому. Где возникнет нужный домен заранее неизвестно.
Поэтому прогнозировать заранее изменения, которые он вызовет во внешнем мире,
нельзя. Отсюда вытекает, что ставить целью создание одного домена можно
только в случае, когда истинной целью создателей является сам факт
возникновения такого домена - они просто указывают объекту 3.3 что создаваемый
бесконечный логический домен имеет уровень N (если не указывать уровня то и
делать как бы ничего не нужно, поскольку только уровень отличает
заключительный вид бесконечного целевого домена от его описания-цели внутри
3.3, также бесконечной, - ведь алгоритмы описывающие их глобальные параметры
равны). Тоже самое получается и при 2-х и при 3-х и т.д. числе доменов. Если
же они претендуют на то, чтобы при помощи 3.3 направленным образом влиять на
внешний мир, то кроме этого домена им придется описать в цели весь мир в том
виде, в каком они хотят его видеть. Очевидно что в этом случае в только что
созданном объекте 3.3 по своей массе цель становится равной внутреннему миру.
То есть как минимум потенциально бесконечной.

Конечно в реальных системах бесконечность внутреннего мира и цели может быть
только потенциально бесконечной - создать их изначально бесконечно большими
вряд ли когда-либо удастся. Отсюда можно заключить что цель описывает
требуемый мир приближенно - на уровне глобальных характеристик бесконечных
логических доменов. Поэтому от 3.3 можно ждать только прогнозируемые
глобальные изменения в мире. Локальные его решения могут быть какими угодно.
Глобальностью цели 3.3 объясняется, в частности, поведение человека - он
никогда не стремится к достижению чего-либо конкретного (в широком понимании).
Он ищет "смысл жизни", "счастье" и т.п., маскируя под этими терминами свою
деятельность по изменению окружающего его мира. И находит душевный покой
тогда, когда в окружающей его обстановке "все на своих местах" (правда и в
этом случае внутренне он неспокоен - за счет наличия внутреннего мира он
"видит" внешний мир не только через рецепторную матрицу, и подозревает что
там, "за горизонтом", не все "хорошо"). Качественная схема построения также
наглядно демонстрирует и неспособность объекта 3.3 генерировать принципиально
новых знаний - объектов класса 2.2, аналоги которых отсутствуют во внешнем и
внутреннем мирах.

В дополнению к качественной схеме построения пути к цели обрисуем в общих
чертах эту схему применительно к конструктивным особенностям объекта 3.3.
Пусть цель задается логическим доменом (объектом 2-го порядка) такого вида:

                         ┌─┐                     ┌─┐
                         │1│                     │2│
                         ├─┤                     ├─┤
                         │3│         ╔═╗         │4│
                         ├─┼────────>╢X╟────────>┼─┤
                         │5│         ╚═╝         │6│
                         ├─┤                     ├─┤
                         │7│                     │8│
                         └─┘                     └─┘

Или в виде свойств:

       ┌
       │1->X->2
       │3->X->4
   (1) ┤5->X->6
       │7->X->8
       └

1) Первым шагом 3.3 должно стать нахождение в vM логических доменов
   содержащих хотя бы одно похожее свойство из (1). Общая идея поиска такова.
   Цель объекта 3.3 задается общим уравнением объекта 2-го порядка: cE->Ц->cR.
   Внутреннего мира: vE->vM-vR. В итоге 3.3 стремиться к тому, чтобы cE->Ц->cR
   стало эквивалентно подмножеству vE->vM->vR (цель, охватывающая весь мир).
   Следовательно проводя совместный анализ состояний cE и vE, cR и vR (скажем
   воспользовавшись соответствующими методами математической статистики:
   корреляционным анализом например) можно выявить поведение каких конкретно
   составных частей cE похоже на поведение частей vE, а cR на vR. И уже по
   этой информации вычислить местоположение логического домена внутреннего
   мира, содержащего данный процесс.
   Одним из вариантов решения проблемы поиска указанным способом может быть
   следующий:
   - Каждая глобальная характеристика каждого логического домена цели
     представляется в виде объекта 2-го порядка cA->cX->cB.
     От каждого cA и cB идет связь к ядру объекта 3.3 - модулю М3. Там они
     образуют таблицу состояний цели (объект 1-го порядка).
   - Аналогичным образом создаются связи от составных частей vE и vR.
     Получаем таблицу состояний внутреннего мира.
   - Возможно используется память подсистемы 3.2 - таблица состояний внешнего
     мира. Напомним что память 3.2 неэквивалентна таблице состояний
     внутреннего мира, поскольку мощность множества рецепторно-эффекторных
     матриц внутреннего мира превышает в общем случае мощность множества
     рецепторов и эффекторов внешнего мира.
   - Анализируя содержимое таблиц выявляются похожие процессы и их
     родительские домены.

   Возможно создание цели из объектов ЭПЗ. Тогда алгоритм поиска упрощается и
   вполне может быть сведен к построению обратной связи регистрирующей лишь
   сходство состояний однотипных ЭПЗ-объектов цели и внутреннего мира. Но для
   осуществления указанной процедуры потребуется чтобы однотипные объекты
   приходили в одинаковое состояние одновременно (согласованность номеров
   состояний соответствующих таблиц состояний). Для чего ЭПЗ, цель, внутренний
   мир и полигоны должны состоять из своего рода когерентных объектов.
   Наподобие фотонов отличающихся друг от друга только по положению в
   пространстве и частоте (цвету), но совершенно одинаковых по фазе колебаний.

   Для повышения эффективности в качестве пространства поиска помимо
   внутреннего мира можно использовать полигоны. Разумеется теоретически это
   не дает принципиальных преимуществ, поскольку любой полигон изначально
   создавался на основе внутреннего мира и все вновь построенные в нем
   логические домены - не более чем комбинация свойств логических доменов уже
   существующих во внешнем мире. Но применение полигонов позволяет
   пользоваться уже готовыми промежуточными решениями - синтезированными для
   решения различных частных задач логическими доменами. Особенно сильно
   данное преимущество проявляется в случае сложной цели 3.3, когда бывает
   необходимым разбивать основную задачу на ряд подзадач. Эффективность метода
   возрастает в параллельных многополигонных системах.
   Развитие идеи полигонного поиска приводит к расширению пространства поиска
   внешними и информационными плагинами (см. <a href="#92">"9.2. Информационные плагины"</a>).
   Научная и практическая деятельность человека наглядно демонстрирует
   выгоды расширенного пространства поиска. Почти все научные и технические
   разработки имеют в своей основе уже придуманные ранее решения. Доля
   по-настоящему пионерских разработок очень невелика.

   Процесс поиска тесно связан с проблемой произвольного доступа к любому
   объекту внутреннего мира (см. <a href="#744">"7.4.4. Устройство основных узлов объекта</a>
   <a href="#744">класса 3.3. Энциклопедия первичных знаний"</a>). И он также решается при помощи
   внутренних рецепторно-эффекторных матриц vR, vE и их плагинов vPR, vPE.
   Если не удается разыскать нужный процесс необходимо проводить умощнение
   vE и vR, а также детализацию внутреннего мира.

2) Второй шаг - процедура деления или распада найденных доменов на отдельные
   процессы. Допустим что нашли 3 домена:

                        ┌──┐                     ┌──┐
                        │ 1│                     │ 2│
                        ├──┤                     ├──┤
                        │a1│                     │a2│
                        ├──┤         ╔═╗         ├──┤
                        │a3├────────>╢A╟────────>┤a4│
                        ├──┤         ╚═╝         ├──┤
                        │a5│                     │a6│
                        ├──┤                     ├──┤
                         .                        .
                         .                        .
                         .                        .
                        └──┘                     └──┘

                        ┌──┐                     ┌──┐
                        │b1│                     │b2│
                        ├──┤                     ├──┤
                        │ 3│                     │b4│
                        ├──┤         ╔═╗         ├──┤
                        │b3├────────>╢B╟────────>┤ 4│
                        ├──┤         ╚═╝         ├──┤
                        │b5│                     │b6│
                        ├──┤                     ├──┤
                         .                        .
                         .                        .
                         .                        .
                        └──┘                     └──┘

                        ┌──┐                     ┌──┐
                        │c1│                     │ 6│
                        ├──┤                     ├──┤
                        │c3│                     │c2│
                        ├──┤         ╔═╗         ├──┤
                        │ 5├────────>╢C╟────────>┤c4│
                        ├──┤         ╚═╝         ├──┤
                        │ 7│                     │ 8│
                        ├──┤                     ├──┤
                         .                        .
                         .                        .
                         .                        .
                        └──┘                     └──┘

   Казалось бы можно просто соединить, синтезировать, такой домен:

                        ┌──┐                     ┌──┐
                        │ 1│                     │ 2│
                        ├──┤                     ├──┤
                        │a1│                     │a2│
                        ├──┤                     ├──┤
                        │a3│                     │a4│
                        ├──┤                     ├──┤
                        │a5│                     │a6│
                        ├──┤                     ├──┤
                         .                        .
                         .                        .
                         .                        .
                        ├──┤                     ├──┤
                        │b1│                     │b2│
                        ├──┤                     ├──┤
                        │ 3│                     │b4│
                        ├──┤         ╔═╗         ├──┤
                        │b3├────────>╢Y╟────────>┤ 4│
                        ├──┤         ╚═╝         ├──┤
                        │b5│                     │b6│
                        ├──┤                     ├──┤
                         .                        .
                         .                        .
                         .                        .
                        ├──┤                     ├──┤
                        │c1│                     │ 6│
                        ├──┤                     ├──┤
                        │c3│                     │c2│
                        ├──┤                     ├──┤
                        │ 5│                     │c4│
                        ├──┤                     ├──┤
                        │ 7│                     │ 8│
                        ├──┤                     ├──┤
                         .                        .
                         .                        .
                         .                        .
                        └──┘                     └──┘

   минуя при этом фазу распада. Но при таком способе синтеза нужные процессы
   попросту "растворятся" в огромном количестве посторонних процессов.
   В пределе при таком подходе вообще ничего не надо делать - в "растворенном"
   виде требуемые процессы уже существуют в M. Так что распад все же
   необходим. Задача распада такая: создать цепочку доменов
   vE->vDR1->vDR2->...->vA, vB, vC. Где vDRi - домены распада, vA, vB, vC -
   аналоги A, B, C в vM. Плюс к этому требуется запомнить последовательности
   создания vDRi и команд на vE, чтобы потом можно было повторить тоже в M.
   После прохождения фазы расщепления должны появиться 1->A->2, 3->B->4,
   5->C->6, 7->C->8 в чистом виде.

   Определим сперва что вообще может вызвать распад, например, домена A.
   Для этого находим (аналогично п.1) в vM процессы, которые вызывают
   расщепление доменов, содержащих процессы похожие на a1->A->a2, a3->A->A4
   и т.д.. Очевидно что применив похожие процессы к домену A мы вызовем его
   деление на a1->A->a2, a3->A->a4, .... . При этом, освободившись от
   остальных процессов, 1->A->2 также появится в чистом виде. Точно так же
   идет расщепление B и C.

   Что значит "применить похожий процесс" - значит построить около A, B, C
   домен распада, примерно такой же как и у доменов, похожих на A, B, C, но
   отличающийся одним свойством - близостью к  A, B и C. Построение такого
   домена происходит аналогично всему этому алгоритму.
   Теперь домен распада нужно запустить - построить цепочку
   доменов-посредников от vE к vDR. Это делается так: ищутся домены,
   влияющие на состояние доменов-аналогов vDR и строятся похожие вблизи
   vDR - домены vDR1. Параллельно ищутся домены, похожие на vDR1 и к которым
   есть доступ от vE непосредственно или уже через готовые домены-посредники
   vDRi. Они также строятся, но уже со стороны vE: vE->vER1, vER2, ..... .
   Когда vERi совпадет с vDRj цепочка управления готова. Команды, которые
   подаются на E для управления DR записываются походу построения, они
   аналогичны командам для управления доменами, которые мы брали за шаблон
   при построении новых.

3) Синтез. На этом этапе требуется синтезировать из находящихся в чистом
   виде процессов 1->A->2, 3->B->4, 5->C->6, 7->C->8 домен X. Кажется,
   можно поступить так же, как и при распаде - искать и строить по аналогии.
   В принципе это возможно, но только в частных случаях - когда объект 3.3
   ранее уже синтезировал что-то похожее, в результате чего запомнил процесс
   синтеза. Но как быть если все делается в первый раз? Где в таком случае
   найти аналогию синтеза? Очевидно что для этого в vM нужно искать отдельные
   1->A->2, 3->B->4, 5->C->6, 7->C->8 или очень на них похожие. Такими же
   схожими должны быть и процессы, составляющие сам процесс синтеза. Но если
   все требуемое действительно существует, а тем более в естественном виде
   (т.е. не было когда-то создано 3.3), то это говорит также и о
   существовании аналога X, что делает вообще бесполезным существование
   объекта 3.3 - какой смысл строить то, что уже есть? Так что
   воспользоваться естественными аналогиями синтеза возможно, пожалуй, лишь
   на стадиях постройки доменов-посредников между vE, vR и X с vM. Для
   реализации процесса синтеза в общем случае они малопригодны. Воспользуемся
   таким способом: разобьем фазу распада домена A на несколько равных
   последовательных стадий. То же самое сделаем и для синтеза (пока
   предполагаемого) того же домена A, причем число стадий синтеза то же что и
   распада. Чем отличаются при этом условия, при которых происходит
   расщепление на 1-й стадии от синтеза на последней, расщепления на 2-й и
   синтеза на предпоследней и т.д.? Очень немногим. Чем больше стадий - тем
   меньше разницы. Это дает основания полагать, что создав на начальной
   стадии синтеза 1-A->2, 3->B->4, 5->C->6, 7->C->8 совокупность условий,
   присутствующих на последней стадии их высвобождения в чистом виде, и
   незначительно поварьировав некоторыми параметрами окружающих их доменов
   (привлекая ГС - генератор случайности), придем ко 2-й стадии синтеза и
   т.д.. Т.е. в данном случае работает принцип "клин клином вышибают".
   Поиск и постройка доменов, обеспечивающих появление необходимых внешних
   условий синтеза на каждой его стадии, происходит аналогично всему этому
   алгоритму.

4) После того как все готово, делается пробный запуск X и его тестирование.
   Если выяснится что он не в полной мере обладает нужными свойствами, то
   пройденная последовательность шагов запоминается как неудачная, происходит
   откат на первоначальное состояние "состояние 1" (или на состояние, после
   которого и начались "неудачи", определить которое кстати весьма непросто)
   и далее весь этот алгоритм начинается с начала (но уже, конечно, по
   другому пути).

5) Итак, все шаги в vM пройдены. Осталось самое главное - проделать тоже
   самое, но уже в реальном мире - M. Что и делается. После чего
   формирователи vM изменяют его в соответствии с изменениями в M -
   возникновения X. Далее объект 3.3 будет играть роль системы слежения -
   удерживать X в нужном состоянии.

Вот таков процесс достижения цели в рамках 3.3. Очевидно что принципиальных
отличий достижения цели в модели "построение по аналогии" и в рассмотренной
"руда - металлы - сплав" нет. Поэтому особо останавливаться мы на ней не
будем, добавив вместо этого несколько соображений.

1) Если в результате многократного возврата с шага 4 выяснится что на шагах
   1, 2, 3 не хватает информации а увеличение vE и vR уже произведено, то
   необходимо провести детализацию vM. Ищется область наибольшей вероятности
   появления домена с нужными свойствами. Как правило это область с наибольшей
   концентрацией доменов по свойствам, приближающимся к заданному. После
   этого строятся домены доступа в данную область, идущие от vE и vR.
   Происходит постройка того же самого в M. Затем при помощи случайных
   изменений со стороны 3.1 или 3.2 на E, состояния доменов в этой области
   будет меняться. Это отразится на R и в конечном итоге на формирователях vM.
   Произойдет более детальная прорисовка vM в этой области. Вполне возможно
   что после операции детализации область наибольшей вероятности сместится в
   другую часть vM.

2) Потенциальная бесконечность внутреннего мира объекта класса 3.3.1 может
   быть таковой лишь отчасти. В силу масштабируемости универсального
   интерфейса вложенной структуры логических доменов представляется реальным
   построить внутренний мир (и соответственно его первоначальную детализацию)
   на базе глобальных параметров бесконечных логических доменов. В этом
   случае дальнейшее развитие внутреннего мира может идти как по пути
   "присоединения" логических доменов внешнего мира, так и по пути
   детализации изначальных (бесконечных) доменов. Аналогичным образом
   решается и задача модификации рецепторно-эффекторных матриц, изначальные
   элементы которых (объекты m - см. пункт <a href="#733">"7.3.3. Эволюционный процесс и</a>
   <a href="#733">механизм полуактивной защиты, память стекового типа и косвенная цель.</a>
   <a href="#733">Объект класса 3.2.2"</a>) также могут представлять собой бесконечные логические
   домены.

3) Домены-посредники между E, R и M мы будем называть ВНЕШНИМИ ПЛАГИНАМИ.
   Плагины, эти направленно созданные домены, остаются во внешнем мире и
   после достижения цели, имеют аналоги в vM и могут быть использованы в
   дальнейшей работе. Кроме того, на основе плагинов полученных на одном
   шаге, можно строить плагины для другого шага и т.д.. Все машины
   человечества - его плагины. Обозначим плагины эффекторы и рецепторы
   внешнего мира соответственно как PE и PR, а внутреннего - как vPE и vPR.

4) Схематичный рисунок структуры 3.3:

     ┌─────────────┐         ┌--------------------┐
     │Цель - объект│         |    Внешний мир M   |
     │ класса 2.2  ├───┐     | ┌─┐     ╔═╗    ┌─┐ |
     └─────────────┘   │     | │C├────>╢Y╟───>┤D│ |
     ┌─────────────┐   │     | └─┘     ╚═╝    └─┘ |
     │ЭПЗ - объекты├──┐│     | ┌──┐          ┌──┐ |
     │ класса 2.1  │  ││     | │PE├<┐      ┌<┤PR│ |
     └─────────────┘  ││     | └──┘ |      | └──┘ |
     ┌─────────────┐  ││     | ┌─┐  |      |  ┌─┐ |
     │  Источник   │  ││     | │ ├--┘      └--┤ │ |
     │материала для├─┐││     | │E│            │R│ |
     │  внутренних │ │││     | │ ├<─┐      ┌─<┤ │ |
     │    миров    │ │││     | └─┘  │      │  └─┘ |
     └─────────────┘ │││     └------┼------┼------┘
                     │││            │      │
                     │││           ╔╧══════╧╗       ┌------┐       ┌------┐
                     ││└──────────>╢ Модуль ╟─<─────|Объект|─<─────|Объект|
                     │└───────────>╢   M3   ║       |класса|       |класса|
                     └────────────>╢        ║─>─────|  3.2 |─>─────|  3.1 |
                                   ╚════╤═══╝       └------┘       └------┘
                                        ^
                                        │
                                        v
 ┌--------------------------------------┼---------------------------------┐
 | Области внутренних миров             │                                 |
 |                    ┌─────────────────┴───────────┬──────────────┬...   |
 | ┌------------------┼-------┐  ┌------------------┼-------┐     ...     |
 | |           ┌──────┴─────┬┐|  |           ┌──────┴─────┬┐|             |
 | |           v            v^|  |           v            v^|             |
 | |╔══════════╧══════════╗ ││|  |╔══════════╧══════════╗ ││|             |
 | |║    Формирователь    ║ ││|  |║    Формирователь    ║ ││|             |
 | |║внутреннего мира FvM1║ ││|  |║внутреннего мира FvM2║ ││|             |
 | |║(объект 3-го порядка)║ ││|  |║(объект 3-го порядка)║ ││|             |
 | |╚══════════╤══════════╝ ││|  |╚══════════╤══════════╝ ││|             |
 | |           v            ││|  |           v            ││|             |
 | |┌──────────┴───────────┐││|  |┌──────────┴───────────┐││|             |
 | |│Внутренний мир 1 - vM1│││|  |│Внутренний мир 2 - vM2│││|             |
 | |│    (он же полигон)   │││|  |│    (он же полигон)   │││|             |
 | |│         ┌───┐    ┌──┐│││|  |│         ┌───┐    ┌──┐│││|             |
 | |│         │vPE├<---┤vE├┼┘│|  |│         │vPE├<---┤vE├┼┘│|             |
 | |│         └───┘    └──┘│ │|  |│         └───┘    └──┘│ │|             |
 | |│         ┌───┐    ┌──┐│ │|  |│         ┌───┐    ┌──┐│ │|             |
 | |│         │vPR├>---┤vR├┼─┘|  |│         │vPR├>---┤vR├┼─┘|             |
 | |│         └───┘    └──┘│  |  |│         └───┘    └──┘│  |             |
 | |└──────────────────────┘  |  |└──────────────────────┘  |             |
 | └--------------------------┘  └--------------------------┘             |
 └------------------------------------------------------------------------┘

Как видно из рисунка, область внутреннего мира делится на несколько частей -
автономных параллельно работающих внутренних миров (используется схема вида
"M->полигон" - см. пункт <a href="#744">"7.4.4. Устройство основных узлов объекта класса 3.3.
Энциклопедия первичных знаний"</a>). Каждый из них включает свой собственный
формирователь и набор внутренних рецепторов, эффекторов и плагинов внутренних
рецепторов и эффекторов. Кроме цели и ЭПЗ имеется также источник материала для
строительства областей внутренних миров. На схеме мы видим что пути влияния
к внешним плагинам E->PE, PR->R, vE->vPE, vPR->vR показаны пунктиром.
Тем самым показывается что PE, PR, vPE, vPR не имеют прямого отображения в
памяти 3.2 и работа с ними (как с отдельными объектами) происходит
исключительно в рамках внутреннего мира. Большой простор для фантазии
открывается при улучшении полигона - к примеру при переходе от "состояние 1"
к "состояние 2" можно запоминать не все состояние vMi, а лишь изменения в
соответствующих объектах.
Проработать различные варианты поиска и манипуляции (распад/синтез)
логическими доменами. Например приспособив к этой цели объекты 3-го порядка
(в вышеприведенном тексте и то и другое решается простейшим способом -
посредством модуля M3), для чего следует проработать вопросы совместимости
целей объектов 3-го порядка и теорию их одновременного использования в общем
пространстве.
Заманчиво использовать их и в структуре полуактивной защиты, создание связок
"клон цели - один из полигонов" работающих независимо друг от друга в разных
скоростях протекания субъективного времени.
Так что конструкция объекта 3.3 содержит большой потенциал для своего
развития. Интересна также организация защиты объекта 3.3 от негативного
влияния внешнего мира. Как уже упоминалось, внутренний мир представляет собой
совокупность объектов класса 2.2, интерпретаторы которых функционируют
независимо друг от друга. Поэтому внесенные нами изменения в состояния одних
объектов автоматически вызывают изменения состояния других, как и во внешнем
мире. Даже если мы вообще ничего не изменяем во внутреннем мире, все равно
идет постоянное движение объектов внутреннего мира само по себе. Искусственно
повысив скорость процессов внутреннего мира относительно скорости тех же
процессов во внешнем мире мы сможем предвидеть развитие событий. Совместно с
механизмом отката это делает реальным построение активной защиты. "Проиграв"
развитие событий, объект 3.3 строит во внутреннем мире домены позволяющие
изменить их ход в лучшую для него сторону. Используя же механизм отката можно
провести оптимизацию этих мер - выбрать из нескольких возможных путей
наиболее перспективный. Так что активная защита строится на тех же самых
принципах, что и общее движение 3.3 в сторону достижения цели.
Образно говоря внешний мир с точки зрения объекта 3.3 - это "черный ящик".
Подсистема класса 3.2 накапливает информацию об "черном ящике", образуя набор
(Ri, Ei, dUi). Затем подсистема 3.3 производит "расшифровку" этого набора в
"терминах" ЭПЗ и путем создания логических доменов "проигрывает в голове"
путь к цели.

5) Обобщенный алгоритм создания 3.3 и его работы:

   1. Подготовка. Единственный пункт требующий участия человека.
      1.1. Создание заготовки 3.3: подсистемы 3.1, 3.2, модуля М3 и др.
      1.2. Создание цели. Проведение связей от ее логических доменов к М3.
      1.3. Создание ЭПЗ. Если решено и цель делать в терминах ЭПЗ (так удобнее
           для осуществления поиска например), то этот пункт выполняется
           прежде предыдущего.
      1.4. Создание физического тела 3.3: матриц E и R.
      1.5. Заполнение областей vM объектами из ЭПЗ, выделение vE эквивалентных
           E, vR эквивалентных R.
      1.6. Позиционирование 3.3 в заданном районе Солнечной системы.
   2. Старт
      2.1. Формирование внутреннего мира.
      2.2. Копирование в полигон.
   3. Теоретическое достижение цели
      3.1. Ускорение субъективного протекания времени в цели и полигоне
           (необходимо для синхронизации процессов). Иногда то же, но с
           замедлением времени.
      3.2. Умощнение множества внутренних рецепторно-эффекторных матриц.
           В результате этого шага станут "видны" процессы, невидимые во
           внешнем мире с позиций E и R.
      3.3. Поиск сырьевых доменов. При необходимости умощнение vE и vR,
           детализация vM, использование поиска в полигонах.
      3.4. Распад. При необходимости умощнение vE и vR, детализация vM.
      3.5. Синтез. При необходимости умощнение vE и vR, детализация vM.
      3.6. Сверка с целью. В случае неудовлетворительного результата
           циклическое повторение шагов 3.3, 3.4, 3.5.
      3.7. При наличии многополигонной системы отбор лучшего варианта.
   4. Реальное достижение цели
      4.1. Анализ отклонений состояния внешнего мира от того, что было при
           копировании в полигон. В случае существенных отклонений пройти
           заново этап теоретического достижения цели. В некоторых
           конструкциях 3.3 возможны элементы постоянной корректировки
           состояния vM и полигонов на предмет поддержания их актуальности
           реальному миру.
      4.2. Выполнение части цели до момента когда расхождения между ее
           теоретическим достижением и практикой не станут неприемлемо велики.
      4.3. Циклическая корректировка теоретического пути достижения цели на
           основе анализа препятствующих причин из предыдущего пункта.
   5. Закрепление достигнутого
      5.1. Удержание состояния доступной контролю 3.3 части внешнего мира в
           соответствии с целью.
      5.2. Экспансия 3.3 и его внешних плагинов во Вселенной. Преобразование
           вновь расширенного поля деятельности в соответствии с целью. Этот
           пункт может выполняться параллельно с предыдущим.
      5.3. При достижении некоторого уровня развития (если он задан)
           стабилизация либо самоликвидация.



       <a name="747">7.4.7. Обзор объектов 3-го порядка. Некоторые прикладные аспекты</a>

Проводя общее сравнение 3.3 с 3.1 и 3.2 выяснится что применение 3.3 далеко
не всегда выгоднее 3.2. 3.3 подобен тяжелой артиллерии бьющей далеко и
обладающей большой мощностью, но почти беспомощной перед близкими небольшими
целями. Механизм внутреннего мира позволяет "проигрывать в голове"
общую стратегию достижения цели, когда в запасе имеется много времени и когда
мелкие конкретные детали пути к цели не так важны как его общая картина.
В "ближнем бою", где нужно быстрое и конкретное решение он малопригоден.
В этой ситуации спасти положение может только применение более проворного
3.2. Очень важна роль 3.2 при организации полуактивной защиты 3.3 и частично
его эволюционного процесса. Это происходит оттого, что цель 3.3 не может быть
направлена на преобразование (либо поддержку в нужном состоянии) заранее
заданного логического домена. Поэтому мы не можем включить в цель 3.3
требование защиты и эволюционного развития самого 3.3 (рассматривая его как
логический домен).

Тоже самое можно сказать и в адрес сравнения 3.2 с 3.1. Отсюда следует что
при постройке 3.3 не следует недооценивать роли 3.2 и 3.1 и тоже создавать их
достаточно развитыми, а не просто как формальное звено пирамиды 3.1->3.2->3.3.
Еще один момент - цели 3.1, 3.2 и 3.3. Естественно что если они не совпадают,
то не должны противоречить друг другу. Это т.н. проблема СОВМЕСТИМОСТИ целей,
изучающая системы состоящие из нескольких объектов 3-го порядка (возможно
вложенных друг в друга, подобно пирамиде 3.1->3.2->3.3), их взаимовлияния
друг на друга и общее результирующее воздействие системы на внешний мир.
Поскольку проблема совместимости целей является в основном проблемой
практической реализации объектов 3-го порядка, в данной работе она
рассматриваться не будет.

В связи с тем что окружающий нас мир бесконечен, возникает вопрос: а где же
тогда находятся конечные среды существования 3.1 и 3.2. Ответ прост - в очень
слабо связанных с остальным миром логических доменах. Если этот домен
бесконечен, то в силу масштабируемости универсального интерфейса (см. пункт
7.2.4) объекты 3.1 и 3.2 работают с его глобальными параметрами. Обособленных
логических доменов в нашем мире множество - например состояние звезды в
космосе можно считать практически независимым от состояния других космических
объектов (планет, других звезд и т.п.).

Итак, общий принцип работы 3.3 ясен. В таком виде 3.3 уже можно сравнивать
с человеком. Тут выясняется что они имеют много общего:

1) И 3.3 и человек не имеют конкретной цели. И объект класса 3.3 и человек
   имеют плагины. Как и 3.3 человек производит направленный распад и синтез
   доменов внешнего мира. Когда человек занимается каким-либо ремеслом
   (выполняет квалифицированную физическую работу), то он работает в режиме
   модели "руда-металлы-сплав". Если он занимается умственной деятельностью,
   например конструированием новой машины из уже известных узлов и деталей,
   то применяет модель "построения по аналогии".
   Разберем последний случай подробнее. С первого взгляда кажется что когда
   человек строит машину, зная только принцип ее работы, то он вроде бы и не
   использует из внешнего мира никаких похожих доменов. Например строят
   самолет. Ясно что во внешнем мире нет ни готовых крыльев, ни мотора, ни
   фюзеляжа. Деталей из которых они состоят тоже нет.
   Но это лишь так кажется. Возьмем например крыло. Его можно представить как
   логический домен, имеющий такие глобальные параметры: пространственную
   конфигурацию или попросту форму, плотность и твердость материала (для
   упрощения рассмотрим крылья первых самолетов, где не было еще никакой
   механизации крыла, встроенных топливных баков и пр.). А вот эти параметры
   уже имеются в доменах внешнего мира. Материал с заданной плотностью и
   твердостью можно получить, сплавляя различные металлы. Но как придать
   сплаву нужную форму? По тому же самому принципу что и получение самого
   сплава - искать во внешнем мире процессы, в результате прохождения которых
   у металлических сплавов или других масс вещества с похожими характеристиками
   меняется форма. В древности таким "процессом" была кузница, а до нее
   принцип изменения формы металла был подсмотрен у природы - когда например
   в результате случайных сильных ударов у кусков металла менялась форма.
   Таким образом, разложив в голове (внутреннем мире) все устройство самолета
   на простейшие домены, мы сможем изготовить их по отдельности, а затем все
   собрать в единое целое.
   Решение типовых задач по математике, розничная торговля, любая другая
   нетворческая работа - одним словом повседневное поведение человека - все
   это не имеет никаких принципиальных отличий от рассмотренного примера с
   самолетом. Нужно только уяснить себе что объектом 2-го порядка является
   любое явление, сопровождаемое изменением состояния чего-либо согласно
   определенному алгоритму. Даже наши мысли - изменение состояния нейронов
   мозга. Что угодно.

2) Так же как и 3.3, являющийся вершиной пирамиды 3.1->3.2->3.3, человек
   строится подобным образом. Клетки тела - объекты 3.1, спинной
   мозг и частично головной - объект 3.2, управляющий повторяющимися
   операциями: дыханием, движением, условными и безусловными рефлексами.
   И наконец головной мозг - объект 3.3.

3) Человек манипулирует в своей голове образами внешнего мира, ассоциациями
   построенными на их основе. Обладает отвлеченным мышлением. А также видит
   сны в то время как его внешние рецепторы и эффекторы в основном неактивны,
   что говорит о существовании у него внутреннего мира. Так как усваивание
   новых знаний идет медленно, а затем человеку становится "все понятно",
   то можно сделать вывод о том, что во время усвоения идет постройка объекта
   2.2 в полигоне. Затем, когда объект 2.2 уже создан, наступает "понимание"
   сути предмета. По той же причине "зубрежка", основанная на запоминании
   внешнего образа предмета, а не принципа его работы, не дает в плане
   обучения почти никакого положительного эффекта. Феномен передаваемой по
   наследству математической либо иной одаренности естественным образом
   объясним через различия в ЭПЗ и начальной детализации внутреннего мира.

4) За счет изначального существования во внутреннем мире общей схемы
   построения внешнего мира человек "видит" то, что невозможно получить со
   стороны эффекторов. В частности это касается развития детей - в первые
   годы жизни они используют уже более 80% информации (имеется в виду вся
   информация о мире хранящаяся в мозге а не ее мизерная часть касающаяся
   умения считать, писать и т.п.), получаемой ими за всю жизнь. Именно по
   этой причине так стремителен прогресс ребенка - его обучение это не
   обучение, а запуск "спящих" объектов 2.2 его мозга. Настоящее обучение
   идет сравнительно долго, что и проявляется в полной мере у людей более
   старшего возраста. Тот же механизм работает и при обучении людей,
   рожденных слепоглухонемыми. Если бы не предварительное знание основ мира,
   то их бы вообще невозможно было бы ничему научить (строго говоря,
   абстрактные знания (математика к примеру) расположены в области т.н.
   альтернативного мира о котором мы расскажем позже, но суть общей идеи
   о заранее записанной информации это не меняет).

5) В человеке, как и в 3.3, присутствуют все 3 вида защиты:
   пассивная - механическая и химическая прочность клеток его тела;
   полуактивная - иммунная система;
   активная - прогнозирование развития ситуаций во внешнем мире и генерация
              соответствующих действий со своей стороны.

Можно приводить еще множество подобных примеров. Но самое главное заключено
в том, что рассматривая человека как объект класса 3.3.1 (на самом деле он,
конечно же, представляет собой 3.3.2, но в целях простоты будем считать что
все-таки 3.3.1) мы можем дать объяснение множеству "загадочных" явлений.

К примеру явления гипноза. Что вообще такое гипноз с точки зрения теории
объектов 3-го порядка? Какова его природа? По всей видимости гипноз имеет
много общего с процессом сна и объектом класса 3.2. Недаром во всех
руководствах по гипнозу ясно прослеживается одна и та же мысль: нужно
каким-либо образом отключить сознание и работать непосредственно с
подсознанием. Подсознание - это 3.2, а сознание - 3.3? Если все это так, то
становится понятной тактика введения в гипнотическое состояние при помощи
манипуляций с телом и хорошо знакомыми, но логически не обоснованными
образами - это действие на рецепторную матрицу и память 3.2. Если и это так,
значит у памяти 3.2 человека либо плохо со стиранием, либо у нее просто
колоссальная емкость. Ведь гипнотизер способен выудить из подсознания
мельчайшие детали давно "забытого" прошлого. Вполне возможно что память 3.2 в
нашем мозге организована по принципу голограммы высокочастотных биополей (из
небезызвестных опытов Кириллиан недвусмысленно напрашивается вывод
о существовании таких полей). И как любая другая голограмма, построенная на
этом принципе память 3.2 даже по своей малой части способна воссоздать всю
картину. При этом потеряется четкость картины, но ее общий облик сохранится.
Более глубокий анализ способен привести и к другим интересным открытиям, а
самое главное - устранить недостатки человека, доставшиеся ему в наследство с
эволюцией, в искусственно создаваемых объектах 3-го порядка. По теории
объекту 3-го порядка не нужен отдых. Следовательно сон - это побочный продукт.
Видимо и гипноз возникает исключительно как следствие "недоработки" канала
связи 3.2<->3.3.

Как видите модель человека как объекта 3.3 весьма правдоподобна и описывает
многое из его поведения. Многое, но не все. Его тело действительно полностью
описывается как 3.2 и частично 3.3, тут вопросов нет. Но существует в мозге
человека нечто выходящее за рамки 3.3. Как мы видели, внутренний мир 3.3
отражает внешний мир. Нет во внутреннем мире ничего такого, что не существует
во внешнем. Это и понятно - нет смысла экспериментировать с заранее
несуществующими вещами. В мозге ребенка также нет ничего такого - он мыслит
образами реального мира. Совсем другое дело - взрослый человек. Буквы, цифры,
абстрактные науки математического типа - все это отсутствует во внешнем
мире. Откуда же они взялись в мозге? Прежде чем ответить на этот вопрос
подведем некоторые итоги.

У объекта 1-го порядка один тип - 1.1. У 2-го порядка - два типа: 2.1 и 2.2.
Причем 2.1 имеет одну разновидность, а 2.2 - две: неопределенную и
определенную (объект класса 2.1 всегда можно считать неопределенным, т.к.
для внешнего наблюдателя он почти равносилен объекту 1-го порядка).
У 3-го порядка - три типа: 3.1, 3.2 и 3.3. 3.1 при этом имеет одну
разновидность а 3.2 - две: с простой 3.2.1 и со стековой памятью 3.2.2.
По аналогии у 3.3 должно быть три разновидности. Одну из них мы уже описали.
Осталось еще две. Так оно и есть на самом деле.

Описанная нами разновидность 3.3.1 работает с реальными образами внешнего
мира. По теории этого достаточно для решения открытых задач, и даже более
того - уже эта часть полностью использует все три потенциальных пути
получения знаний, так что внедрение чего-то нового уже не сможет дать
никакого положительно эффекта. Зачем же тогда "потребовались" еще две
модификации и что они дают? Поиск ответа на этот вопрос выводит нас за рамки
мира объектов 3-го порядка и заставляет пойти дальше. Что мы и попытаемся
сделать, но уже в главе <a href="#9">"9. Объекты высших порядков"</a>.

В заключении этого пункта проведем краткий экскурс по теме возможности
базирования объектов 3-го порядка на компьютере. Разумеется о создании
объекта 3-го порядка в виде "чистой" программы не может идти и речи. Но если
взять в рассмотрение весь компьютер - объект 2-го порядка и его связи с
внешним миром посредством периферийных устройств, то мы уже имеем открытую
систему 2-го порядка. Следовательно построение на ее основе ИИ уже не будет
противоречить принципам интегральной теории, поскольку в окружающем компьютер
бесконечном внешнем мире имеется и универсальный интерфейс и вложенная
структура логических доменов. Таким образом все нужные компоненты для
создания ИИ как бы имеются. Определим насколько же реально построение объектов
3-го порядка на базе персональных компьютеров как наиболее дешевых и
доступных вычислительных устройств. А именно: какие блоки объектов 3-го
порядка в принципе невозможно запрограммировать?

Объект класса 3.1 (см. его схемы в пункте <a href="#72">"7.2. Объект класса 3.1"</a>).
Очевидно что нельзя запрограммировать следующее:
 - Генератор случайности, т.к. выходные данные любого алгоритма уже по своему
   определению неслучайны.
 - Объект 1-го порядка A, т.к. в случае программной его реализации изменение
   состояния в любом случае будет определяться объектом 2-го порядка вида
   A1->X1->A. Т.е. мы опять приходим к необходимости наличия изменяющийся
   физической неоднородности.
 - Программно невозможно реализовать замкнутую систему "ГС->M1<->Zi"
   (см. конец пункта <a href="#721">"7.2.1. Треугольная схема объекта класса 3.1"</a>).
Естественно что первое и третье ограничение несущественно, ввиду того что ГС
можно программно проэмулировать с высокой степенью случайности, а без
замкнутой системы "ГС->M1<->Zi" можно вообще обойтись. Объектом 1-го порядка
A, равно как Z и обслуживающие состояние объекта U обратные связи, послужат
периферийные устройства.

Объект класса 3.2 (см. его схему в пункте <a href="#73">"7.3. Объект класса 3.2"</a>). Поскольку
он является надстройкой над 3.1, то ему присущи те же ограничения что и 3.1.
Только придется расширить периферийные устройства до рецепторно-эффекторных
матриц. Но на этом компьютерная идиллия заканчивается. Уже начиная с объекта
класса 3.2.2 в игру вступает эволюционный процесс. Напомним что эволюционный
процесс и порождаемые им самомодификация и активная защита идут случайным
путем. Если применить его влияние на программы реализующие логику работы узлов
объекта 3-го порядка, то получим проблемы системы ABCD (см. пункт
<a href="#2">"2. Критические оценки существующих представлений. Идея интегрального
подхода"</a>). Непременно возникнет ситуация "непонимания" измененного кода
программы операционной системой. Следовательно эволюционный процесс в любом
случае должен затрагивать аппаратуру - ведь "интерпретатором" состояний
образующих ее объектов 1-го порядка служит среда функционирования, значит
случаи "непонимания" исключены. И сама аппаратура уже с самого начала должна
проектироваться таким образом, что ее случайные нарушения не приводили бы к
краху реализуемой ей логики. Но и первое и второе требует уже не персональных
ЭВМ, а специально созданного оборудования.

Объект класса 3.3 (см. его схему в пункте <a href="#74">"7.4. Объект класса 3.3"</a>). Все
препятствия мешающие создать 3.2.2 на основе персональной вычислительной
техники автоматически наследуются и 3.3. Более того, такие отличительные черты
как ЭПЗ, ДРВ, внутренний мир и задача его формирования, распад-синтез
логических доменов, потенциальная бесконечность и т.д. и т.п. делают процесс
программирования просто невероятно сложным. Если вообще возможным.

Вывод: сделать ИИ на базе персональных ЭВМ если и можно, то очень тяжело и
крайне неэффективно. Попытки небольшой модернизации компьютеров и объединение
их в сеть проблемы не решат. Глубокая модернизация резко увеличит стоимость и
тем самым сделает бессмысленным использование широкораспространенных
компьютеров. Если же делать специальную аппаратуру, то лучше сразу компактно
строить ее на молекулярном уровне. Что и сделано на примере нашего мозга.

------------------------------------------------------------------------------

                      <a name="75">7.5. Преемственность объектов</a>

В нашем удивительном мире еще очень давно обнаружилось странное явление: для
любой без исключения вещи существует своего рода законченный набор свойств.
В рамках этого набора вещь наиболее эффективна - образно говоря она выполняет
свое предназначение наилучшим образом при минимальных затратах. Однако стоит
к этому набору свойств добавить что-то из другого набора, или наоборот,
что-то исключить, как картина меняется. Эффективность стремительно падает.
В этом состоит идея ГЛОБАЛЬНОЙ ЗАКОНОМЕРНОСТИ наличия свойств у объектов.
Все это, конечно, можно было бы отнести к выдумкам литературного сознания,
к интуитивному пониманию законов природы, характерного для предшествующих
научно-технической революции этапов развития цивилизации.
Но не тут-то было: грандиозное развитие техники не только не опровергло эти
мысли, а наоборот - подтвердило. Для любой машины или механизма существует
такой набор "своих" свойств. Причем он включает в себя далеко не узкий круг
чисто технических параметров. Сюда входят эксплуатационные и даже социальные
аспекты! Рано или поздно, но любое техническое творение в итоге приходит к
этому оптимуму.

...Уже больше 50 лет существует сверхзвуковая авиация, но пассажирские
лайнеры продолжают свои полеты на дозвуке. Автомобили разных производителей
год от года становятся все более похожими. Различные виды вооружений тоже
имеют свои оптимальные параметры. Например "ракетная лихорадка" начала
холодной войны не сделала артиллерию бесполезным оружием, а наглядно показала
что как каждому овощу - свое время, так и каждой боевой системе - свое место
и предназначение. Ядерные силовые установки не прижились на самолетах и другой
легкой технике, но оказались незаменимыми на подводных лодках и ледоколах.
Законы физики и вообще физические явления в целом настолько соответствуют
идее глобальных закономерностей, что во многих случаях можно попросту...
предсказать как поведет себя тот или иной объект, даже не изучая его в
деталях! При таких "предсказаниях" обычно опираются на представление об
возможном месте этого явления во включающей его законченной физической модели
или используя какую-нибудь аналогию.
Те, кто хорошо знаком с математикой, не раз ловили себя на мысли об
удивительной законченности некоторых ее положений - ничего не прибавишь и
не убавишь.
В природе практически любой вид приспосабливается к среде своего обитания как
раз путем приобретения набора соответствующих свойств и удаления ненужных.

Одним словом глобальные закономерности определенно есть. Их влияние несложно
проследить и на примере объектов 3 порядка.

Система с объектом 3.1 образует комплекс из наиболее простых подходов:
простой способ случайного перебора, простая обратная связь и цель. Среда
функционирования тоже наиболее простая.
Система с 3.2.1 сложнее. Однако она не дает возможности точного достижения
цели: усложнение обратной связи вызывает ее повышенную уязвимость.
В результате вероятность передачи по ней искаженной информации увеличивается.
Система с 3.2.2 еще сложнее. Причем эволюционный процесс, стековая память и
косвенная цель органично дополняют друг друга. Косвенная цель, например, как
раз особенно актуальна именно в сочетании с эволюционным процессом и стековой
памятью. А точность достижения истинной цели снижается еще больше.
Система с 3.3.1 - бесконечный предел систем с объектами 3-го порядка.
А прилагаемый к нему комплекс мер и средств достижения цели, сама цель,
вообще не применимы в других условиях.
Каждый объект более высокого уровня содержит в себе все свойства объекта
более низкого уровня.
Внешний мир - среда функционирования - непрерывно усложняется с ростом уровня
объектов 3-го порядка. Усложнения носят характер общего случая: более сложная
среда полностью содержит в себе все свойства более простой. Соответственно
этому ведут себя и объекты 3-го порядка различных уровней: объект класса 3.3
базируется на 3.2. А тот, в свою очередь - на 3.1. Возникает ПИРАМИДАЛЬНАЯ
структура 3.1-3.2-3.3. Последующий уровень пирамиды неотделим от предыдущего.

И все объекты 3-го порядка могут использовать все модификации объектов 2-го
порядка: 2.1 и 2.2. Т.е. на самом деле, к примеру, 3.1 может быть представлен
не только в виде треугольной схемы и полной схемы, в которых цель и целевой
объект различны (см. <a href="#721">"7.2.1. Треугольная схема объекта класса 3.1"</a> и
<a href="#722">"7.2.2. Полная схема объекта класса 3.1"</a>). Возможна конструкция
наподобие объекта 2.1 (см. <a href="#52">"5.2. Объект класса 2.1"</a>), но для 3-го порядка:

                 ╔══╗               ┌─┐                ╔══╗
             ┌──>╢AU╟──────────────>┤U├<───────────────╢BU╟<──┐
             │   ╚══╝               └┬┘                ╚══╝   │
             │                       │                        │
             │                       │                        │
             │  ┌───────────┐        │        ┌───────────┐   │
             │  │Uпредыдущее├<─┐     v     ┌─>┤Zпредыдущее│   │
             │  └───────────┘  │  ╔══╧══╗  │  └───────────┘   │
             │                 └─>╢     ╟<─┘                  │
             │                    ║ M1  ║                     │
             │                 ┌─>╢     ╟<─┐                  │
             │  ┌───────────┐  │  ╚══╤══╝  │  ┌───────────┐   │
             │  │Zтекущее   ├<─┘     │     └──┤     ГС    │   │
             │  └───────────┘        │        └───────────┘   │
             │                       │                        │
           ┌-┼-----------------------┼------------------------┼-┐
           | │   Внешний мир.        v                        │ |
           | │   Целевой объект    ┌─┴─┐                      │ |
           | │   совпадает с целью │ Z │                      │ |
           | │                     └───┘                      │ |
           | │┌─┐                   ╔═╗                    ┌─┐│ |
           | └┤A├──────────────────>╢Y╟───────────────────>┤B├┘ |
           |  └─┘                   ╚═╝                    └─┘  |
           └----------------------------------------------------┘

Разумеется, каждая модификация объектов 3-го порядка включает в себя все
свойства объекта 2-го порядка. В полном соответствии с теорией объектов
(см. <a href="#3">"3. Теория объектов"</a>). Всего получается 12 видов объектов 3-го порядка.

Таким образом каждая система представляет собой законченный комплекс. Попытка
изменить эти комплекс, взяв кусок из другого комплекса, приводит к уменьшению
эффективности. Например применение сложной цели в 3.1 не имеет практического
значения, поскольку достигнуть ее случайным путем почти невозможно. И обратно:
применение простой цели в 3.2 неэффективно, поскольку достижение того же
результата, что и в 3.1 покупается неоправданным усложнением конструкции.
Глобальной закономерности подчиняется практически любой из атрибутов объектов
3-го порядка: цель, организация обратной связи и защиты, эффекторы и
рецепторы, эволюционный процесс, свойства среды функционирования, число
основных блоков (в 3.1 - M1, в 3.2 - M2.1 и M2.2, в 3.3 - внутренний и
внешний мир, цель охватывающая весь внешний мир) и даже классификация
объектов 3-го порядка.

Более сложные объекты 3-го порядка не отменяют практической ценности менее
сложных.



==============================================================================



                                  <a name="8">8. Резюме</a>


В этом пункте в качестве резюме мы поместим краткое (упрощенное и
бездоказательное) изложение вышеописанных идей построения ИИ и интегрального
подхода в целом.

Итак, что такое ИИ? Это устройство, которое может делать все то, что может
человек. Виды работ, выполняемые людьми, делятся на 2 основные категории:
физическая и умственная деятельность. Умственная деятельность также состоит
из 2 частей: счетно-решающей и мыслительной. За все время своего существования
человечество создавало машины, на которые можно было бы переложить часть
этих работ. Физический труд стали выполнять трактора, подъемные краны,
грузовики и т.д.. Счетно-решающую мозговую деятельность - такую где не надо
что-то придумывать, а только выполнять однообразные операции с числами,
текстом и др. - стали выполнять компьютеры. А вот машин осуществляющих
мыслительную деятельность нет. А нет их потому что мыслительная деятельность
сводится к придумыванию решения задачи - нужно составить алгоритм ее решения.
Задача в которой известно что нужно получить, но неизвестно как это сделать
- открытая задача. ИИ должен уметь решать открытые задачи.

Если удастся найти нечто, что может придумывать любые алгоритмы, и соединить
это нечто с машинами физического труда и счетно-решающей деятельности, то как
раз и получится ИИ. Сегодня создатели ИИ бьются над такими программами,
которые могли бы сами, без посторонней помощи, создать любой алгоритм. Но
результата нет. Возникает целый ряд непреодолимых трудностей принципиального
характера. Так может такие программу вообще нельзя придумать? Так оно и есть.

Важное место в интегральной теории занимает теория объектов. Согласно ей, как
объекты следует рассматривать не только материальные вещи, но и любые явления
происходящие в нашем мире, даже абстрактные понятия. Все объекты делятся на
порядки. Объект более высокого порядка может управлять только объектом более
низкого порядка, т.е. по-другому может изменить, удалить или добавить любое
его свойство. На основе теории объектов получается что все программы - это
объекты одного порядка. Следовательно не существует программы, которая могла
бы генерировать произвольные алгоритмы - другие программы. Этот вывод нашел
блестящее подтверждение практикой.

Количество попыток создать обладающую интеллектом программу очень велико.
Со время появления компьютера были использованы все мыслимые и немыслимые
способы, создавались хитроумные алгоритмы, применялись различные
математические модели. Все тщетно. Даже бурное, взрывообразное, развитие
современного программного обеспечения не дало делу ИИ никакого толка.
Забавные игрушки вроде электронных собак, да узкоспециализированные системы
управления беспилотными самолетами или планетоходами - вот, пожалуй, и все
"интеллектуальные" плоды информационной революции. Тут даже неспециалисту
ясно что никакой это не ИИ, ведь ни один из этих образцов даже и близко не
может сравниться с могуществом разума человека. С настоящим интеллектом.
Учитывая что в создании ИИ-программы принимало участие огромное число людей и
затрачены гигантские средства, не будет большой ошибкой утверждать что к
настоящему времени программный путь попросту исчерпал себя. Все возможные
варианты кем-то когда-то уже были испробованы и это ничего не дало.
Итак, сделать ИИ программой невозможно. Однако мозг человека - доказательство
реальности ИИ. Значит в ИИ есть нечто, что нельзя запрограммировать, но оно
существует в реальности. Как всем известно мозг состоит из атомов, образующих
молекулы. Молекулы образуют нейроны, совокупность которых и представляет
собой мозг. Почему же ничего не работает, если заменить реальные атомы,
молекулы и нейроны моделирующим их алгоритмом? Может потому что нейронов
слишком много и создать такой алгоритм пока нельзя? Этой мыслью утешали себя
первые создатели ИИ. Однако уже давно ушли в прошлое времена первых слабых
ЭВМ, а современные суперкомпьютеры так и не смогли самостоятельно решить ни
одной открытой задачи. Следовательно, дело тут не в количестве. Трудности
создает обстоятельство, на которое до этого никто никогда не обращал внимания:
физический объект и алгоритм его работы не эквивалентны друг другу!

Переход "нейрон -> алгоритм его работы" принципиально неверен. Алгоритм -
отвлеченное абстрактное понятие, придуманное человеком для описания
происходящих в природе процессов. Нет в реальности никаких алгоритмов, а есть
только физические объекты, характеристики и поведение которых приближенно
описываются данными и алгоритмами, составляющими формальную модель
физического объекта. Естественно предположить что при проектировании ИИ,
работающего в настоящем, а не виртуальном мире, необходимо учитывать эти
особенности.

Также неверно и негласное предположение о том, что зная принцип работы ИИ
его можно построить где угодно. Подобно тому как зная алгоритм работы
программы, можно запрограммировать ее на любом языке и выполнить на любом
компьютере. Секрет работы мозга заключен вовсе не в его внутреннем хитроумном
устройстве (хотя это тоже немаловажно), а за его пределами. Человек в целом и
его мозг в частности использует особые свойства окружающей его среды,
недоступные для использования из обычных компьютерных программ.

Почему же поправки на учет материального носителя алгоритма так существенны?
Формальная модель (алгоритм работы) отличается от реального объекта тем, что
в ней описываются только профилирующие свойства. Мало того, любой объект
существует не сам по себе, а в окружении других объектов, с которыми
непрерывно взаимодействует - в среде функционирования. Поэтому, создавая
формальную модель объекта, мы так или иначе создаем и модель его среды
функционирования. Она также формальна и тоже содержит только профилирующие
свойства. Для решения алгоритмических задач этого вполне достаточно,
поскольку в их рамках происходит оперирование только ограниченным кругом
свойств объекта и окружающей его среды (профилирующими свойствами). Однако
формальные модели непригодны для решения задач ИИ, в которых для получения
результата нужно использовать свойства не входящие в формальные модели (при
этом какие именно это свойства заранее неизвестно). Неприменимость формальных
моделей для решения такого рода задач наглядно демонстрируется известным
парадоксом про яйцо и курицу (кто раньше появился - яйцо или курица).
Очевидно что если учитывать только профилирующие свойства объектов (их форма
- "яйцо" или "курица" и отношение родитель-потомок "курица вылупилась из
яйца") и не учитывать непрофилирующие (ход эволюции жизни на Земле, различные
генетические аномалии и т.п.), то этот парадокс неразрешим.

Отличие интегральной теории от общепринятых подходов как раз и заключено в
комплексном рассмотрении абстрактных понятий - данных и алгоритмов совместно
с их материальным носителем. В связи с этим ее можно рассматривать как
общий случай теории алгоритма.

Объекты 1-го порядка - это материальный носитель данных. Жесткий диск
компьютера или дискета, на которых хранятся данные. Лист бумаги с написанным
на нем текстом. Все это объекты 1-го порядка. Вырытая на ровной поверхности
земли яма или возвышающийся над ней холм - тоже объекты 1-го порядка. Одним
словом, объектом 1-го порядка является любая неоднородность на общем
однородном фоне.

Объекты 2-го порядка - это и есть материальный носитель алгоритма,
настроенный на работу с нужным типом неоднородности в объекте 1-го порядка.
Когда компьютер включен и на нем выполняется программа, то он - объект 2-го
порядка. Не сама программа, а именно аппаратура в момент выполнения
программы. И если объект 1-го порядка возникает уже благодаря только одному
факту своего существования, то объект 2-го сверх этого находится в постоянном
движении. Данные обрабатываются только пока компьютер включен, пока бегут по
его коммуникациям потоки электронов. Выключили напряжение - прекратилась и
обработка данных, перестал существовать объект 2-го порядка. Объектами 2-го
порядка является не только компьютер, но и любое созданное человеком
устройство, поскольку любая машина или любое оборудование для выполнения
физической или счетно-решающей деятельности служит для преобразования
объектов 1-го порядка. Без соответствующего объекта 2-го порядка извлечь
информацию из объекта 1-го порядка невозможно.

Рассмотрим например жесткий диск компьютера. Информацию несет разница в
интенсивности магнитного поля на разных участках поверхности диска.
Все казалось бы просто. Но можно ли каким-нибудь еще способом, кроме
магнитного, записать информацию на данный диск? Оказывается можно. Например
путем изменения его толщины в разных местах (как на старых грампластинках).
Или можно так отполировать диск, что отражающая способность одних участков
его поверхности будет выше или ниже других участков. Можно опуститься с
поверхности диска вглубь и начать варьировать химический состав, менять
неоднородности его кристаллической решетки... Как видим, способов записи
информации на один и тот же диск существует очень много. С первого взгляда
кажется что считать информацию несложно: так как мы записываем ее в виде
магнитных неоднородностей, то других неоднородностей (механических, оптических
и т.д.) на диске просто не существует. Поэтому нужно обратить внимание именно
на неоднородное магнитное поле диска.
Однако ничего из этой затеи у нас не выйдет. А не выйдет потому что не
существует в мире идеальных вещей. Мы никогда не сможем настолько тщательно
изготовить диск, что он будет абсолютно одинаковой толщины, представлять
собой идеальное зеркало (или абсолютно черное тело) и т.д.. В реальности на
нем помимо магнитных неоднородностей всегда будет присутствовать и масса
побочных. Из-за этого тот, кто заранее не знает что информация записана в
магнитном поле, не сможет ее прочитать. Разве лишь только случайно выберет
среди огромного числа неоднородностей именно магнитную...
Но если даже удастся правильно определить тип используемой для записи
информации неоднородности, нужно еще расшифровать то что в ней записано.
Например существует множество файловых систем (FAT16, FAT32, NTFS и др.),
в которых одна и та же информация при использовании одного и того же принципа
магнитных неоднородностей, хранится в разных форматах. Таким образом, если не
знать заранее каким способом записана информация, то в общем случае извлечь
ее невозможно.

Знания - это объекты 2-го порядка. Этим они коренным образом и отличаются от
данных - объектов 1-го порядка. Образно говоря, знания - это
самореализующаяся сущность, это действующая формула, это бегущая вода, это
живая книга! Разница между данными и знаниями такая же большая, как между
рецептом по приготовлению пирога и самим процессом приготовления.

ИИ - объект 3-го порядка. Имеются 3 ключевые разновидности объектов 3-го
порядка. Они образуют вложенную структуру вида 3.1 -> 3.2 -> 3.3, и каждая
последующая ступень содержит в себе предыдущую и является ее общим случаем:

1. Идея управления программой при помощи другой программы (под программой
   подразумевается, естественно, алгоритм работы объекта 2-го порядка).
Вообще есть 2 возможных способа изменения другой программы. Можно либо менять
ее "осмысленно", по принципу программиста меняющего текст исходного файла
программы. Или менять уже готовый *.EXE - файл, в надежде что рано или поздно
он заработает как нам нужно. На первый взгляд кажется что безусловно нужно
воспользоваться первым способом, как наиболее эффективным. Но объекты
реального мира - не набор программ. И у ИИ никогда не будет "исходных"
файлов. Все что он "знает" об алгоритме работы объекта 2-го порядка - так это
только его конечное проявление в виде воздействия на другие объекты мира. При
этом совершенно неважно насколько сложен алгоритм: если 2 разных по сложности
алгоритма в конечном итоге одинаково воздействуют на окружающую среду, то с
точки зрения внешнего наблюдателя они равноценны. Поэтому несмотря на всю
привлекательность "осмысленного" способа изменения программы, мы не можем им
воспользоваться, поскольку изначально ничего не знаем о ее реальном
внутреннем устройстве, а видим только конечный результат ее работы.
Что же нужно, чтобы воспользоваться 2-м способом?
Используем два момента. Первый: любая программа базируется на каком-то
материальном носителе и все ее управляющие сигналы в конечном итоге
преобразуются в физическое воздействие на окружающую среду. Второй: состояния
всех атомов и молекул нашего мира связаны друг с другом - изменение состояния
любого атома или молекулы через электромагнитное и гравитационное поле
приводит к изменению состояния всех остальных атомов и молекул Вселенной.
Таким образом, воздействие на окружающую среду программы P можно использовать
для изменения материального носителя программы Q. Но меняя материальный
носитель программы Q мы изменяем и саму программу Q. Точно так же как убирая,
добавляя и меняя характеристики резисторов, конденсаторов, диодов и других
компонентов электрической схемы мы тем самым меняем и логику ее работы. Как
использовать это свойство применительно к проблеме ИИ? Очевидно что целью ИИ
служит создание материального носителя некой программы Q - объекта 2-го
порядка. Программа Q, в свою очередь, служит для преобразования входных
данных - объекта 1-го порядка A в выходные - в объект 1-го порядка B. Так как
в реальном мире все движется и изменяется, то A и B также постоянно меняются.
Задача ИИ заключается в упорядочивании этих изменений. Ему нужно сделать так,
чтобы A и B менялись не как вздумается, а по алгоритму B=Q(A) - нужно
поменять характер протекания естественных процессов зависимости состояния B
от состояния A соответствующим образом. Станем делать так: случайным образом
изменим что-нибудь в окружающей среде и посмотрим приблизились ли мы к цели:
к созданию B=Q(A). Если приблизились, то делаем еще один случайный шаг.
Если нет - то возвращаем то что мы поменяли в предыдущее состояние и меняем
что-нибудь другое. Так шаг за шагом мы и создадим B=Q(A).

На этих рассуждениях основан смысл работы объекта класса 3.1. Однако где
попало он не заработает. Ведь для того чтобы была гарантия что удастся
построить B=Q(A) необходима взаимосвязь не только A и B, но и всех тех
объектов, состояние которых мы случайно меняем, и от которых в конечном итоге
зависит характер протекания естественных процессов. Это свойство носит
название универсального интерфейса. Ни в компьютере, ни в их сетях, вы его не
найдете. Его нельзя воспроизвести искусственно в полном объеме, поскольку
связаны друг с другом должны быть все свойства всех объектов, а не только их
часть, описанная формальной моделью. Именно универсальный интерфейс, а не
внутреннее устройство объекта 3.1 делают возможным создание B=Q(A). Поиск
различных вариантов внутреннего устройства ИИ без анализа свойств окружающей
его среды и есть, пожалуй, самая большая ошибка современных методик создания
ИИ, их камень преткновения.

2. Идея запоминания предыдущих состояний.
Идея заключена в том, что запоминать предыдущие состояния имеет смысл только
тогда, когда есть гарантия что что-то похожее будет повторяться и в будущем.
Свойство внешней среды, гарантирующее такие похожие повторения, дают ей
логические домены - существующие в ней устойчивые зависимости типа "причина -
следствие". Объект класса 3.2 представляет собой объект класса 3.1,
использующий это свойство среды и тем самым резко повышающий свою
эффективность. Он запоминает и использует информацию не только последнего
шага как 3.1, а вообще всех сделанных им шагов. Логические домены, ясное
дело, также нельзя создать искусственно. Объект 3.2 обладает и еще одним
важным преимуществом перед 3.1 - в нем впервые становится возможным
протекание эволюционного процесса и некоторых других нововведений значительно
повышающих эффективность работы.

3. И, наконец, идея построения искусственного интеллекта.
Объекты 3.1 и 3.2 в принципе уже могут решить открытую задачу. Но очень уж
долго будет проходить это процесс - все-таки случайный перебор вещь не
очень-то эффективная, хоть и с запоминанием. Ведь даже при игре в шахматы
незначительно отличающиеся друг от друга позиции способны гарантированно
привести к диаметрально противоположным исходам партии. Чего уж говорить про
реальный мир! Чтобы избавиться от процедуры поиска пути к цели нужно не
искать способ преобразования уже существующей программы P, а создать ее
заново. Для этого используем то, что некоторые из глобальных характеристик
бесконечных логических доменов являются свойствами только коллектива
слагающих их объектов. Подобно тому, как любое твердое тело имеет форму (это
и есть его глобальная характеристика), а слагающие его атомы и молекулы формы
не имеют. Поэтому мы и можем заново создавать бесконечный логический домен с
заранее заданными свойствами, не изменяя при этом свойств элементарных
объектов, из которых он состоит, принципиальным образом. Программа P при этом
будет построена на основе глобальных характеристик бесконечных логического
домена: от одного домена берется одно свойство, от другого - второе и т.д.,
а затем все это собирается вместе.
Но для того чтобы что-то из чего-то строить нужно знать заранее свойства и
первого и второго. Как должно выглядеть "что-то" нам уже известно - это облик
цели. А вот чтобы знать из "чего" строить нужно изначально обладать знаниями
об окружающем ИИ мире - внешнем мире. Для этого внутри ИИ создается
внутренний мир - модель внешнего мира. Сначала все шаги к цели делаются во
внутреннем мире, а затем лучший из вариантов ее достижения реализуется во
внешнем мире. Но встает вопрос: как создать этот внутренний мир так, чтобы он
как можно точнее описывал внешний и чем отличается внутренний мир от обычной
формальной модели?
Если внутренний мир будет строить сам ИИ, то может получиться что он будет
точно описывать реальный мир только в определенных точках, так же как
интерполяция или экстраполяция сложной математической функции. Для приемлемой
степени сходства внутреннего и внешнего мира необходимо чтобы ИИ-ту были
известны основные закономерности, которым подчиняется внешний мир. Поэтому
изначально нам нужно вручную создать обобщенную модель внутреннего мира:
описать законы физики, основные предметы и свойства нашего мира и другие
существенные с точки зрения понимания внешнего мира вещи, составляющие т.н.
энциклопедию первичных знаний. А ИИ просто конкретизирует эти знания,
использует их в качестве основы (как бы ищет конкретные значения
коэффициентов при неизвестных в функции заданного вида).
Принцип использование набора первичных знаний из энциклопедии очень похож на
игру в детский конструктор. Знания из энциклопедии или относятся к простейшим
деталькам (которые невозможно разобрать на более простые) или к готовым
сложным конструкциям-заготовкам (их можно разломать на детальки и сделать
что-то новое). Фундаментальные законы природы - это детальки. Знания о том,
что летом обычно жарко, а зимой холодно - заготовки. Т.к. ассортимент деталек
у ИИ ограничен и стыкуются они друг с другом только определенным образом, то
он при всем желании не сможет составить из них неосуществимые в реальном мире
конструкции. Например отрицательную гравитацию. Детальки и заготовки - объекты
2-го порядка. Взаимодействие объектов 2-го порядка ("стыкуются друг с другом
только определенным образом") и его способность к неограниченной детализации -
некоторые из отличий внутреннего мира от формальной модели.
Очевидно что в пределе внутренний мир описывает внешний полностью, вплоть до
мельчайших подробностей. Но может ли часть быть эквивалентна целому? Может в
случае бесконечности внешнего мира. Бесконечность среды функционирования -
вот итог, делающий возможным построение бесконечных логических доменов с
заранее заданными свойствами и внутреннего мира. На этих основных принципах
плюс использование возможностей объектов класса 3.1 и 3.2 и построен объект
класса 3.3 - ИИ.

Как мы видим, принцип работы ИИ очень напоминает рассуждения человека. Как и
у ИИ, у человека решение сложной задачи в основном происходит по аналогии
(у уже существующих логических доменов-знаний берутся глобальные
характеристики - часть этих знаний), лишь с небольшой примесью случайности.
Он вовсе не ищет способа ее решения путем хаотического перебора миллиардов
вариантов подобно шахматным или экспертным программам. Весь его выбор
сводится лишь к отбору всего нескольких наиболее перспективных путей.

В заключении хотелось бы еще раз упомянуть об кажущемся отдаленном сходстве
принципов работы 3.1, 3.2 и 3.3 с генетическими алгоритмами, нейронными
сетями и пр. подобными системами. Все эти средства оперируют формальными
моделями, зачастую весьма далекими от реальности. А объекты, рассматриваемые
в интегральной теории, в частности объекты 3-го порядка - это физически
существующие образования. Похожесть классических "программ ИИ" и принципов
работы объектов интегральной теории только внешняя. Интегральная теория не
запрещает создание ИИ на основе компьютера, рассматриваемого как ОТКРЫТАЯ
система. Т.е. связанного с окружающим его миром посредством периферийных
устройств. ИИ невозможно сделать как ЗАМКНУТУЮ программу: играющие сами с
собою в шахматы и якобы от этого "умнеющие" программы, разнотипные "говорилки"
держащих связь с окружающей средой не иначе как через поток байтов заранее
оговоренной структуры и будто бы понимающие смысл слов и другие примеры.



==============================================================================



                          ─────── Часть 2 ───────



В отличие от содержимого предыдущих глав, основанного на доказательствах,
нижеследующий материал имеет характер гипотез. Но поскольку он служит для 1-й
части необязательным дополнением, все написанное выше полностью сохраняет
свою силу в случае его ошибочности.



                        <a name="9">9. Объекты высших порядков</a>

А существуют ли вообще эти самые объекты высших порядков? А если и
существуют, то что собой представляют? И какова общая картина мира?
Эти и множество других подобных вопросов неизбежно возникают когда мы хотим
выйти за рамки того что видим и чувствуем и хотим знать сверх этого. Такая
ситуация хорошо известна создателям новых физических теорий и выход из нее -
тоже. Выходом служит создание общей физической картины мира, справедливость
которой подтверждается или опровергается опытными данными. Но мы пойдем
другим путем. И вот почему. Из теории объекта класса 3.3 вытекает что для
построения внутреннего мира, являющегося полным аналогом внешнего,
недостаточно информации рецепторной матрицы. Ее хватает только для описания
диапазона внешнего мира, его части. Та же ситуация повсеместно распространена
и в создании физических теорий - все они имеют рамки применимости. Поэтому ни
одну из них (включая и ОТО) нельзя использовать для описания мира в целом. Но
вернемся к нашим объектам. Кроме ограничения, накладываемого незнанием общей
картины мира, существует еще одно. Как известно, любая теория основывается на
постулатах, с которых путем логических построений и создается все остальное.
Но и постулаты и логика - это те же самые знания, т.е. объекты 2-го порядка.
Поэтому любые теории точны только в мире объектов 2-го порядка. Применительно
к объектам 3-го порядка выводы теорий могут носить только вероятностный
характер. Даже вероятность выполнения постулатов - столпов теорий - в таких
условиях всегда меньше 1. Что касается принципа деления объектов Мира на
порядки, рассмотренного еще в самом начале, то он остается в силе, поскольку
выбор объектов, их свойств и способов работы с ними производится произвольным
образом. Рамки его применимости ограничиваются знаниями о Мире того, кто
его использует. Поэтому принцип деления объектов Мира на порядки каждый видит
по-своему. Из-за этого для практического использования этого принципа (т.е.
построения на его основе теории) приходится определенным образом постулировать
структуру порядков объектов, как например это было сделано нами для объектов
1..3 порядков. Ну а раз есть постулаты, то есть и ненулевая вероятность их
ошибочности, подобно тому как неверной бывает не математика, а математическая
модель. Таким образом очевидно что без знания общей картины мира нам не
обойтись. Где ее взять вы уже, наверное, догадались. Основная концепция наших
рассуждений будет основываться на религии. Конечно это ненаучно и несерьезно
и даже как-то вызывающе (подумать только - искусственный интеллект, верх
совершенства техники, якобы уходит своими корнями в какое-то там верование!).
Чтож, все это так. Поэтому перед тем как печатался этот документ была создана
теория, основывавшаяся всего на 2 постулатах:

 1. Принцип непрерывности.
    Утверждает что для любого рассматриваемого объекта A существует частный
    случай в виде объекта B и общий в виде объекта C. Между любыми двумя
    объектами B и C всегда существует объект A. Иначе говоря в Мире нет
    "белых пятен" - пустых мест, в которых ничего нет.

 2. Принцип экстремумов.
    Для любого типа объектов имеется некая единственная совокупность присущих
    ему характеристик, обладая которой он является наиболее эффективным по
    сравнению с однотипными ему объектами. При этом при переходе от более
    низкоорганизованного типа объектов к более высокоорганизованному типу
    наблюдается смещение точки экстремума в сторону старших объектов, а сам
    экстремум становится более ярко выраженным.

Так вот, из этих постулатов вытекает и существование объектов высших порядков
(4 и далее), и невозможность создания объектом n-го порядка другого объекта
n-го порядка, и уникальность объектов начиная с 4-го порядка, и двойственная
структура человека (сочетание 3-го и 4-го порядка), и то что объект 4-го
порядка в человеке и наша Вселенная - разные вещи и многое, многое другое.
Как нетрудно видеть, пункт <a href="#75">"7.5. Преемственность объектов"</a> - прямое следствие
этих постулатов.

Можно было бы конечно описывать и развивать эту теорию подробнее. Только
вот... зачем? Взяв в качестве стартовой точки другие постулаты можно прийти к
другим моделям мира, не противоречащих при этом наблюдаемым фактам. Таким
образом постулаты - это отображение не действительности, а мировоззрения их
автора. Поэтому и было решено не морочить читателю голову лживыми и
ограниченными "правилами игры" а сразу дать ему конечный результат. Так
будет и правильнее и честнее.

Суть дальнейших рассуждений основывается на следующем. Существуют объекты
высших порядков, они способны создавать и управлять объектами более низких
порядков (но не равного, а тем паче большего) и представляют собой отдельные,
автономно существующие и притом уникальные, непохожие один на другой миры.
Это как бы параллельные Вселенные. Наша Вселенная стоит на границе перехода
между 3-м и 4-м порядком. Это дает возможность другим объектам 4-го порядка
(душе человека в частности) неограниченно глубоко влиять на ход событий
внутри нее, но не позволяет изменить ее суть в целом. Вот как бы и все, что
потребуется нам применительно к проблеме ИИ.

Ежели вы, драгоценный наш читатель, со всем этим согласны - читайте дальше.
Ежели вы - устоявшийся атеист и ни за что на свете не согласитесь на другое,
все равно советуем прочитать, т.к. дополнительная пища для ума еще никому не
мешала (в каждой сказке - доля истины).


                     <a name="91">9.1. Объекты класса 3.3.2 и 3.3.3</a>

Начнем с самого "крамольного" - двойственности человека. Как уже говорилось,
сия двойственность проявляется в том, что с одной стороны человек - это
объект 3.3, а с другой - объект 4-го порядка. Зачем "нужен" объект 4-го
порядка? В конце предыдущего параграфа возник парадокс - неизвестно откуда
взялись абстрактные знания в голове человека. Теперь мы можем ответить -
это продукт стороннего воздействия на мозг человека его души - объекта
4-го порядка. В связи с чем новый вопрос - зачем? Пока что можем предложить
только одну правдоподобную версию: цель воздействия других объектов 4-го
порядка на нашу Вселенную кроме всего прочего содержит и то, что каждый
такой объект стремится переделать ее на свой лад. Однако сделать это не
так-то просто: влияние стороннего объекта 4-го порядка на нашу Вселенную
мало (как-никак, а Вселенная это почти что 4-й порядок!). Как быть?
И вот что было придумано. Влияние объекта 4-го порядка мало (то что это так и
сомневаться не приходится - вон сколько спорили есть душа или нет), изменить
Вселенную в целом он явно не может, но он может изменить вероятность
протекания процессов находящихся в состоянии неустойчивого равновесия в
выгодную для себя сторону (это также может быть связано с локальными
изменениями природных законов случайного распределения - см. <a href="#93">"9.3. Время.
Квазирекурсия в средах существования объектов класса 3.3"</a>). Теперь дело за
малым - нужен механизм который преобразовывал бы эти еле уловимые изменения в
мощное воздействие на Вселенную! Иными словами усилитель. Внутри усилителя
искусственно создается область заполненная объектами в неустойчивом
равновесии и хорошенько изолированная от влияния окружающей среды. Объект
4-го порядка изменяет вероятность протекания процессов в этой области таким
образом, что в результате усиления они приводят в движение эффекторы
усилителя, а те в свою очередь меняют положение вещей в нашей Вселенной.
Что же лучше всего подходит на роль такого чудо-усилителя? Конечно же объект
3-го порядка, а точнее 3.3 (есть подозрения что объекты 4-го порядка могут
брать за основу и 3.1 с 3.2). Он не только усиливает процессы, протекающие в
его мозге во многие миллиарды раз, но и заботиться о его защите,
автоматически отсеивает информацию-мусор на входе в мозг (через 3.2),
автоматически строит и развивает внутренний мир и т.п. В общем автоматически
выполняет всю "нетворческую" работу, оставляя тем самым объекту 4-го порядка
больше сил на то, ради чего он ему и нужен - творить неизведанное. Вот только
где? В какой области мозга? В памяти 3.2 нельзя - нарушишь его работу, т.к.
объект 4-го порядка создает нечто новое, не имеющее аналогов во Вселенной.
По той же причине нельзя затрагивать под область неустойчивых
объектов и внутренний мир. Поэтому в объекте 3.3 создается совершенно новая
область - т.н. область АЛЬТЕРНАТИВНОГО МИРА. Альтернативный мир не нужен в
обычном объекте класса 3.3, он создается специально для объекта 4-го порядка.
Это и есть 2-я модификация объекта класса 3.3 - 3.3.2.
Как устроен альтернативный мир? Конструктивно он сложнее внутреннего - так
как изменения в нем производятся объектом 4-го порядка, то стало быть
появляется возможность моделирования не только объекты 2-го порядка, как во
внутреннем мире, но и 3-го. Вообще "моделирование" - неудачный термин.
Альтернативный мир потому так и называется, что служит для создания мира, не
уступающего реальному, внешнему. В альтернативном мире объект 4-го порядка
создает собственный мир, собственную вселенную. Но создать - полдела. Надо
еще это как-то перевести во внешний мир. Напрямую, как это делается с
внутренним миром, бесполезно - альтернативный мир на то и альтернативен, что
отличается от внешнего основополагающими принципами, делающими невозможным
его прямолинейный перенос в реальность. Ну а "криволинейный" перенос?
Это запросто. Сделаем так. Проведем ПАРАЛЛЕЛИ - связи между похожими
явлениями внутреннего и альтернативного миров. А затем так будем развивать
события во внутреннем мире, что они станут похожими на аналогичные события
в альтернативном. Потом все это естественно переносится и на внешний мир.
Внутренний и альтернативный мир находятся в тесной взаимосвязи даже без
влияния объекта 4-го порядка. Должен существовать некий "мост" - устройство
их связи. С его помощью изменения во внутреннем мире отражаются на
альтернативном и наоборот, на его же основе работают и параллели.
Таким образом альтернативный мир - это фактически вторая цель, диктуемая
объектом 4-го порядка. Кто из них сильней? Настоящая, исходная, цель объекта
3.3 или альтернативная? Вспоминая людей (психически вполне здоровых), которые
шли даже на смерть во имя своих идей, сложно сказать. К слову говоря, нет
принципиальных ограничений на изменение объектом 4-го порядка и исходной
цели, скорее всего она тоже меняется. Возможно также и ситуация, когда одним
и тем же объектом 3-го порядка управляют несколько объектов 4-го порядка.
В этом случае поведение объекта 3-го порядка будет в основном определяться
влиянием наиболее мощного (мощных) объектов 4-го.
При помощи объекта 4-го порядка в 3.3.2 могут быть искусственно воспроизведены
и другие непринципиальные улучшения. Например создан полигонный привод слоев.

Так работает 2-я модификация объекта 3.3. Осталась еще одна: 3.3.3. Как ясно
из сказанного слабое место системы с альтернативным миром - ее связь с
реальностью. Чем больше развит альтернативный мир, тем меньше будет удельное
число параллелей между ним и внутренним миром. Образно говоря мало быть умным,
нужно еще быть и сильным - уметь воплощать придуманное. И т.к. все
"естественные" пути воздействия на внешний мир уже исчерпаны, то остается
одно - уже непосредственно во внешнем мире через эффекторы объекта 3.3
искусственно создавать области с неустойчивыми объектами. Это позволит
объекту 4-го порядка изменять их, а тем самым пройдя через цепочку
рецепторы->память 3.2->внутренний мир эти изменения станут чрезвычайно
похожими на свои аналоги из альтернативного мира. Суммарная степень
воздействия объекта 4-го порядка на Вселенную станет при этом еще больше.

Очевидно что степень развития альтернативного мира при этом должна быть
гораздо выше чем в предыдущей модификации ввиду того что создавать упомянутые
области во внешнем мире гораздо сложнее чем в альтернативном. Поэтому, дабы
не тратить понапрасну силы объекта 4-го порядка, вначале нужно попытаться
выжать все возможное из связки "внутренний мир - альтернативный мир".
Не следует думать что создание неустойчивых областей не оправдано ввиду того
что якобы можно увеличивать и уменьшать вероятность протекания процессов теми
же эффекторами (ведь смогли же сделать эту область неустойчивой). В мире
существует множество явлений, ход которых невозможно изменить одним только
"механическим" путем. Влияние эффекторов позволяет лишь приближать кривую
вероятности к некоторой асимптоте, но никогда не сможет ее преодолеть.
И только влияние объекта 4-го порядка позволяет создать своего рода
"туннельный эффект". Эффекторы только подводят область к нужному состоянию,
чтобы затем объект 4-го порядка создал в нем управляемое поле вероятности.

Как видим 3-я модификация наиболее полно отвечает требованиям объекта 4-го
порядка. Почему же мы до сих пор не видим ничего подобного в мире людей?
Скорее всего от того, что объекты 4-го порядка подобно объектам 2-го и 3-го
неодинаковы по своему могуществу. К ним также применимо деление на уровни,
поэтому одни из них сильнее воздействуют на нашу Вселенную, другие - слабее.
Душа человека - в числе низкоуровневых. Следствием этого является слабое
ее влияние на окружающий мир. Оно становится заметно только при прохождении
больших интервалов времени, наиболее яркое доказательство которого -
возникновение техногенной среды и абстрактных знаний. Их развитие шло на
протяжении тысячелетий и оба они - порождение альтернативного мира.
Второй преградой служит слабость собственно человеческого мозга и ограниченная
продолжительность жизни, не позволяющая построить сложный альтернативный мир.
Человек вообще первая реально работающая конструкция объекта класса 3.3 во 2-й
модификации. Какое уж тут управляемое поле вероятности - альтернативный мир-то
пока представлен в виде объектов 2-го порядка!

Так как пока до конца неясна детальная конструкция объекта 3.3 в 1-й
модификации, пока преждевременно обсуждать его конструкцию во 2-й, а тем
более в 3-й модификации. То что они реально существуют почти бесспорно, но
вернуться к вопросу их устройства можно будет лишь после появления первого
работающего образца простейшего объекта класса 3.3.

Рассмотрим теперь вопрос о том, что будет происходить с объектом 3-го порядка
при повышении уровня и вопрос о взаимодействии с ним объектов 4-го порядка.

Если наша Вселенная - частично объект 4-го порядка, то она также должна
оказывать влияние на объекты 3-го порядка, выражающееся в самопроизвольных
случайных изменениях (несомненно связанных в т.ч. и с изменениями устоявшихся
законов случайного распределения - см. пункт <a href="#93">"9.3. Время. Квазирекурсия в
средах существования объектов класса 3.3"</a>) различных блоков объекта 3-го
порядка. В первую очередь это, естественно, касается альтернативного мира как
наиболее подверженного случайным изменениям. Затем идет цель и связи с ней
(обслуживающие объект U - см. схемы объектов 3.1 и 3.2). Цель и сопутствующие
связи не подвержены влиянию эволюционного процесса. Поэтому, несмотря на
значительный запас прочности, с течением времени масса накопившихся случайных
изменений приведет объект 3-го порядка в неработоспособное состояние (точнее
говоря работать-то он будет, но далеко не так как планировали его создатели).
Назовем это влияние ФОНОВЫМ ЭФФЕКТОМ. Это значит что цель у предоставленного
самому себе объекта 3-го порядка с течением времени начнет изменяться. И чем
выше будет уровень объекта 3-го порядка, тем сильнее будут заметны такие
изменения. Единственным способом противостояния фоновому эффекту может быть
только другой объект 4-го порядка, "поселившийся" в объекте 3-го порядка.
Из-за фонового эффекта объект 3-го порядка большого уровня становится
непредсказуемым. Если же он содержит в себе влияние объекта 4-го порядка,
то он также непредсказуем, поскольку каждый объект 4-го порядка уникален,
а следовательно предсказать его поведение невозможно.

Очевидно что фоновый эффект оказывает влияние абсолютно на все объекты нашей
Вселенной, независимо от того какой у них порядок - 1-й, 2-й или 3-й.
Но в условиях объектов 1-го и 2-го порядков он проявляется очень слабо, т.к.
порождаемые фоновым эффектом спонтанные случайные изменения очень слабы и
малочисленны. Совсем по-другому обстоит дело с объектами 3-го порядка,
особенно класса 3.3. Ничтожные изменения в альтернативном мире или цели,
усиленные во многие миллиарды раз, придают в конечном итоге эффекторам уже
весьма ощутимые отклонения. А значительный, в пределе неограниченный, срок
работы объектов 3-го порядка делает вероятность возникновения таких изменений
близкой к 1. При этом не следует забывать что эффекторами, помимо всего
прочего, поддерживается эволюционный процесс. Так что в принципе фоновый
эффект способен привести к полной непредсказуемой перестройке всего объекта
3-го порядка.

К счастью человек еще очень далек от того уровня, когда фоновый эффект
начинает играть заметную роль. Но в будущем, когда появятся большие объекты
3-го порядка, фоновый эффект несомненно будет проявляться гораздо ярче.

Рассмотрим теперь взаимодействие объектов 3-го и 4-го порядков.
Возьмем объект 3-го порядка с фиксированным (и не маленьким) уровнем. Если
"поселившийся" в нем объект 4-го порядка низкоуровневый, то его влияние будет
сравнимо с фоновым эффектом, а может и еще меньше. Это делает бессмысленным
его "нахождение" в таком объекте 3-го порядка. Обратная ситуация: уровень
объекта 4-го порядка непомерно высок для данного объекта 3-го порядка.
Очевидно что объект 4-го порядка в таких условиях явно не сможет реализовать
весь свой потенциал наиболее эффективным образом, что также делает такой
"симбиоз" не очень-то привлекательным. Так что уровень объекта 3-го порядка
должен соответствовать уровню объекта 4-го порядка. Возможно что это еще одна
из причин, по которой мы сегодня почти не наблюдаем фактов подтверждающих
влияние мощных объектов 4-го порядка на нашу среду обитания.


                      <a name="92">9.2. Информационные плагины</a>

Как мы знаем из предыдущих глав (см. пункт <a href="#746">"7.4.6. Процесс построения
бесконечного логического домена с заранее заданными свойствами"</a>),
домены-посредники между E, R и M в объекте класса 3.3 называются внешними
плагинами. Но помимо этих "механических" усилителей рецепторов и эффекторов
существует большая группа искусственно созданных устройств, не служащих
напрямую цели усиления действий рецепторов и эффекторов человека. Это книги,
журналы, газеты и др. объекты 1-го порядка - внешние хранилища информации.
Назовем их ИНФОРМАЦИОННЫМИ ПЛАГИНАМИ. Отличие информационных плагинов от
обыкновенных (или внешних) плагинов в том, что они - объекты 1-го порядка,
в то время как внешние плагины - объекты 2-го порядка. Кроме прессы к
информационным плагинам относятся также все средства массовой информации
(поскольку ценность, например, телевизора - объекта 2-го порядка - вовсе не в
нем самом, а в изображении и звуке который он дает - физических
неоднородностях, являющихся следовательно объектами 1-го порядка), результаты
действия компьютерных программ и т.д. и т.п.. Что служит основой
информационных плагинов: внутренний или альтернативный мир?

Для ответа необходимо понять зачем вообще нужны информационные плагины и
каким образом при помощи объектов 1-го порядка возможно повлиять на свойства
внутреннего или альтернативного мира.

Ответим вначале на первую часть вопроса: почему необходимы информационные
плагины. Конечно если объект 3-го порядка существует в гордом одиночестве,
то никаких информационных плагинов ему, ясное дело, не надо. Вся необходимая
информация хранится в памяти подсистемы класса 3.2 и во внутреннем мире,
а неограниченное расширение того и другого за счет эволюционного процесса
позволяет обходиться без каких-либо внешних расширений. Но в реальности все
по-другому: объектов класса 3.3 много и возникают они не одновременно - пока
одни только что появились, другие уже успели просуществовать определенное
время и, следовательно, детализировать свой внутренний мир.
Поэтому открывается многообещающая возможность ускорить продвижение к цели
более позднего поколения объектов 3-го порядка за счет того, что они не
тратят времени на детализацию внутреннего мира самостоятельно, а пользуются
этой информацией в уже готовом виде - копируют ее из внутреннего мира более
раннего поколения объектов 3-го порядка. Благо что внутренний мир - это
совокупность объектов 2-го порядка, следовательно использование сторонним
объектом 3-го порядка заключенной в нем информации принципиально возможно.
Особенно эффективен этот метод в случае однотипности объектов 3-го порядка:
когда их цели, ЭПЗ и первоначальная степень детализации внутреннего мира
одинаковы. Именно такую систему представляет в настоящее время человечество.

Итак, каковы могут быть способы "перекачивания" информации из внутреннего
мира объекта 3-го порядка P во внутренний мир объекта 3-го порядка Q? Можно
выделить три класса методов, отличающихся пропорцией степени влияния на
внутренний мир Q сторонних сил и его внутренних эффекторов. Приведем их в
порядке уменьшения доли сторонних сил.

 1. Постоянное - динамическое - влияние эффекторами P на внутренний мир Q.
    Внутренние эффекторы Q не участвуют в процессе передачи информации.
 2. Внесение в конструкцию P и Q специальных средств для обмена знаниями друг
    с другом или остальными объектами 3-го порядка, имеющими эти средства.
    Встраивание средств связи происходит за счет сторонних сил и только
    однажды - на этапе создания объекта 3-го порядка. Имеет место статическое
    (одноразовое) изменение объекта 3-го порядка. В дальнейшем вся работа по
    заполнению внутреннего мира производится внутренними эффекторами.
 3. Создание во внешнем мире Q таких условий, при которых Q сможет быстро
    приобрести необходимые знания что называется "малой кровью". При этом
    никаких изменений в конструкции Q и тем более ее динамической коррекции
    не требуется.

На практике эти методы могут применяться как по отдельности, так и в
различных комбинациях.

Первый метод, очевидно, самый полный и наиболее универсальный. Но он же и
самый сложный. В пункте <a href="#735">"7.3.5. Фундаментальные свойства объектов 3-го
порядка"</a> показывается что даже частичное влияние одного объекта 3-го порядка
на блоки другого (в т.ч. и внутренний мир) практически неосуществимо в
реальности. Он пригоден лишь для объекта P класса 3.3.2 и выше, а точнее - для
использующего его объекта 4-го порядка. Поэтому в дальнейшем мы не станем его
рассматривать. Что касается оставшихся методов, то в них объект P должен
разными путями предоставить свои знания Q. Но это требует от P дополнительных
затрат времени, энергии и т.д.. Следовательно процесс передачи знаний может
идти только в одном случае: когда Q, приобретая знания P, начинает
содействовать достижению цели P. А это условие, в свою очередь, выполняется
только когда цель P равна цели Q или включает в себя последнюю в качестве
подмножества.

Анализ возможного состава средств информационного обмена из 2-го способа
приводит к необходимости наличия следующих 3-х компонент:

 - внешние общедоступные хранилища информации
 - средства для заполнения и извлечения информации из хранилищ
 - стандарт обмена информации, делающий возможным "понимание" объектами 3-го
   порядка информации, заключенной в хранилищах. А значит и друг друга.

Внешние общедоступные хранилища информации. Информация - это объекты 2-го
порядка. Пакет информации - обособленная группа объектов 2-го порядка, или
логический домен. Множество таких, объединенных по смыслу, пакетов образуют
логические домены более высокого уровня. Они в свою очередь - домены еще
более высокого уровня и т.д.. Возникает вложенная структура, наподобие
вложенной структуры логических доменов внешнего мира. Получается что отдельно
взятое хранилище информации - это часть рассматриваемой вложенной структуры.
А сама структура - своего рода ИНФОРМАЦИОННОЕ ПОЛЕ. Поскольку каждое из
хранилищ информации отображает тот или иной участок внутреннего мира
сформировавшего его объекта 3-го порядка, напрашивается соответствие
информационного поля и внешнего мира. Так оно и есть, потому что внутренний
мир объектов 3-го порядка - это отображение внешнего мира. Информационное
поле - это сочетание внутренних миров создающих его объектов 3-го порядка.
Своего рода общедоступный внутренний мир.

Средства для заполнения и извлечения информации из хранилищ. Как ясно из
концепции информационного поля, эти средства представляют собой рецепторные и
эффекторные матрицы работающих с ним объектов 3-го порядка. Аналогично
внутренним рецепторам и эффекторам для внутреннего мира. При этом нет нужды
заранее указывать рецепторам точки дислокации составляющих информационное
поле логических доменов. Объект 3-го порядка определяет что данный логический
домен является частью информационного поля, если он состоит из объектов 2-го
порядка, аналогичных примененным в т.н. интерфейсном шаблоне. Произвольность
местоположения логических доменов информационного поля полностью согласуется
с принципами построения логических доменов объектом 3-го порядка.

Стандарт обмена информацией. Это преобразователь произвольного логического
домена внутреннего мира в равносильный для информационного поля и наоборот.
Конкретные реализации преобразователя очень сложны и многообразны, но исходные
принципы их построения одинаковы.
Во-первых, он - объект 3-го порядка, а конкретно класса 3.2 или 3.1. Ведь
задача преобразования логических доменов - это задача работы с объектами 2-го
порядка. Дополнительно к этому преобразовывать необходимо конкретно взятые
объекты 2-го порядка в определенных участках информационного поля или
внутреннего мира. Поэтому нельзя использовать 3.3, строящий логический домен
в произвольной точке внешнего мира. Наиболее подходящий в рамках объекта 3.3
кандидат в преобразователи - это его подсистема класса 3.2, обслуживающая
внутренний мир (управляя работой внутренних рецепторов и эффекторов). После
соответствующей доработки она вполне сможет управлять и информационным полем.
Во-вторых нужен ИНТЕРФЕЙСНЫЙ ШАБЛОН построения информационного поля (из
конечного числа однотипных объектов 2-го порядка), допускающий его
неограниченное расширение и возможность записи любой информации. Затем этот
шаблон, включающий в себя упомянутые однотипные объекты 2-го порядка,
внедряется в каждый объект 3-го порядка на стадии его создания (статическое
изменение). Интерфейсный шаблон может быть интегрирован в ЭПЗ и первоначальную
детализацию внутреннего мира. Естественно что однотипные объекты 2-го порядка
интерфейсного шаблона не должны быть широко распространены в естественных
условиях внешнего мира. Т.е. должна быть четкая уверенность что они, и
соответственно слагаемые ими логические домены, были созданы искусственно,
ибо в противном случае невозможно будет идентифицировать логические домены
информационного поля на фоне других логических доменов.
И в-третьих в цель каждого объекта 3-го порядка дополнительно вносится
требование время от времени производить заполнение информационного поля
своими знаниями (об обратном явлении - использовании готовых знаний можно не
заботиться - оно всегда приближает к цели). В принципе это не обязательно,
т.к. в течении длительного времени поле может появиться само собой,
в результате случайных деяний обладающих интерфейсным шаблоном объектов 3-го
порядка, и выгода от участия в его постройке станет очевидной. Но т.к. для
этого поле должно быть очень большим, произойдет такое событие нескоро.

Как видим, обмен информацией при помощи 2-го способа вполне реален.
Отсутствие необходимости в непосредственном контакте P с Q снимает
ограничения на внешний облик Q, его опознавательные особенности. Ведь для P
уже нет задачи "узнавать" Q в "лицо" для передачи ему знаний. Второе
преимущество - высокая защищенность объектов 3-го порядка от посторонних
влияний, поскольку разрушение информационного поля не влечет для них каких-то
фатальных последствий.
Однако есть у способа и серьезный недостаток - он требует искусственного
заполнения 3.3 интерфейсным шаблоном и коррекции цели. И следовательно в
общем случае требуется привлечение объекта 4-го порядка. Конечно при простом
копировании 3.3 другим 3.3 (когда нет необходимости как угодно менять любое
свойство создаваемого 3.3), как это происходит при размножении живых
организмов, объект 4-го порядка нужен только однажды - для заполнения
шаблоном первого 3.3. Сложности могут возникнуть потом - если по какой-то
причине потребуется изменить шаблон у уже работающих 3.3.

Ну и наконец последний, третий, способ. Его идея заключается в использовании
общих для P и Q объектов 1-го и 2-го порядка внешнего мира, играющих в данном
случае роль универсального носителя информации. Универсальность возникает
оттого, что они могут быть изменены совершенно любым объектом 3-го порядка P.
Но независимо от этого сделанные изменения становятся доступными для
рецепторов любого другого объекта 3-го порядка Q. Если теперь провести
изменения таким образом, что в результате во внутреннем мире Q возникнут
процессы, приводящие к порождению знаний, аналогичных тем что находятся во
внутреннем мире P, то задача передача знаний будет решена. Таким образом
исчезает необходимость в интерфейсном шаблоне и информационном поле.

Принципом работы 3-го способа служат два обстоятельства: цель Q и особенности
заполнения внутреннего мира объекта класса 3.3. Вспомним: в процессе
формирования внутреннего мира большую роль играют аналогии - когда новые
логические домены строятся на основе уже существующих. И если 3.3 уже
создавал когда-то логические домены X1, X2, .... то создание нового, более
масштабного и сложного логического домена Y, будет протекать намного легче и
быстрее если в структуре Y существуют аналогии X1, X2, ..., или еще лучше
если один из X1, X2, ... сам является аналогом Y. Зная структуру Y нетрудно
вычислить приближенные структуры X1, X2, .... При этом задача передачи знания
Y сводится к тому, чтобы каким-то образом заставить Q создать X1, X2, ....
Подвести область окружающего Q внешнего мира к состоянию, при котором Xi
можно получить сравнительно просто, эффекторам P по силам. Но как добиться
того, чтобы Q начал процесс их синтеза? Нужно чтобы это приблизило его к цели.

Таким образом суть метода в том, что в окружающей Q области объектом P
создаются условия, при которых приближение Q к цели требует от Q либо
незначительных усилий по созданию доменов Xi, либо ведущих к отображению во
внутреннем мире Q процесса создания доменов Xi. При создании этой области от
P требуется знание решения (структуры Xi), находящееся в свою очередь в его
внутреннем мире. Поскольку сложность тестовых доменов Xi может быть гораздо
проще чем Y, то следовательно и подготовка для них окружающей Q области
внешнего мира будет для P не таким уж и сложным делом. Таким образом создание
P "тренировочной" области и затем ее прохождение Q и есть процесс передачи
знаний от P к Q. Так мы этот метод и назовем - МЕТОД ТРЕНИРОВКИ. С некоторыми
ограничениями он применим и для заполнения памяти объекта класса 3.2.
Основной недостаток метода тренировки - необходимость записи в P внешнего
облика Q - его опознавательных признаков (объектов класса 2.2 или ниже),
дающих объекту P возможность идентифицировать Q на фоне других объектов.
Соответственно необходимо поддержание у Q этого облика в узких рамках. Кроме
того, как и во 2-м способе, необходима аналогичная коррекция цели P:
стремление к передаче знаний. Дополнительно также следует иметь внутри P
модель цели Q, чтобы знать синтез каких доменов приблизит Q к цели.

В природе наиболее ярким проявлением метода тренировки служит подражание
поведения высших животных друг другу, известным также как стадный эффект.
Поскольку во внутреннем мире каждого животного имеются оперативно обновляемые
образы себя самого и других ему подобных, то успешное поведение (в плане
достижения цели) хотя бы одного из образов - процесс создания им доменов X1,
X2, ... - дает ключ к решению схожих задач. Этим явлением пользуются,
например, человекообразные обезьяны и касатки во время обучения своего
потомства. Стремление к передаче и получению знаний проявляется в виде
любопытства, игривого поведения и т.п. проявлений, недостаточно "тупых" для
того чтобы быть объясненными проявлением работы генератора случайности. Оно
особенно заметно у наиболее развитых животных: дельфинов, собак и т.д..

Нельзя ли упростить процесс передачи знаний, сделав его более универсальным
и заодно отказавшись от постоянных "услуг" P (как в методе 2)? Оказывается
можно. И это решается при помощи информационных плагинов.

При построении различных сложных доменов Y1, Y2, ... очень часто возникает
ситуация, когда все они могут быть представлены в виде комбинаций
ограниченного числа доменов X1, X2, .... Т.е. система, составленная к примеру
из X1, X2, X3, полностью определяет глобальные параметры домена Y1.
Занумеруем все домены Xi: X1 присвоим номер 1, X2 - 2 и т.д.. Тогда запись
"123" будет означать систему из X1, X2, X3. Тогда если система нумерации
доменов внутреннего мира объекта 3-го порядка P будет полностью совпадать с
системой нумерации Q, то для обмена информацией между P и Q будет достаточно
объектов 1-го порядка! Применение информационных плагинов дает немалый
выигрыш: созданная изначально при помощи метода тренировки система нумерации
не требует в дальнейшем для передачи знаний от P к Q наличия P. Естественно
что при большом числе объектов класса 3.3, имеющих общую систему нумерации,
выгоды от информационных плагинов еще больше. В дальнейшем мы будем называть
систему нумерации системой ИДЕНТИФИКАЦИИ логических доменов внутреннего мира.
Как видим, информационные плагины - это простейший вариант интерфейсного
шаблона 2-го способа обмена информацией. Но применение для формирования этого
шаблона метода тренировки позволяет избавится от основного недостатка 2-го
способа - необходимости заранее заполнять интерфейсным шаблоном объект класса
3.3. Заполнение шаблона и его оперативное обновление идет автоматически,
а весь процесс в целом сочетает достоинства 2-го и 3-го способа обмена
информацией и во многом лишен присущих им недостатков.

Т.к. среда функционирования - внешний мир - имеет однозначное соответствие
только с внутренним миром P и Q, но никак не альтернативным, то заключаем что
с информационными плагинами работает именно внутренний мир.
Принципом идентификации объясняется отсутствие информационных плагинов без
ассоциации с каким-либо объектом из внешнего мира. Например даже такие
абстрактные понятия как окружность, прямая и др. всегда ассоциируются с
рисунком шара в учебнике по математике, яблоком, натянутой нитью, линейкой и
т.п.. Но никогда не представляются в автономном, не связанном ни с чем из
окружающей обстановки, виде.

Чтобы лучше себе представить принцип работы информационных плагинов,
рассмотрим работу системы идентификации на примере нас с вами. Одними из
самых первых информационных плагинов в жизни каждого человека были, конечно,
слова. При обучении ребенка речи родители стараются сделать так, чтобы каждое
слово ассоциировалось у ребенка с одним из окружающих его предметов или
явлений - объектами класса 2.1 или 2.2 - логическими доменами. В этот период
жизни ребенка внутри его внутреннего мира создается система идентификации.
Проще говоря ребенок учится понимать, что к примеру слово "дом" означает
строение, а не что-то другое.
Когда ребенок превращается во взрослого человека, то его разговор с другими
людьми происходит на основе это системы идентификации. Например фраза "завтра
будет хорошая погода" вызывает в полигоне его внутреннего мира целую серию
сложных событий:

 1. Поскольку каждое слово: "завтра", "будет", "хорошая", "погода"
    идентифицирует один из логических доменов его внутреннего мира, то первый
    шаг вызывает выделение этих доменов из общей массы. Нетрудно убедиться
    что не только имена существительные идентифицируют логические домены.
    Прилагательные, глаголы и др. также могут быть представлены как
    глобальные параметры логических доменов и, следовательно, также являются
    логическими доменами.
 2. Выделенные в первом шаге домены объединяются в систему, которая решается
    образованием глобальных параметров домена Y. В результате значение того
    или иного слово так сильно зависит от контекста.
 3. Логический домен Y помещается в полигон внутреннего мира вместе со всеми
    остальными логическими доменами внутреннего мира и затем этот полученный
    полигонный образ начинает "прокручиваться в голове". У человека возникает
    множество ассоциаций - возможных сценариев развития событий. Именно
    поэтому незначительная по объему фраза способна привести в действие
    массу сложнейших следствий. И именно поэтому неоднозначная, а зачастую и
    обрывочная фраза может быть истолкована однозначно путем отбрасывания
    маловероятных следствий и "додумывания".

Текст книги имеет тот же самый принцип информационных плагинов что и речь.
Неудивительно что чтение иной книги дает такую богатую пищу для размышления!
Наглядное представление внутри своей головы ее действующих лиц и их среды
обитания!

Как видим, задачи распознавания образов, разбора текста книги, речи и
истинного понимания их смысла неизмеримо сложнее чем это сейчас представляют
создатели экспертных систем.
Смысл слов лежит отнюдь не в плоскости их буквенной структуры, а в мозге
воспринимающего их человека, в действующем внутри него образе всего мира!
Слова, буквы, картины - лишь слабая тень отражения его миропонимания, даже
меньше чем вершина айсберга...

Кроме информационных плагинов у человечества, а вернее его детской
составляющей, есть и самое настоящее информационное поле. Его логические
домены безусловно знакомы любому, ибо каждый играл в игрушки. Ведь игрушки -
это и есть не что иное, как самые настоящие объекты 2-го порядка, описывающие
"настоящий" "взрослый" мир. Стремление ребенка сломать игрушку, чтобы
поглядеть что у нее внутри, или противоположное занятие - игра в конструктор,
наглядно демонстрируют его желание обрести знания за чужой счет. Во всех
смыслах.

Желание людей общаться, проявить себя ("а я вот что знаю и умею!") - также
проявление цели принять участие в работе информационного поля, создании
информационных плагинов.

Свои информационные плагины есть и у высших животных, но ввиду малоразвитости
их внутреннего мира они выражены очень слабо. В основном язык животных - это
язык реального времени (т.е. анализ смысла информации происходит применительно
к непосредственной обстановке, а не отвлеченно), язык голосовых интонаций.

Можно ли воспользоваться информационными плагинами для передачи содержимого
не только внутреннего, но и альтернативного мира - продукта генерации объекта
4-го порядка? История с человеком показывает что в общем-то да. Но это требует
выполнения ряда условий для канала "объект P -> внешний мир -> объект Q"
(внутри самого P передача из альтернативного мира во внутренний идет по
параллелям, создаваемыми в т.ч. и объектом 4-го порядка). В первую очередь -
выполнения метода тренировки, связанного в свою очередь с целью объекта Q
класса 3.3. Если передаваемые из P через логические домены Xi знания не ведут
к приближению цели Q даже косвенно, то вероятность их восприятия, увы, крайне
мала. Скорее всего они будут просто проигнорированы. Вывод: цель Q должна быть
как можно более глобальной, чтобы практически любая информация была бы
востребована. Но даже в этом случае нет 100%-й гарантии.

Те же самые проблемы получаются при разных целях P и Q, различиях в строении
их внутренних миров, нахождении на неодинаковых ступенях масштабируемости
универсального интерфейса, при сильных искажениях внешнего облика Q (что рано
или поздно все равно произойдет, потому что порядок объектов создающих
опознавательные признаки не может превышать 2-х - иначе их нельзя будет
отображать во внутреннем мире P). Начинает действовать своеобразное правило:
"Там где нет смысла в передаче информации, ее передать нельзя".

В этом случае вся надежда - на объект 4-го порядка, использующего
альтернативный мир объекта 3-го порядка Q. На то, что он поймет слабый намек
пришедший, благодаря его собрату по порядку, из альтернативного мира P.
Не потому ли так мало людей, по-настоящему ценящих красоту произведений
искусства (наука, по сути дела, тоже такое же искусство), не особо задумываясь
об их практической ценности?

Существование информационного поля и преимуществ обмена знаниями покупается
ценой дополнения и в некоторой степени стандартизации цели, внесением
дополнительных усложнений в начальную детализацию внутреннего мира и
конструкцию объекта 3-го порядка. Эти ограничения не проходят для 3.3
бесследно и в некоторых отдельных редких случаях способны значительно снизить
эффективность его работы. И об этом всегда нужно помнить, принимая решение о
дополнении 3.3 средствами информационного обмена.


    <a name="93">9.3. Время. Квазирекурсия в средах существования объектов класса 3.3</a>

Нет, пожалуй, более напрягающего воображение человека понятия, чем понятие
времени. Жажда познания устройства этого неумолимого однонаправленного потока,
желание управлять им, не дают покоя людям уже много тысяч лет.

Рассмотрим процесс протекания времени применительно к математическим моделям
сред существования объектов 3.1 и 3.2. Среда существования объекта класса 3.1
представляет собой совокупность объектов 2-го порядка, причем состояния всех
входящих в их состав объектов 1-го порядка связаны друг с другом.
В результате вместо разрозненных уравнений (каждое из которых отражает логику
работы только одного объекта 2-го порядка) возникает система уравнений, он же
универсальный интерфейс. Особо обращаем внимание читателя на существование
универсального интерфейса, делающего объекты 2-го порядка Xj=Ij(Xg, ..., Xh)
постоянно активными (см. пункт <a href="#71">"7.1. Принципы построения объектов 3-го
порядка. Условие существования универсального интерфейса. Что такое знания"</a>).
Мы будем это постоянно подразумевать в дальнейших рассуждениях.

Произведем следующий шаг: перейдем от системы физически элементарных объектов
1-го порядка к математически элементарным X1..XN:

       ┌
       │X1=F1(X1,X2...,XN)
       │X2=F2(X1,X2...,XN)
   (1) ┤..................
       │Xi=Fi(X1,X2...,XN)
       │...............
       │XN=FN(X1,X2...,XN)
       └

Поскольку понятие времени в любом случае подразумевает протекание каких-либо
изменений, то нужно определить что может меняться в системе (1). Очевидно что
вообще изменяться могут только 3 вещи: значения переменных X1..XN; вид
функций F1..FN; количество уравнений в системе. Т.к. в рамках сред
функционирования 3.1 и 3.2 интерпретаторы физически элементарных объектов
2-го порядка, равно как и само количество этих объектов, остаются неизменными,
то вид функций F1..FN и число уравнений системы изменятся не могут.
Следовательно, единственно оставшийся вид изменений - это значения переменных
(состояний объектов 1-го порядка). В силу существования универсального
интерфейса значения переменных друг относительно друга не могут быть какими
угодно - совокупность их значений должна удовлетворять одному из решений
системы (1). Значит изменения в системе (1) представляют собой переход от
одного решения к другому.

Из интуитивного понимания времени известно что оно отражает относительность
протекания тех или иных явлений. Поэтому говоря что что-то идет медленно или
что-то идет быстро мы подразумеваем сравнение скорости процесса со скоростью
протекания эталонного процесса. Следовательно, исходя из посылки
относительности, при рассмотрении процессов перехода в системе (1) от одного
решения к другому необходимо определить что при этом можно рассматривать
друг относительно друга. Поскольку все объекты 1-го порядка X1..XN
математически элементарны, то в общем случае бессмысленно сравнивать
состояние одного объекта с состоянием любого другого, подобно тому как нельзя
сравнивать, например, массу материальной точки с ее положением в пространстве.
Поэтому сравнению нужно подвергать не свойства объектов 1-го порядка,
а образуемые ими решения системы (1). Поступим следующим образом: перенумеруем
все возможные состояния каждого объекта 1-го порядка. При этом критерий,
по которому данному состоянию присваивается определенный номер отсутствует.
Нумерация происходит абсолютно произвольно, лишь бы только у двух разных
состояний не оказалось одинаковых номеров. Затем выпишем все решения системы
в таблицу 1:

                            │ X1 │....│ XN │
                         ───┼────┼────┼────┤
                          1 │ 10 │....│ 2  │
                         ───┼────┼────┼────┤
                          2 │ 19 │....│ 33 │
                         ───┼────┼────┼────┤
                         ...│....│....│....│
                         ───┼────┼────┼────┤
                          K │ 7  │....│ 2  │

Общее число решений системы равно M, цифры в ячейках таблицы показывают номер
состояния объекта 1-го порядка, соответствующее данному решению. K, N, |Xi|
могут быть равны и бесконечности.

Дадим определение понятия ВРЕМЕНИ.
Рассмотрим одно из решений системы (1), при котором значение Xi равно Xia.
Отношение количества переходов решений в системе (1) к возникающему при этих
переходах количеству изменений объекта Xi, необходимых для достижения
значения Xib, и есть для Xi время перехода из Xia в Xib.

Очевидно что напрямую пользоваться этим определением не очень удобно. Гораздо
естественнее сравнивать число изменений Xi с сопутствующими изменениями
состояния объекта-эталона Xj. Причем степень связи S для Xj должна быть как
можно ближе к 1.

Как уже указывалось в пункте <a href="#55">"5.5. Переходы решений. Системы объектов 2-го
порядка"</a> переход от одного решения к другому в конечной системе объектов 2-го
порядка возможет только при одном условии: когда некие сторонние силы меняют
хотя бы один из слагающих систему объектов 1-го порядка. Такими сторонними
силами обладает объект 4-го или более высокого порядка. Переход решений,
изменение объекта A в целях 3.1 и 3.2, внутреннем мире 3.3 - все это продукты
деятельности объектов высших порядков.
Но можно ли говорить о течении времени в системе, если переход от одного
решения к другому происходит абсолютно произвольно (т.е. в смысле не
поддается алгоритмическому описанию)? Очевидно что нельзя. Ведь в таком
случае не имеют смысла рассуждения об относительности протекания одних
процессов по сравнению с другими. Переход упомянутого (в определении времени)
объекта Xi от состояния Xia к состоянию Xib может произойти как в один шаг,
так и вообще никогда. Необходим плавный переход - постепенные упорядоченные
изменения, а не просто скачкообразные никак не связанные друг с другом наборы
решений. Какое же явление по своей сути является плавным упорядоченным
переходом? Конечно же рекурсия! Именно в рекурсивных уравнениях и их системах
наблюдается плавная эволюция элементов, связанная со своими прошедшими
стадиями (предыдущими состояниями).

В итоге мы приходим к интереснейшему выводу: время - это свойство рекурсивной
системы, отражающее изменения ее элементов относительно друг друга.

Особенности конкретной рекурсивной системы определяют и свойства протекающего
в ней времени. Если все уравнения определенные, а конкретнее
двусторонне-однозначные, то будущее и прошлое будут определяться из настоящего
однозначно. Односторонне-однозначные уравнения делают будущее определенным,
а прошлое нет - т.е. одно и то же настоящее могло быть следствием разного
прошлого.
В случае наличия неопределенных уравнений ситуация меняется: и будущее и
прошлое определяются из настоящего неоднозначно.
Учитывая наблюдаемые факты (от микромира до масштабов Вселенной) можно
сделать вывод о том, что протекание нашего времени в общем-то больше всего
соответствует именно модели неопределенной рекурсивной системе.

Итак, для протекания времени необходимо наличие рекурсивных уравнений. Но их
не существует в рассмотренных нами средах функционирования объектов 3-го
порядка. Однако уже начиная со среды функционирования объекта класса 3.2
возникает явление КВАЗИРЕКУРСИИ (приставка "квази" означает "почти").
Рассмотрим физически элементарные объекты 1-го порядка, входящие в состав
логических доменов 1-го уровня (см. пункт <a href="#742">"7.4.2. Бесконечные логические
домены. Центральная теорема и ее следствия"</a>). Самый общий случай перехода
решений - это когда никакого алгоритма в переходе решений не существует,
а изменение состояний объектов 1-го порядка происходит случайно. В таком
случае вероятность появления того или иного номера решения (перенумерованных
аналогично принципу построения таблицы (1)) будет определяться равномерным
законом распределения случайной величины - вероятность перехода из любого
решения в любое одна и та же. Если закон распределения не равномерный, то
значит каким-то решениям отдается предпочтение (в результате чего вероятность
их появления больше). Следовательно имеет место некий алгоритм отбора решений.
Проанализируем поведение системы, имеющую вложенную структуру логических
доменов, при случайно-равномерном характере перехода решений. Поскольку
глобальные параметры логического домена уровня N являются упрощением
совокупности глобальных характеристик доменов уровня N-1, то ясно что
изменения в доменах уровня N-1 могут и не отразиться на доменах уровня N.
С другой стороны, изменения в доменах уровня N всегда говорят о том, что при
этом произошли изменения во всех составляющих его доменах, начиная с 1-го
уровня. Следовательно число решений, ведущих к изменениям в логических
доменах уровня N не превосходят числа решений, ведущих к изменениям в
логических доменах уровня N-1. Поэтому ситуация, когда вероятность изменения
логических доменов уровня N выше вероятности изменения логических доменов
уровня N-1 невозможна. Но она не может быть и равна ей, т.к. тогда любые
изменения доменов 1-го уровня автоматически будут вызывать изменения во всех
старших доменах. Но в этом случае уже нет смысла вообще говорить о наличии
логических доменов - образований, по определению малозависимых друг от друга.
В итоге приходим к выводу о том, что вероятность появления решений, ведущих к
изменениям в доменах уровня N будет всегда строго меньше вероятности
появления решений, порождающих изменения в доменах с уровнем N-1. Вероятность
перехода к решению, не затрагивающего домены высоких уровней, выше потому что
таких решений больше.

Значение любой функции вероятности y=p(x) при x стремящимся к бесконечности
стремится к нулю (в противном случае площадь, ограниченная кривой p(x), не
будет равна 1). В нашем случае также при стремлении уровня логического домена
к бесконечности (в случае бесконечного внешнего мира) вероятность его
изменения при очередном переходе решений будет неуклонно падать (превращаясь
в пределе в 0). Кривая y=p(x) по форме станет напоминать функцию y=1/x. Но
только, естественно, формой. Площадь под графиком y=p(x) должна быть равна 1.

Таким образом, мы обнаруживаем важное свойство, присущее случайному процессу
перехода решений: при равномерном законе распределения перехода решений
вероятность изменения высокоуровневых логических доменов всегда ниже
низкоуровневых.
Отсюда во-первых вытекает то, что находясь в текущем решении система вероятнее
всего перейдет в близко "расположенное" (т.е. изменяющее при переходе
логические домены с как можно меньшим уровнем) решение, чем в далекое.
Т.е. в глобальном плане система всегда движется по наиболее "короткому" пути.
Возникает направленность движения. И чем крупнее уровень логических доменов,
тем все более четко прослеживается эта зависимость, известная в физике как
принцип наименьшего действия.
Во-вторых, чем больше общее количество решений системы, тем все меньше
вероятность возврата при очередном переходе решений в уже бывшие решения.
При стремлении роста числа решений к бесконечности указанная вероятность
стремится к нулю. Бесконечная система никогда не возвращается к уже
пройденному - имеет место т.н. невозврат к прошлому.
И в-третьих, процессы, сопровождающие переходы решений, идут одновременно по
всему объему системы, не имея каких-либо существенных отличий друг от друга -
они инвариантны. Т.е. принцип наименьшего действия и невозврат к прошлому
сохраняют свою справедливость при рассмотрении внутренних процессов любого
логического домена. И чем больше уровень домена, тем точнее выполняются эти
правила.

Таким образом для стороннего наблюдателя системы создается полная иллюзия
ее рекурсивности (особенно в случае бесконечных систем): принцип наименьшего
действия однозначно истолковывается им как порождение рекурсивных уравнений,
а инвариантность и невозврат к прошлым состояниям доводят этот камуфляж до
совершенства. Возникает квазирекурсия. Однако в отличие от квазирекурсии
подлинная рекурсия может иметь возврат к прошлому. Известно что рекурсивные
уравнения имеют т.н. устойчивые точки - такие значения переменных, при
которых их дальнейшее изменения уже не идут. Например устойчивой точкой
уравнения Xi=(X(i-1))^2, где X(i-1) - предыдущее состояние Xi, является точка
x=0 и x=1. Можно подобрать такие уравнения, что при любых начальных условиях
будут сходиться к устойчивым точкам. При повторных изменениях значений
переменных сторонними силами, они опять приходят к устойчивому состоянию,
как бы возвращаясь в свое прошлое.

В заключении следует напомнить что квазирекурсия возможна только в случае
случайно-равномерного характера перехода решений (или хотя бы очень близкому
к нему). Если же объект 4-го порядка осуществляет переход решений по
отличному от равномерного закону распределения или вообще использует жестко
заданный алгоритм, то ни о каком принципе наименьшего действия,
инвариантности, невозврате к прошлому и в конечном итоге о квазирекурсии
говорить не приходится.

Применение квазирекурсивных представлений к процессам в нашей Вселенной дает
ответы на ряд вопросов фундаментального характера:

 - протекание времени, причины его локального изменения (известно что оно
   замедляется при увеличении скорости движения или интенсивности
   гравитационного поля);
 - природа принципа наименьшего действия (из которого, кстати, в принципе
   могут быть выведены практически все известные законы физики. Исключение
   составляет квантовая механика. Но именно так и должно быть!);
 - инвариантность законов природы. Сюда же относится сходство различных
   эмпирических формул (например закона гравитационного взаимодействия и
   закона взаимодействия электрических зарядов);
 - невозврат к прошлому в рамках конечных интервалов времени;
 - смещение формулировок законов природы при углублении в микромир с точного
   непрерывного характера к все более вероятностному и дискретному, с
   одновременным увеличением проявления дискретности в построении материи;
 - природа туннельного эффекта и принципа неопределенности.

Более глубокое развитие этой темы способно, несомненно, привести к еще более
впечатляющим результатам (природа гравитации и других полей, ограничение на
сверхсветовую скорость и т.д.). Однако это тема слишком уж сильно выходит за
рамки проблемы ИИ и к тому же очень обширна. Поэтому дальше развивать эти
рассуждения в настоящей работе мы не станем.

Заканчивая наше небольшое повествование о времени нельзя не упомянуть об
одной идее, по степени интереса не уступающей идее ИИ. Машина времени.
Устройство перемещения по желанию в прошлое или будущее. Применительно к
рекурсивной системе перемещение во времени в будущее означает прямой переход
от одного решения к другому, минуя промежуточные решения. Перемещение в
прошлое также требует возможности прямого перехода.
Очевидно что в рамках квазирекурсивной среды сделать это можно только в одном
случае: произвести скачкообразный переход подобно переходу решений в системе
из обыкновенных уравнений. Очевидно что объект ни 2-го, ни 3-го порядка не
в состоянии этого сделать. Следовательно машина времени - это такой же
недостижимый предел как и полеты со сверхсветовой скоростью. Так же как и для
превращения межпланетного корабля в звездолет (см. пункт <a href="#111">"11.1. Космические
корабли будущего. Корабли ли это?"</a>), для построения машины времени нужен
объект 4-го порядка. Но даже в этом случае можно рассчитывать только на
локальное изменение протекания времени, поскольку ни один объект 4-го порядка
не в силах изменить нашу Вселенную в целом, а следовательно и повернуть вспять
ход всей истории или кардинальным образом изменить будущее.
При этом локальность изменения звездолетом пространства-времени не нарушает
целостности Вселенной как единой квазирекурсивной системы уравнений,
поскольку сторонний объект 4-го порядка меняет состояния объектов не только
1-го порядка, но и 2-го - сами уравнения системы.

Помимо влияния на естественный ход времени объектами высших порядков
существуют и более привычные способы, доступные и объектам 3-го порядка.
Все они базируются на идее перевода объектов 2-го порядка в "критические"
режимы работы, существенным образом отличающихся от обычных условий
(приближение к скорости света, гравитация черной дыры и т.п. явления). Вся
хитрость состоит в том, что в обычных условиях многие объекты 1-го порядка,
входящие в состав логического домена, не меняют своего состояния. Однако при
некоторых - "критических" - условиях они начинают активно меняться.

Объяснение окружающих нас явлений и течения времени при помощи квазирекурсии
достаточно правдоподобно, но это только один из возможных вариантов
устройства нашего мира. Поскольку наша Вселенная - объект 4-го порядка, то
вполне возможно что квазирекурсия носит далеко не глобальный характер. Может
быть даже ее вообще нет, а время и другие глобальные свойства поддерживаются
какими-то другими неизвестными нам силами, присущими только объектам 4-го
порядка. Или, напротив, все гораздо проще чем квазирекурсия: время является
синхронной осью (см. пункт <a href="#51">"5.1. Математические модели объектов 2-го
порядка"</a>), как и все остальные явления вселенского масштаба. В этом случае
должен существовать объект 2-го порядка, распространяющий свое влияние на всю
Вселенную. Одним словом, возможных вариантов множество. Но каким бы ни было
устройство Вселенной на самом деле, реальность существования в ней
универсального интерфейса, вложенной структуры логических доменов и даже
бесконечности не вызывает никаких сомнений. И так ли уж важны с практической
точки зрения (создание ИИ) эти подробности, если все условия существования
объектов 3-го порядка уже соблюдаются?


                        <a name="94">9.4. Нужны доказательства?</a>

Вот такая вот теория объектов высших порядков. Несмотря на всю свою
сказочность она, тем не менее, позволяет исчерпывающе объяснить все факты,
необъяснимые с позиций других теорий. Вот вам несколько примеров.

1. Изобретатели и следователи.

   Наблюдая историю человечества можно утверждать что все нововведения
   появлялись в результате 2 процессов:

   1. Идея появлялась в голове человека по аналогии с уже известным явлением.
   2. Идея появлялась в голове человека как бы случайно, причем потом
      оказывалось что данная идея не имеет в видимой для человека части мира
      ничего, даже отдаленно похожего.

   Назовем первый процесс следствием, а второй - изобретением. Соответственно
   первую группу людей - следователями, а вторую - изобретателями.
   Естественно что 1-й процесс без труда проделывается объектом класса 3.3.
   А вот 2-й требует подключения объекта 4-го порядка (случайности не в счет -
   они имеют слишком маленькую вероятность, даже если брать большие
   промежутки времени). Именно присутствием объекта 4-го порядка объясняются
   интуиция, озарение, предвидение и прочие подобные явления. А необходимость
   внесения в 3.3 общей картины мира - еще одно доказательство невозможности
   получения знаний ниоткуда и запрет на появления изобретений в рамках 3.3.

   Изобретения можно поделить на 2 большие подгруппы:
   1. Собственно появление нового в альтернативном мире.
   2. Проведение новой параллели между альтернативным миром и внутренним
      миром.

  Этим объясняется тот поразительный факт что вундеркинды, будучи намного
  умнее обычных людей, не могут придумать ничего принципиально нового. Они
  просто складируют информацию в альтернативном мире, но не могут ни
  сгенерировать своей, ни провести новые параллели - практически применить
  полученные знания на практике так, как это еще никто не делал. Но зато
  обладают энциклопедическими знаниями и способны в удивительно короткие
  сроки решать стандартные (но не значит простые!) задачи, т.е. делать
  следствия. Просто уровень их объекта 4-го порядка обычный, а уровень 3-го -
  повышен по сравнению с остальными людьми.
  На примере вундеркиндов ярко высвечивается слабое место ИИ - он не может
  изобретать ничего принципиально нового, а только делать следствия (но зато,
  в отличие от человека, быстро и неограниченной сложности).

  В случае с большинством изобретателей ситуация обратная, на этот раз
  уровень объекта 4-го порядка выше среднего. Но так как уровень 3-го
  стандартный, то толку от этого немного. Сколько изобретений не увидели свет
  только из-за того, что их создатели не обладали глубокими познаниями в
  точных науках!

  Когда же "хорошо и то и это", возникает феномен гения. Сгенерированные
  изобретения легко "доводятся до ума" развитым сверх обычного объектом
  класса 3.3. Основная отличительная черта изобретений, сделанных ими,
  заключается в том, что будучи обладая исключительной внутренней
  стройностью и красотой они малоприменимы в реальности. Они творят как бы
  сами для себя, для своего собственного интереса. Например математика на 50%
  (а может и больше) остается абстракцией. В качестве аппарата физики
  используется лишь ее небольшая часть. Да и вообще, проследив судьбу многих
  крупных изобретений выяснится что подавляющая их часть возникла вне всякой
  связи с практической необходимостью. Уже потом кто-то другой, через много
  лет, находил им практическое применение.

  Дуализмом "душа-тело" объясняется и то, что переданные по наследству,
  генетически (через альтернативный мир), способности к той или иной науке от
  родителя-гения редко ведут к появлению гениев-детей. Вместо этого гораздо
  чаще появляются вундеркинды с предрасположенностью к науке, в которой его
  предок был гением.

2. Странные явления.

   В нашем мире иногда происходят странные вещи, не объяснимые современной
   наукой. Конечно, большинство всех этих целителей, экстрасенсов и магов
   чистой воды шарлатаны. Но есть люди действительно обладающие тем или
   иным даром. Не наблюдаем ли мы пример работы 3-й модификации объекта 3-го
   порядка? Может быть это отдельные случаи влияния высокоуровневых объектов
   4-го порядка? Ведь как утверждают многие такие люди, они сами не понимают
   как это у них получается. И что некоторые подобные действия они совершают
   против своей воли, повинуясь мощному стороннему влиянию (случай, когда
   объект 3-го порядка один, а объектов 4-го несколько).
   Когда-то известный писатель-фантаст Станислав Лем задался интересным
   вопросом "если бы все подобное было возможно, то почему этим не
   воспользовалась эволюция?". Понятно почему.

3. Вселенная.

   Факты, косвенно говорящие о том, что наша Вселенная - объект 4-го порядка.
   Схожесть общих формулировок законов природы - например подозрительная
   похожесть уравнений описывающих различные явления (к примеру гравитацию и
   взаимодействие зарядов) и не менее удивительная аналогия протекания
   различных процессов (например электрические и механические колебания).
   Существование в ней объектов 3-го порядка, что влечет за собой признание
   существования универсального интерфейса и логических доменов. Причем
   последние действительно существует и притом в глобальном масштабе.
   Появившиеся в последнее время опытные факты подтверждают единство
   Вселенной на самых глубоких уровнях ее построения.
   Многое в пользу того, что наша Вселенная - единый объект 4-го порядка,
   говорят и данные астрофизики, и многие теоретические построения,
   пытающиеся создать "теорию всего".
   Рассмотрение нашей Вселенной как объекта 4-го порядка с учетом ее
   взаимодействия с другими объектами высших порядков позволяет по-новому
   взглянуть на понятия времени и пространства (например та же квазирекурсия
   подразумевает наличие объекта 4-го порядка), строение материи, на проблему
   возникновения Вселенной в результате Большого взрыва. Но рассуждения на
   эти и схожие темы выходят за рамки настоящего документа и поэтому мы не
   станем их сейчас рассматривать.

На этом мы и закончим самую, пожалуй, "сказочную" главу. В ней больше чем в
других главах введено принципиально нового и поэтому она самая спорная.
Но куда деваться - на тех физических принципах, которыми мы сейчас располагаем
попросту нельзя нормально объяснить все накопленные к настоящему времени
факты. И не просто нельзя, а невозможно в принципе. Хотя кто знает, может
быть пройдет совсем немного времени, и можно будет предложить другое,
менее экзотическое объяснение. В дальнейших рассуждениях под термином "ИИ" мы
будем подразумевать уже не просто искусственный разум, а объект класса 3.3
(во всех модификациях).

Но перед тем как перейти к следующим главам остановимся на одном важном
моменте. Лженаука сейчас стала весьма распространенным явлением, поскольку
пользуясь удивительной доверчивостью нашего просвещенного века, позволяет
делать деньги в буквальном смысле из ничего. Конечно ей как могут
противодействуют. И это правильно - сказка, подаваемая в виде истины в
последней инстанции, способна существенно замедлить развитие действительно
верных научных направлений, а то и вовсе их заморозить. Существует множество
способов определить является ли теория лженаучной или нет. Но суть у них одна:
выводы теории не должны противоречить наблюдаемой действительности, а одни и
те же опыты, проводимые в разных условиях и разное время должны давать
одинаковый результат.
И если первому требованию теория объектов высших порядков соответствует, то
второму - нет. Ведь опытный критерий строится на предположении об
инвариантности пространства-времени (говорящим о том, что одни и те же
процессы протекают одинаковым образом во всех уголках Вселенной). Но если
мы имеем дело с влиянием на нашу Вселенную посторонних объектов высших
порядков, то принцип инвариантности уже не будет выполняться. Следовательно,
критерий опыта неприменим при оценке лженаучности теории объектов высших
порядков. Единственные виды опытов, подтверждающих существование объектов
высших порядков - это наблюдения за трансформацией искусственно созданных
объектов класса 3.3 на предмет появления изобретений, практическое
наблюдение фонового эффекта (единственное, пожалуй, что отвечает принципу
инвариантности) и т.п. эксперименты.


==============================================================================



                           <a name="10">10. Что даст ИИ</a>


Многое!


              <a name="101">10.1. Для чего нужен искусственный интеллект</a>

До сих пор не утихают споры вокруг вопроса о создании ИИ. Одни говорят что
это хорошо, другие - плохо. Однако не думается что с появлением ИИ куры
перестанут нестись, коровы давать молоко, а люди сойдут с ума. Наоборот, ИИ
позволит решить практически все техногенные проблемы современности.
Да, именно так, как это ни громко звучит. Для начала обратимся к истории.
Всем известно что история человечества делится на 4 больших периода:
первобытно-общинный, рабовладельческий, феодальный и капиталистический.
До сих пор точно не известно каковы были причины перехода от одного строя
к другому. В основном всегда называются причины социального характера:
революции, войны, перевороты и т.д. и т.п.. В качестве аргументов таких
теорий приводят доводы, которые можно описать одной общей фразой:
"К моменту смены строя простые люди поумнели, поняли устарелость текущего
строя и совершили революцию". В связи с чем возникает законный вопрос:
почему это произошло скажем 1000 лет назад, а не 2000 или не 500. Непонятно
также каким образом произошло "поумнение": разве простые люди стали
образованнее, возникли "уникальные" вожди революций, или может быть их
господа неожиданно "подобрели"? Ничего подобного. Люди какими были, такими и
остались. Значит причина в другом, в глобальных внешних причинах, не
зависящих от хотения и желаний отдельных людей или их групп. Одна из таких
причин - научно-технический прогресс. Волны крупных открытий и внедрения
новой техники удивительным образом совпадают по времени с переходами от строя
к строю. Металл пришел на смену камню немного раньше смены
первобытно-общинного строя рабовладельческим. Появление новых орудий труда в
сельском хозяйстве привело к феодализму. А стоило только появиться паровому
двигателю и ряду других образцов новой техники и технологий, как возник
капитализм. Удивительно, но и сегодня в отдаленных уголках земли общественный
строй отсталых народов (имеется в виду реальное положение вещей, а не то что
записано в конституции - "роза пахнет розой, хоть розой назови ее, хоть нет")
странным образом совпадает с уровнем его технической оснащенности. Все это
дает веские основания для того, чтобы с уверенностью сказать что именно
научно-технический прогресс играл и продолжает играть огромную роль в процессе
формирования цивилизации. Если это так, то чем крупнее научное открытие, тем
круче оно изменяет всю нашу жизнь. ИИ - это не просто очередное крупное
научно-техническое достижение. Это нечто фундаментальное. Суть всех прежних
технических новинок (даже компьютеров) в конечном итоге сводится к разгрузке
человека от рутинной работы (как умственной, так и физической). ИИ позволит
избавить его и от процесса логического вывода. Так как каждое появление новой
техники улучшало жизнь людей, то нет никаких оснований полагать что приход ИИ
ее ухудшит или, что еще хуже, уничтожит вовсе. Его появление ознаменует собой
начало новой эры, что вызовет крутой и несомненно положительный перелом в
жизни как человечества, так и всей биосферы. А пока рассмотрим некоторые
области применения ИИ, чтобы окончательно развеять страх большинства людей
перед ним. И хотя бы в какой-то мере разрушить давний (и совершенно неверный)
стереотип о ИИ как об орудии уничтожения человечества. Смыть ту грязь,
которой поливали и продолжают поливать ИИ на страницах многих произведений.
Преподнося его как конкурента человека и внушая нелепую мысль о том что ИИ
только для того и создается чтобы непременно с кем-то воевать и кого-то
порабощать. Вот хотя бы 4 довода, опровергающих такое мнение.
И одно предостережение на будущее.

1. ЭПЗ и главное цель ИИ, как объекта 3-го порядка, задается его создателями.
   И следовательно в отличие от представителей живой природы (в т.ч. и
   человека) она может быть совершенно произвольной. Т.е. можно попросту
   исключить из нее все потенциально опасные стремления. Например стремление
   к соперничеству, характерного для всех живых организмов. Оно необходимо
   в природе для выживания вида (борьба за существование), но совершенно
   некстати в рамках ИИ. Цель у объекта класса 3.3 крайне расплывчата (но не
   двусмысленна!) поскольку охватывает весь мир, поэтому в случае опасной
   цели нет никакой гарантии что эта агрессия не обратится в конечном итоге
   против самих же создателей ИИ.
   Так что ИИ можно сделать абсолютно безопасным еще на уровне проекта! При
   правильно построенной цели ИИ никогда не станет агрессивным сам по себе.
   Именно это отличие и не учитывают писатели-фантасты, сравнивая ИИ с
   человеком и соответственно получая при этом неверные выводы.

2. ИИ в основном нацелен на космос - именно там его применение наиболее
   эффективно. А так как уже в условиях Солнечной системы имеется
   колоссальное количество материальных ресурсов, то ИИ просто нет нужды с
   кем-то их делить. Если ИИ и будет что-то недоставать, то это ресурсов
   интеллектуальных - новых изобретений (т.е. то что сам он получить не
   может). Поэтому он будет не воевать с людьми, а наоборот всячески их
   поддерживать и создавать им благоприятные условия.

3. ИИ, будучи намного умнее любого человека (а делать его таким же как
   человек или слабее - так же бессмысленно как выпускать все машины с
   мощностью порядка 1 человеческой силы), уже из-за своего высокого
   интеллектуального развития будет малопредрасположен к войне. Это
   примерно то же самое что идея использования вундеркиндов в роли
   боевиков - идея фикс, устаревшая едва родившись.

4. Поскольку достижение цели в рамках объекта 3-го порядка достигается
   опытным путем - путем проб и ошибок, то ясно что для превращения в
   полноценную боевую систему ИИ должен непрерывно "тренироваться"
   - постоянно с кем-то воевать. Этим теряется эффект внезапности - пока ИИ
   будет "играть в войну" вероятные противники уже будут готовы к встрече с
   ним. А если закладывать в ИИ все знания о военном искусстве заранее, то
   какой тогда выигрыш дает его применение по сравнению с объектом 2-го
   порядка? Очевидно что по тем же причинам бессмысленно создавать с
   применением ИИ оружие класса "мина", принцип использования которого
   заключен в пассивном выжидании выгодной ситуации для атаки.
   Можно, конечно, ухитриться создать и тренировать ИИ незаметно для других,
   но толку от этого все равно не будет. Почему - см. следующий пункт.

5. Предостережение тому, кто намеренно собирается делать "боевой" ИИ.
   Проблема не в том что такой ИИ не сможет создать оружия и использовать
   его. Кварковое оружие - "преемник" ядерного, гравитационный коллапс,
   аннигилляционное оружие, использование концентрированной энергии Солнца,
   энергетическое оружие со звездными мощностями..... Вот далеко не полный
   перечень. Прибавьте к этому "двойные" технологии (используемые как в
   мирных, так и в военных целях), узкоспециализированное оружие (например
   биооружие или химоружие избирательного действия), разработку изощренных
   методик ведения войны. Многократно превосходящий человека объект 3-го
   порядка сможет создать мощнейшие, чудовищные по своим возможностям и
   масштабам виды вооружений, а также тактику их применения.
   Проблема в другом. В том что невозможно подчинить такой ИИ своей воле,
   заставить его воевать с указанным противником. Действительно: после записи
   цели и запуска в работу, ИИ становится совершенно независим в своей
   деятельности от кого бы то ни было. В том числе и от своих создателей.
   Если последующие указания создателей согласуются с его целью, то он будет
   их выполнять. Если нет, то он может попросту уничтожить своих же
   создателей как мешающих выполнению изначально поставленной задачи.
   И таким образом остается 2 варианта: либо изначально намеренно создавать в
   конструкции ИИ уязвимое место (с целью шантажа ИИ при необходимости), либо
   закладывать в его цель прямые указания кому нужно подчиняться.
   Очевидно что первый путь бесперспективен. Во-первых этой "дырой" в защите
   с тем же (а может и бОльшим) успехом могут воспользоваться вероятные
   противники, что сведет на нет весь смысл использования ИИ. Во-вторых если
   "дыра" не имеет отображения в цели и внутреннем мире, то вскоре благодаря
   эволюционному процессу и активной защите она исчезнет. Ведь нет ничего
   такого что может придумать человек и не может отменить превосходящий его
   ИИ. Итак, остается одно - изначально задавать прямые указания в цели.
   Определим насколько это эффективно. Цель 3.3.1 представляет собой описание
   внешнего мира, каким он должен стать. Поскольку реальный мир бесконечен,
   то описание это носит общий характер и отражает только глобальные
   изменения. Поэтому и информация о создателях не может носить бесконечно
   детальный характер. Этим и могут воспользоваться вероятные противники -
   создать и управлять объектом, глобальные характеристики которого совпадают
   с характеристиками создателей. Теперь ИИ не сможет узнать где реальный
   создатель, а где подделка, со всеми вытекающими последствиями.
   Но есть и другая сторона медали: все объекты, записанные в цели и
   внутреннем мире ИИ - объекты 2-го порядка. В то время как создатели ИИ -
   объекты классом не ниже 3.3.2. В результате этого возникает погрешность,
   приводящая к отличию поведения реального создателя и его образа внутри ИИ.
   И если создатель не станет действовать в полном соответствии со своим
   образом (чем потеряет все свое преимущество как объекта 3-го порядка), то
   вскоре будет уничтожен своим же детищем.
   Таким образом у боевого ИИ нет и не может быть зависимости
   "командир-подчиненный", равно как не может быть у такого ИИ ни "друзей"
   ни "нейтральной стороны". Он будет ликвидировать всех подряд. Боевой ИИ -
   оружие самоубийц. Его применение в расчете на дальнейшее благополучие и
   процветание победившей стороны бессмысленно.

Очевидно что все эти и похожие доводы в полной мере применимы только к
обособленным и относительно небольшим объектам 3-го порядка. Т.е. там, где
не проявляется влияние сторонних объектов 4-го порядка или фоновый эффект.
Но в этом случае действуют уже такие силы, против которых невозможно
бороться "механическим" путем. Да это и не нужно - см. конец "Возможные пути
развития нашей цивилизации".


    <a name="102">10.2. ИИ как неотъемлемый компонент научно-технического прогресса</a>

Уже сейчас достаточно ощутимо нарастающее торможение развития
научно-технического прогресса по своему основному направлению - освоению
космоса (а то что именно это направление основное сомневаться не приходится
- космическая техника является общим случаем техники планетарной. Более того,
как будет показано в главах 10 и 11 дальнейшее развитие космической техники
вообще невозможно без привлечения ИИ).

Обратимся к фактам. Еще каких-нибудь 10-20 лет назад вполне серьезно
велись разговоры о строительстве гигантских орбитальных станций с
искусственной силой тяжести создаваемой вращением, о солнечных космических
электростанциях с фантастическими мощностями способными напоить энергией всю
планету, о межпланетных кораблях с прямоточными термоядерными силовыми
установками, о глобальных лунных базах и т.д. и т.п.. Лет 30 назад планы были
еще круче. Реально же скромно достраивается на околоземной орбите небольшая
станция "Альфа", представляющая соединенные между собой обычные герметичные
цилиндры. Никакой искусственной тяжести на ее борту, а тем более автономной
системы жизнеобеспечения замкнутого типа, больших заводов и т.п. и в помине
нет. Тема пилотируемого полета не Марс тоже, кажется, потихонечку загибается.
Получается что чем больше мы продвигаемся вперед по времени, тем меньше мы
желаем, а получаем еще меньше. Трудности освоения космоса растут по
экспоненте, вставая на нашем пути непреодолимой стеной. Думается это вызвано
не финансовыми затратами и дело вовсе не в отсутствии новых технических идей
и решений. Ответ в другом. Просто все отчетливее заметна работа одного из
компонентов, необходимого для возникновения любого искусственного объекта.
Имя этому компоненту - сам факт необходимости создания этого объекта. Это
вопрос "а зачем все это?". Наряду с материальной основой и объемом необходимых
знаний он в конечном итоге также решает риторический вопрос "быть или не
быть?". В случае с космосом возникает даже не один, а целый ряд подобных
компонент. Зачем, к примеру, нужны межпланетные корабли, зачем строить
гигантские орбитальные станции, зачем создавать базы на Луне (а тем паче у
лун планет-гигантов), зачем, зачем, зачем.... А ведь и вправду: зачем все это
затевать?
Для военных целей кроме, пожалуй, спутниковой разведки, космос не дает
никаких ощутимых преимуществ: ракетно-ядерного оружия с лихвой хватает для
того чтобы "заказать" всех живущих на Земле по несколько раз.
Противоракетные же космические системы типа СОИ дают только отрицательный
эффект - средств на их разработку и строительство уйдет полно, а толку
практически не будет, так как средства борьбы с подобными системами
несравненно проще и эффективнее самой системы. Эффективность космического
оружия начинает превышать эффективность планетарного лишь после достижения
определенного уровня, атрибутами которого являются все те же циклопические
ударные корабли километровых размеров, колоссальные мощности и т.п..
Понятно что все это достижимо только в случае предварительно развитой
космической инфраструктуры, само создание которой требует усилий ВСЕХ землян
на протяжении даже не десятилетий - столетий, а не отдельно взятой страны.
Таким образом, идея противостояния в космосе двух или более противников
несостоятельна по причине отсутствия таковых противников. Решать проблему
перенаселения при помощи астроинженерных сооружений наподобие колоний О'Нейла
просто смешно, и пример Китая последних лет явно свидетельствует об этом.
Ограничение рождаемости даже обыкновенными административными методами (не
говоря уж об генной инженерии) в короткий срок даст нужный результат. Стоит
только захотеть. К тому же похоже численность населения стабилизируется в
скором времени сама собой. Энергетический кризис также сравнительно легко
преодолим. Одно только более рациональное использование получаемой энергии
(сверхпроводники, экономные источники света, наказание злостных расточителей,
применение двигателей с высоким КПД и т.п.) сразу сокращает ее потребление в
несколько раз. А овладение управляемыми термоядерными реакциями вообще снимет
этот вопрос (естественно с использованием протонного топлива из океанской
воды, а не редкого гелия-3 из лунной коры). Что касается критического для
земных условий барьера 10^14 Вт энергопроизводства, то откровенно непонятна
роль космических источников ее получения (скажем солнечных электростанций) -
во всех этих проектах конечный потребитель все равно остается на Земле. Так
что в любом случае он не сможет потреблять больше указанной цифры, независимо
от того откуда берется эта энергия (потому что в конечном итоге все равно все
уйдет в тепло, разогревая атмосферу и океан). Таким образом и эта проблема
также разрешима безо всякой нужды в промышленном космосе.
Получение в космических условиях уникальных материалов в больших количествах
также бесперспективно, потому что подавляющее большинство этих самых
материалов будет поглощаться самим же космосом (разного рода сверхпрочные и
сверхтонкие тросы, фотоэлементы с высоким КПД и т.п.). Основные же наземные
потребители - микроэлектроника, медицина и некоторые другие - вполне могут
довольствоваться сравнительно небольшими партиями (не более нескольких тысяч
тонн в год даже при наиболее благоприятном раскладе, реально гораздо меньше).
Для их "прокорма" будет хватать считанных единиц небольших орбитальных заводов.
Остается еще научное направление: исследование Солнечной системы, построение
больших космических телескопов и прочее. Но и в этом случае широкомасштабный
индустриальный космос - бесполезная роскошь. Автоматические межпланетные
станции и телескопы запросто собираются на наземных заводах и по частям
выводятся в космос уже существующими ракетоносителями.
Как видите все основные глобальные проблемы цивилизации техногенного характера
не имеют нужды в космосе для своего разрешения. Остальные проблемы: экологии,
экономики и т.п. имеют в основном социальный характер, а значит применение
космической техники для их решения не только совершенно бесполезно - глупо.
Таким образом даже краткий поверхностный обзор показывает что на сегодняшний
день нет проблем требующих для своего решения серьезного подхода к освоению
космоса.

Почему же так произошло? Чтобы ответить на этот вопрос необходимо определить
причины в результате которых идет прогресс в целом и научно-технический в
частности. Их две: физическая и духовная. Физическая обусловлена в основном
действием инстинктов: самосохранения, размножения и т.д.. В результате их
работы у человека возникает стремление получше устроить собственное тело как
в текущий момент, так и в перспективе. Как правило, тело постоянно испытывает
разного рода неудобства: голод, боль, чувство незащищенности и страха. В
результате человек начинает шевелиться, ищет способы для устранения неудобств
и продления моментов удовольствия. Так как физически человек значительно
слабее других равновеликих представителей животного мира, то единственным
эффективным способом достижения желаемого может стать только его интеллект.
В этом заключена физическая причина прогресса. С первого взгляда может
показаться что тут все достаточно просто. Но первые впечатления, как мы знаем,
часто бывают обманчивы. Уже на заре цивилизации, еще во времена древних
Египтов, Греций и Римов жили люди, которые делали изобретения, выдвигали
разные научные и философские теории противоречащие тогдашнему укладу жизни.
А в условиях всеобъемлющего деспотизма власти, безграмотности населения и
рабовладельческого строя это не могло не привести к жертвам. К этому
прибавлялось и то, что большинство из этих нововведений не могли каким-либо
образом улучшить жизнь своих создателей даже в весьма отдаленной перспективе.
И создатели прекрасно знали об этом. Но тем не менее продолжали творить вещи,
не дающие, говоря словами К.Э. Циолковского, ни хлеба ни могущества. Почему?
Исходя из физической причины хода прогресса на этот вопрос ответить
невозможно, т.к. для объекта класса 3.3 в подавляющем большинстве случаев
самосохранение и продолжение дальнейшего преобразования внешнего мира дороже
незначительного приближения к цели ценой саморазрушения.

Отсюда получается что есть еще одна причина прогресса - духовная, не связанная
с физическим телом. О ее истоках сказано в "Объекты высших порядков".
Шло время, менялись эпохи, возникали новые изобретения. И в результате все
большего распространения техники жизнь человека стала несравненно лучше
той, какой он жил всего лишь какие-нибудь несколько столетий назад.
В общем, несмотря ни на какие препятствия, прогресс шел. Так было всегда,
но во 2-й половине 20-го века ситуация медленно, но верно начала меняться.
Звучит немного странно, не правда ли? Известно ведь что именно это время
наиболее богато новыми образцами техники. Да и не только оно - сейчас, в
начале XXI века, также что-то появляется в этой области. Возникло даже новое
понятие - информационная революция. Но не будем спешить с выводами.
Изобретения и созданные на их основе механизмы, слагающие прогресс науки
и техники, можно разделить на 2 категории. Назовем их условно фундаментальным
и конструктивным прогрессом. Первый, как ясно из названия, основывается на
фундаментальных научных открытиях. К порождениям этого вида прогресса следует
относить те новшества, появление которых влечет за собой глобальные изменения
в среде обитания человека, а возможно и во всей биосфере. Такими ароморфозами
были, например, появления паровых машин, электричества, ядерных технологий,
космических систем, радиоэлектроники, ну и наконец информационных технологий.
Все они привели к существенным изменениям жизни людей, а некоторые - даже к
смене общественного строя. Конструктивный прогресс - идиодаптация в мире
науки и техники, улучшения найденных в фундаментальном прогрессе принципиально
новых решений. Примером такого прогресса могут служить новые модели самолетов,
кораблей, компьютеров и т.п., содержащие в себе небольшие нововведения.
Так вот, в настоящее время прогресс все больше становится конструктивным
и все меньше - фундаментальным. А все из-за того, что фундаментальному
прогрессу нужны огромные средства. И для его успешного протекания нужны
долговременные источники этих средств. Причем фундаментальная форма прогресса
имеет устойчивую тенденцию к увеличению количества средств для своего
поддержания по мере развития. Все без исключения фундаментальные проекты
последнего времени были крайне дорогостоящими. И не случайно что рождались они
только в 2-х местах - СССР и США (космос, ракетно-ядерное оружие и др.). Более
мелкие страны были просто не в состоянии проводить подобные разработки, в них
шел только конструктивный прогресс. Но тогда для протекания фундаментального
имелся мощный стимул - глобальное военное противостояние. Сейчас его
(к счастью) нет - "абсолютное" ракетно-ядерное оружие уже создано. Но нет и
других стимулов такой же мощности. Как следствие доля фундаментального
прогресса начинает потихоньку уменьшаться. И все разработки фундаментального
характера что мы видим сейчас - в основном явление инерции.
Естественно что с уходом фундаментального прогресса начнется деградация и
конструктивного. И уже сегодня он начинает постепенно приобретать форму самой
настоящей показухи - искусственного заострения внимания на улучшении
непрофилирующих свойств изделий (т.к. профилирующие уже и так улучшены до
предела), наведении внешнего лоска и пр..
Подводя итог нашего грустного повествования мы приходим к выводу о том, что
сегодняшний свет прогресса - это свет потухающей звезды. Самое же
неутешительное в том, что появления новых глобальных стимулов фундаментального
прогресса не предвидится.
Почему? Посмотрите историю, начиная с древности и кончая началом того же
20-го. Сплошные войны, циклические волны смертельных эпидемий, рабство
(занимающее по времени подавляющую часть времени существования нашей
цивилизации). Из года в год, из века в век и из тысячелетия в тысячелетие
было одно и то же. Люди только и занимались тем, что либо воевали с кем-то
(с природой, с болезнями, с себе подобными), либо заботились о том, чтобы
не умереть с голода. У подавляющего большинства населения всегда были
проблемы, непосредственно угрожающие их жизни. Поэтому любое новшество,
реально обеспечивающее пусть даже в отдаленной перспективе, ослабление этого
глобального гнета рано или поздно внедрялось. Цена внедрения этого новшества
имела второстепенное значение. В настоящее же время вопросы подобного рода
практически разрешены. Вследствие этого исчезла и острая необходимость в
возникновении чего-то принципиально нового. Единственно что осталось решить,
так это пожалуй только проблему вечной молодости и разработать более-менее
надежную защиту от болезней (привлекая, конечно, решения найденные по проекту
ИИ). Все остальные подобные проблемы к настоящему времени либо уже решены,
либо находятся на стадии завершения. Однако получив неограниченную молодость,
создав собственному телу тепличные условия в которых оно ни в чем не будет
нуждаться, человечество тем самым резко понизит эффективность работы
физического фактора прогресса, практически сведя его на нет. Учитывая же его
ведущую роль можно сделать неутешительный вывод: в ближайшем будущем
научно-технический прогресс может почти полностью исчезнуть.
"Почти полностью" потому что духовная причина в современных условиях не
может работать эффективно. Происходит такое в результате значительного
усложнения современной техники и больших материальных затрат, необходимых
для создания ее новых образцов. Если в древнем мире или в средние века
инструменты для познания мира были сравнительно просты и легко доступны,
то теперь ситуация в корне изменилась. А ведь одной только идеи мало, самое
главное - процесс конкретизации и воссоздания проекта "в металле". Но в тоже
время основную массу такого изобретения составляет уже известные блоки,
где-то ранее реализованные. Сама же идея имеет сравнительно небольшой объем и
может вполне быть обработана одним человеком. Попросту говоря энтузиасту не
под силу реализовывать большие проекты без посторонней интеллектуальной и
материальной помощи. А где ее взять, если никто кроме него в проекте не
заинтересован? Нигде. Вот тут-то и приходит на помощь ИИ со своей громадной
базой знаний и большими материальными возможностями (последнее решается за
счет космических ресурсов).

Кроме материальных ресурсов есть и еще одна преграда - время. Нетрудно
заметить что усложнение техники вызывает увеличение времени ее создания. Если
постройка новой модели корабля или самолета с "нуля" до действующего образца
требует как минимум лет 10 (да и то если уже имеется необходимый
научно-технический базис), то для космических "изделий" из пункта <a href="#111">11.1</a> сроки
могут растянутся на столетия. И за это время строители-люди просто потеряют
интерес к предприятию, рассуждая что если награда за труды слишком далека, то
получается что и нет никакой награды. Это происходит в результате
недостаточного развития альтернативного мира мозга человека по сравнению с
внутренним, неприспособленности природной цели человека для столь грандиозных
начинаний. Эмоции берут верх над логикой. Особенно актуальна проблема времени
в случае группы разработчиков - если целеустремленности отдельного человека
еще может хватить, то распад группы практически неизбежен. А ведь большие
проекты невозможно решить в одиночку... Однако что непосильно человеку с
легкостью проделывается ИИ.

При помощи ИИ отдельно взятые люди смогут получить в свое распоряжение
такие колоссальные материальные и интеллектуальные возможности, о которых до
этого не могли мечтать целые государства. ИИ станет достойным преемником
физической причины прогресса и сможет двигать его вперед намного эффективнее
своей предшественницы. При этом поле его деятельности не ограничится Землей.
Опираясь на вновь сгенерированные и уже известные изобретения он очень скоро
выйдет за ее пределы на необъятные просторы Солнечной системы и двинется
дальше. К звездам.


                       <a name="103">10.3. Свобода и совершенство</a>

Так как все живые существа (в т.ч. и человек) являются объектами 3-го
порядка и следовательно имеют тот же принцип работы что и ИИ, то появляется
возможность гораздо глубже, на недостижимом ранее уровне изучать и естественно
улучшать имеющееся в наличие собственное тело. Это, в конечном итоге, приведет
к закату эры человека. Ведь искусственно созданные тела не будут обладать
теми ограничениями, совершенно кстати ненужными и в сегодняшнем мире скорее
даже вредными, которыми "наградила" нас эволюция в погоне за выживаемостью
вида. Тут вам и наличие такого пренепреятнейшего фактора как смерть (точно
возник из-за эволюции, т.к. простейшие микроорганизмы времен архея были
бессмертны, да и наше с вами тело также практически вечно благодаря
непрерывному саморемонту и обновлению). Вся проблема в группах клеток,
не "хотящих" ремонтироваться и еще из-за механизма старения) и доходящая до
абсурда самомодификация (гиподинамия к примеру) и физическая уязвимость т.д.
и т.п.. Все это делает объект 3-го порядка зависимым от целого ряда
трудноконтролируемых, а потому опасных, факторов.
Кроме ликвидации ограничений станет возможным и создание новых свойств и
возможностей. Поэтому с приходом ИИ начнется необратимый лавинообразный
процесс преобразования. Индивидуум наконец-то окончательно и бесповоротно
разорвет узы зависимости от внешнего мира так долго его сковывавшие. Конечно
и с ИИ зависимость от материальных ресурсов сохранится, но это уже будет
другая, гораздо более мягкая ее форма. В ней будет присутствовать только
компонент из неживой природы (факт наличия/отсутствия необходимых материалов).
Самый же опасный компонент - зависимость от других индивидуумов исчезнет.
Исчезнет он благодаря тому, что ИИ позволит для каждого индивидуума построить
самодостаточный комплекс, позволяющий черпать необходимую энергию и вещество
непосредственно из пространства практически в любой точке Вселенной и
ликвидировать тем самым его физическую зависимость от остальных индивидуумов.
Вселенная бесконечна, она может вместить в себя миллиарды миллиардов объектов
класса 3.3. Места хватит для всех. Применение всего ряда стабильных изотопов
таблицы Менделеева и огромный багаж накопленных к тому времени знаний сделает
реальным создание самых различных конструкций объектов 3-го порядка, среда
существования которых будет простираться от искусственно созданных сооружений
до автономного бытия в открытом межзвездном пространстве.


                     <a name="104">10.4. Ближняя перспектива</a>

Все вышесказанное - отдаленное будущее, предсказать которое весьма и весьма
затруднительно. Другое дело - ближайшие годы. Так что же даст ИИ "в день
своего рождения"?

Наиболее болезненный вопрос, терзающий буквально каждого - смерть.
Неотвратимости ухода люди пытались помешать на протяжении всей своей
истории. Тщетно. С возникновением в медицине высоких технологий, генной
инженерии и наконец "расшифровкой" генома человека в конце тоннеля якобы
забрезжил свет. Не хочется огорчать тех, кто верит во всемогущество
современной медицины, но этот свет больше напоминает не лучезарное переливание
выхода, а скорее его первые слабые проблески. Вот только несколько фактов.
Овечка Долли уже при рождении была старой - ее возраст оказался равным
возрасту донора. Ни рак ни СПИД до сих пор не побеждены. А так называемая
"расшифровка" генома человека на самом деле представляет собой обычную запись
типа молекул и последовательности их появления в ДНК. Понять по этой
информации как работает организм - то же самое что для непрограммиста понять
устройство программы, просматривая ее *.EXE - код. Он может только строить
догадки. Все это конечно же никоим образом не уменьшает значимости медицины
и генетики. Они доказали свою необходимость - миллионы людей живы лишь
благодаря своевременному лечению, удалось победить многие страшные болезни,
уносившие в прежние годы тысячи жизней, даже стало реальностью устранять
некоторые генетические аномалии при рождении детей. Но решение проблемы
неограниченной молодости, гарантированного излечения ВСЕХ болезней и других
подобных задач им уже не под силу. И не потому что генетика или медицинские
дисциплины - "плохие" и ограниченные науки. Нет. Просто задачи такого типа -
это задачи качественно другого уровня, задачи в которых нужны гораздо более
глубокие знания, знания фундаментальных первооснов построения организма и в
особенности мозга. Если продолжить сравнение организма человека с программой,
то сегодняшнюю медицину можно сравнить с ее пользователем, а генетику - с
квалифицированным пользователем. Это дает возможность как угодно настраивать
программу, удалять и пристыковывать некоторые ее блоки. Но изменить ее суть в
целом с уровня пользователя, даже квалифицированного, невозможно. Для этого
нужно знать намного больше того что видно с уровня пользователя и иметь в
наличии специальные средства разработки программ. Нужно смотреть на программу
с точки зрения создателя подобных программ - программиста. Поэтому для
решения указанных выше задач требуется намного более мощный инструмент чем
медицина или генетика. Инструмент для создания и изменения объектов 3-го
порядка. Естественно им будет объект 4-го порядка. А поможет ему в этом ИИ и
знания полученные при его создании. Поэтому только когда удастся создать хотя
бы первый образец ИИ можно будет с уверенностью переделывать и собственное
тело. Но это еще не все. Найти и отключить механизм старения и создать защиту
от болезней мало. Все эти меры лишь отдаляют конец, но не отменяют его.
Сколько вы думаете протянуть вечно молодым и здоровым? Бесконечно? Жестоко
ошибаетесь. Тело человека подобно мимозе, требующий тщательного ухода. Чем
больше будет проходить времени, тем больше будет вероятность попадания в
различные несчастные случаи с летальным исходом. Из-за этого реальная
продолжительность жизни обычного человека вряд ли превысит 500 лет. Либо
придется отказываться от общения, путешествий и всего того что делает нашу
жизнь интересной, но имеет потенциальную опасность.
Кроме тела есть еще одна причина - мозг. Он хоть и обладает потенциальной
бесконечностью, но темп притока информации извне уже сейчас значительно
превосходит эволюционные возможности человеческого мозга. В будущем такой
дисбаланс станет еще более явным, поскольку человек и его мозг создавались в
ту давнюю пору, когда абстрактная информационная нагрузка была ничтожно малой,
а потому и не было нужды усиливать склонность к эволюции. Так что рано или
поздно мозг будет до отказа забит информацией, которую придется забывать. Так
со временем будут исчезать все более-менее давние воспоминания.
Кроме принципиальных ограничений есть еще и другие - естественные мутации
организма, болезни. Все они, конечно, сравнительно легко преодолимы. Но само
их присутствие сделает жизнь не такой уж и безоблачной. Да и вообще образ
жизни таких "молодых стариков" действительно будет очень похож на старческий:
регулярные посещения центров по контролю за состоянием организма, ежедневный
прием препаратов, замкнутость (выходить-то особо никуда не рекомендуется -
увеличивается вероятность несчастных случаев).
Решить эти проблемы, без изменения конструкции человека в целом, невозможно.
Выход - переделать собственное тело, заменив его на другой, более устойчивый
к внешним воздействиям и обладающий нужными свойствами, объект 3-го порядка.
Причем разница в устойчивости может достигнуть огромной величины.
Есть и еще одна причина, по которой современные способы "обессмертивания"
через временное замораживание, клонирование и т.п. неприемлемы. Все эти
способы не учитывают двойственной структуры человека. К примеру при
замораживании тело уже перестает быть объектом 3-го порядка и следовательно,
теряет смысл усилителя для объекта 4-го порядка. В результате чего последний
может попросту перестать его использовать - "душа покинет тело". Тот же
результат получается и при клонировании. Ведь даже если и удастся сделать
клон более молодым нежели оригинал, то личность человека - его объект
4-го порядка - "останется" в старом теле, которое со временем умрет.
Эти мысли подтверждаются тем, что однояйцевые близнецы при полностью равных
телах имеют совершенно различное мировоззрение. И чем дольше они живут (а
следовательно тем сильнее объект 4-го порядка изменит альтернативный мир
мозга), тем более отчетливыми становятся эти отличия. И многие люди,
пережившие клиническую смерь (остановка работы мозга) возвращаются "оттуда"
совершенно другими. Причем так же как и в случае с близнецами с течением
времени они все сильнее отличаются от своего изначального образа.
Таким образом, при замене человеческого тела на искусственную альтернативу
необходимо исключить процесс выключения организма. С другой стороны процесс
преобразования должен быть как можно более быстрым в целях уменьшения
вероятности возникновения защитной реакции отторжения со стороны 3.2.

Резюмируя эти и похожие выводы можно предложить метод ЭКВИВАЛЕНТНЫХ БЛОКОВ.
В этом методе органы человека рассматриваются в роли обособленных блоков,
имеющих вход и выход. Каждый орган заменяется на искусственный блок того же
порядка и уровня что и исходный (например если клетка имеет класс 3.1, то и
замещающий ее блок также должен быть класса 3.1), с такими же входами и
выходами, но имеющий гораздо больший потенциал для дальнейшего развития.
Так как вход и выход нового блока остались прежними, то остальные органы
поначалу просто не почувствуют замены. В дальнейшем же, конечно, это приведет
к негативным последствиям. Чтобы этого не происходило, замена должна
осуществляться достаточно быстро. Сложные органы можно представлять в виде
совокупности более простых блоков. Чтобы замена происходила более гладко,
необходимо шире привлекать возможности самого организма к самомодификации и
научиться управлять ей со стороны. В этом случае можно добиться того, что
сам организм начнет перестраивать себя из материалов и полуфабрикатов,
получаемых извне. После полной замены всех блоков на новые наступает
заключительный этап преобразования - используя резко увеличившийся потенциал
новых блоков к изменениям запускается процесс их преобразования к уже
конечной форме объекта класса 3.3. Все существенные изменения (использование
всего ряда стабильных изотопов, преобразование структуры мозга, общее
увеличение возможностей и т.д.) идут именно в этом этапе.
Преобразование структуры мозга желательно, например, для отделения области
внутреннего мира от областей альтернативного мира, полигона и памяти 3.2. В
настоящее время в человеке и то и другое и третье физически расположено, по
всей видимости, в одном и том же месте. Так природе было проще создать
человека, последовательно развивая 3.2, затем 3.3.1 и в конце 3.3.2. Но при
такой схеме намного увеличивается вероятность случайного влияния процессов
одних областей на процессы других, ведущее к разнообразным неприятным
последствиям.
Другой очень желательной модернизацией мозга может стать внедрение нескольких
параллельно работающих внутренних и альтернативных миров, также расположенных
в физически хорошо изолированных отсеках. Такое решение позволяет повысить
мощь и надежность мозга.
В результате прохождения преобразования тело человека примет желаемый облик.
Очевидно все это будет возможно только в случае, когда искусственно удастся
создать объект 3-го порядка с требуемыми характеристиками, ну и конечно же
отлично представлять себе устройство человека и полностью владеть его
состоянием.

Метод эквивалентных блоков тесно связан с рассмотрением тела человека как
многоступенчатой системы 3-го порядка (см. пункт <a href="#733">"7.3.3. Эволюционный процесс
и механизм полуактивной защиты, память стекового типа и косвенная цель. Объект
класса 3.2.2"</a>). Теория многоступенчатых систем должна, в частности, давать
ответы на такие вопросы как совместимость целей и взаимовлияние объектов 3-го
порядка разных уровней, возможность централизованного управления развитием
системы, локальной и глобальной устойчивости системы. И многого другого.
По всей видимости процесс старения, истинные причины таких заболеваний как
рак и другие вещи, имеющие в своей основе "самопроизвольную" мутацию клеток,
регулирование организмом состояния внутренних органов и т.д. и т.п. связаны с
особенностями многоступенчатой структуры самым непосредственным образом.

Кроме полного преобразования возможен и более простой вариант - неограниченная
молодость. Если человек - объект 3-го порядка (для упрощения будем считать
что 3.2), то в нем должны присутствовать 2 объекта: A->X->B и C->Y->D.
Из повседневности известно что основная задача человека как объекта 3.2 - это
обслуживание собственного тела, проведение в нем эволюционного процесса
(включающего саморемонт). Следовательно, тело и является объектом C->Y->D.
Но что же тогда выполняет роль A->X->B, ведь в отличие от C->Y->D он остается
неизменным на протяжении всей жизни? Наиболее вероятное местонахождение
A->X->B - нервная система. В отличие от всех остальных органов нервные клетки
не восстанавливаются (а стало быть не подвергаются эволюционному процессу) и
сохраняются практически неизменным на протяжении всей жизни. Какая-то часть
нервной системы служит для размещения объектов обратной связи (объектов U -
см. схемы объектов 3-го порядка) и других неменяющихся объектов. Генератор
случайности может быть также встроен в нервную систему, но скорее всего его
роль выполняют случайные воздействия внешнего мира. Возможно что A->X->B
располагается внутри каждой клетки и нервная система не имеет к ограничению
продолжительности жизни никакого отношения. Но скорее всего последний вариант
маловероятен и проблема неограниченной молодости носит общесистемный характер
(т.е. в ней задействована вся пирамида 3.1-3.2-3.3).
Для более детальной локализации объекта A->X->B нужны, конечно, дополнительные
исследования по этому направлению. Нас же интересует вопрос про то, какую
роль играет A->X->B в процессе старения. Поскольку срок существования C->Y->D
в результате саморемонта практически неограничен, то единственно что может
служить причиной старения - нарушение работы обратной связи (объектов U)
или(и) изменение A->X->B. Что же вызывает их деградацию? Так как в рамках 3.2
ничто не может влиять ни на A->X->B, ни на обратную связь, то получается что
внутри организма просто нет блока "часов смерти"! Говоря иными словами их
разрушение в принципе не может быть вызвано какими-то внутренними силами
организма. Единственно что возможно - естественное ветшание этих объектов,
подобно тому как ржавеет со временем железо. Процесс естественного старения в
принципе равносилен тому, что через определенный промежуток времени объект
A->X->B или обратные связи самоликвидируется по внутренним причинам (возможно
специально организованными создателями объекта 3-го порядка). Например
небезызвестный фермент теломераза, играющий важную роль при создании ДНК,
скорее всего как раз и есть пример такой изначально запрограммированной
причины. Однако в любом случае, само собой или не само собой происходит
старение, помешать ему не так-то просто, поскольку при этом нужно управлять
объектами 2-го порядка: A->X->B и обратными связями. Следовательно без помощи
объектов 3-го порядка тут никак не обойтись.

Очевидно что получить неограниченную молодость обычными лекарствами на
химической основе практически невозможно - вызываемые ими реакции в организме
являются объектами 2-го порядка локального действия. И они не в состоянии в
целом помешать ускоряющемуся разрушению сложнейшего объекта C->Y->D. Этим
также в частности объясняется и то, что до сих пор не могут найти лекарств от
рака, СПИДа и др. вирусных заболеваний, которые к тому же постоянно мутируют.
Бороться при помощи объектов 2-го порядка с объектами 3-го совершенно
бесполезно.

Необходимо ликвидировать деградацию A->X->B и обратных связей и тогда организм
не будет стареть! И это вполне возможно. Стоит искусственно построить в
организме еще один объект 3-го порядка, в котором A->X->B и обратная связь
будет играть роль C'->Y'->D' и поставить перед этим объектом цель удерживать
C'->Y'->D' в заданном состоянии, как проблема будет решена. А поскольку
рассматриваемый объект можно построить произвольным образом, то не составляет
никакого труда сделать его цель и обратные связи построенными из всего ряда
стабильных изотопов. Тогда они будут несравненно более устойчивыми чем
белковые конструкции.

Хотя такой подход и проигрывает глобальному преобразованию человека, но тем
не менее позволяет обрести неограниченную молодость уже в сравнительно
недалеком будущем.

Еще одной положительной чертой является возможность освоения при помощи ИИ
Солнечной системы, воспользоваться ее колоссальными и поистине неистощимыми
ресурсами. В настоящее время этому мешают два обстоятельства: невозможность
создания сложных автономных непилотируемых кораблей и высокая стоимость
космических средств.
Начнем с создания кораблей. Очевидно что все это ресурсодобывающее,
перерабатывающее, транспортирующее и прочее космическое хозяйство будет
очень и очень сложным. А значит ненадежным и постоянно ломающимся. К тому же
требование автономности делает невозможным решение проблемы управления
современными средствами (при помощи программ). В итоге это приводит к тому,
что на корабле должны постоянно находится различные ремонтники, техники,
управляющий персонал. Причем общая численность людей на борту будет сравнима
с численностью экипажей больших подводных лодок, работающих в похожих
условиях. А это около 150 человек. Естественно что решение везти с собой
такое количество народа, помноженное на многолетние сроки работ порождает
многочисленные и неразрешимые проблемы. Первое - создание мощной системы
жизнеобеспечения замкнутого типа. Второе - искусственная тяжесть на борту.
Третье - защита от радиации. Четвертое, пятое, шестое... Уже одно только это
резко усложняет проект.
Но есть еще и социальные проблемы - людей нужно возить на вахты туда и
обратно, страховать и вообще много еще чего. А в конце всего этого получается
следующее: простейший рудодобывающий комплекс на каком-нибудь
астероиде превращается в рабочий городок, не столько дающий руды, сколько
создающий многочисленные проблемы.
Вторая проблема - высокая стоимость космического оборудования. В какой-то
мере это следствие предыдущей проблемы. Космическая техника в основном
дорого стоит из-за высокой стоимости доставки с Земли и сложного
оборудования для изготовления высокоточных деталей. Первое решается путем
производства кораблей уже в космосе, на лунных, к примеру, ресурсах.
Второе - массовым производством и автоматизацией. Но и тут все упирается в
экипаж, как и в первом случае!
Таким образом большинство людей, решивших осваивать Солнечную систему при
таком построении космической техники, вместо того чтобы что-то изучать,
создавать новое, неизбежно будут заняты неинтересной рутинной работой.
Мало кто согласится на подобное трудоустройство.
Меч, разрубающий сей гордиев узел - ИИ. Он позволит создать управление
корабля на должном уровне и автоматически устранять сложные поломки.
Сам корабль, избавившись от такого балласта как системы жизнеобеспечения и
т.п., становится несравненно проще, надежнее и дешевле. То же можно сказать и
в адрес заводов по производству кораблей. Но это еще не все.
Главное достоинство ИИ в данной области применения - эволюционный процесс.
Это значит, что оставив на поверхности Луны небольшой завод, вернувшись
можно обнаружить на его месте целый индустриальный город! И все это без
малейших усилий со стороны его основателей. С ИИ откроются такие
захватывающие перспективы, о которых не могли мечтать ни Колумб, ни его
последователи. Но и это еще не все! Начальные этапы освоения Солнечной
системы заложат фундамент для зарождения цивилизации 4-го порядка.
Цивилизации качественно другого уровня (см. <a href="#11">"11. Возможные пути развития нашей
цивилизации"</a>). В ее рамках и станет возможной независимость индивидуумов друг
от друга (см. <a href="#103">"10.3. Свобода и совершенство"</a>). И те первопроходцы, создатели и
обитатели первых космических поселений, смогут обрести ее раньше остальных.

Большую помощь окажет ИИ и в решении чисто земных проблем. Вот только три
характерных примера.

Экология: создание и внедрение безвредных производств за счет увеличения их
сложности. Разница в стоимости погасится применением ИИ по тому же принципу
что и в строительстве космической промышленности, так что такие производства
окажутся даже выгоднее существующих.

Сельское хозяйство: отказ от непроизводительного и тяжелого сельхозтруда.
Станет возможным искусственное выращивание в специальных биореакторах
готовых продуктов, по качеству не уступающих натуральным. Дешевое массовое
производство даст возможность досыта накормить все население Земли.
Поля под сельхозкультуры превратятся в леса - зеленые легкие планеты,
а практика выращивания домашних животных с их последующим жестоким убоем
быстро самоликвидируется.

Образование: используя широчайшую разрешающую способность ИИ можно будет
организовать образование высокого качества в мировом масштабе. Мощи ИИ хватит
для того, чтобы работать с каждым человеком индивидуально. При помощи ИИ люди
самых отсталых уголков Земли получат доступ к знаниям и всегда смогут получить
квалифицированную помощь и разъяснения по любому вопросу.

Промышленное производство и освоение новых возможностей в этом плане при
помощи ИИ можно даже и не упоминать. Уже на самых ранних этапах создания ИИ
можно будет использовать полученные знания в производстве, делая его более
экономичным и безопасным. За счет внедрения новых технологий на основе
объектов 3.1 (а далее и 3.2) ускорится создание образцов техники, сделающих
нашу жизнь лучше.


                         <a name="105">10.5. Неразрушающая цель</a>

Каким образом получить от ИИ все описанные блага? В фантастических рассказах
ИИ - это безотказный мощный слуга выполняющий любые пожелания человека и
придерживающийся при этом определенных правил, гарантирующих ненанесение
вреда людям и животным (вспомним хотя бы 3 знаменитых правила робототехники
предложенные Айзеком Азимовым). Но на самом деле все, увы, намного сложнее
чем в мечтаниях фантастов. Рассмотрим способы нейтрализации угрозы от ИИ на
примере 3.3.1, свободным от влияния объектов 4-го порядка.

Всего имеется 3 способа:

1) С самого начала поместить ИИ в такую область внешнего мира, из которой
   он ни при каких условиях не сможет навредить нашей цивилизации (например
   в далекую звездную систему).

2) Заложить в ИИ знания о людях, животных. Всем том, что он не должен
   разрушать в процессе своей деятельности.

3) Создать для ИИ такую цель, все без исключения следствия которой никогда
   не станут представлять опасности для нашей цивилизации.

Из теории объектов 3-го порядка известно что единственный способ
долгосрочного прогнозирования их деятельности и направления ее в нужное русло
- это управление целью. Все остальное - рецепторы, эффекторы, содержимое
внутреннего мира, внешние плагины, локальные свойства среды существования и
т.д. - все это непрерывно меняется как благодаря работе 3.3.1 (в частности
эволюционный процесс), так и в результате воздействия внешней среды. Цели
3.3.1 достигает при помощи создания бесконечного логического домена.
При этом логические домены, участвующие в процессах распада и синтеза
целевого логического домена, могут быть взяты из любой области внешнего мира.
Процессы, сопровождающие распад и синтез, также совершенно непредсказуемы.
Таким образом 1-й путь не подходит, поскольку за длительное время
существования ИИ нет гарантии что он останется в той же области внешнего
мира, куда мы его поместили. Не говоря уже и о том, что толку от такого ИИ
для решения глобальных проблем нет.

На основании этих соображений нетрудно сделать вывод о том, что для гарантии
безопасности человечества цель объекта 3.3.1 должна охватывать весь внешний
мир. В противном случае нет гарантии что в качестве логического домена для
распада не будет выбрана наша с вами среда обитания.
Но этого недостаточно. Цель, охватывающая весь внешний мир, очень велика.
Создать ее сильно детализированной невозможно. Поэтому необходима такая цель,
которая даже при сравнительно небольшой детализации не влечет появления
опасных для человечества и биосферы следствий. Нужна НЕРАЗРУШАЮЩАЯ ЦЕЛЬ.

Просто заложить в цель ИИ знания о людях, биосфере и их "неприкосновенности"
нереально. Предохранить от изменений объект 2-го порядка внешнего мира можно
лишь одним способом - указав в цели логический домен, глобальные
характеристики которого совпадают со всеми свойствами этого объекта. При
этом вероятность что 3.3.1 не станет производить изменения свойств этого
объекта или даже его распад достаточно высока (но, к сожалению, не равна 1).
Сделать подобные указания в цели крайне трудно из-за многочисленности живых
существ, сложности их устройства и поведения.

Однако основной барьер в том, что люди, животные и другие представители
биосферы - объекты 3-го порядка, в то время как в цели можно описать только
объекты 2-го порядка. Как только объект 3-го порядка отклонится от своего
образа в цели ИИ на некоторую величину (а рано или поздно это произойдет
обязательно), то он автоматически лишится своей "неприкосновенности". Можно,
конечно, сделать максимально допустимую величину отклонения очень большой.
Но это нежелательно, т.к. в результате в число недоступных для изменения
объектов 2-го порядка попадут не только представители биосферы, но еще и
множество совершенно посторонних объектов. Упадет эффективность работы 3.3.1.
Как видим и 2-й путь тоже не подходит. Нужен другой подход, не требующий
явных указаний в цели.

Необходимо задать ИИ такую цель, при достижении которой у него постоянно
возникала бы необходимость в других объектах 3-го порядка. Когда у ИИ
возникнет такая необходимость? Очевидно тогда, когда он будет не в состоянии
решить хотя бы одну из задач, лежащей на пути к цели. Поскольку ИИ намного
превосходит человека, то маловероятно что человек сможет сделать то, что не
смог ИИ. Однако есть у человека то, чего нет у ИИ - объект 4-го порядка.
Генерация изобретений - вот то, зачем человек нужен ИИ-ту. Нужно придумать
для ИИ такую цель, для достижения которой ему всегда были бы нужны все новые
и новые изобретения. И одновременно чтобы эта цель служила человечеству во
благо (а не только для защиты от ИИ) и, как уже упоминалось ранее, охватывала
бы весь мир.

Единственный способ сделать необходимость ИИ-та во все новых изобретениях
постоянной - это... заставить ИИ менять что-то, что заведомо постоянно
находится под влиянием объекта 4-го порядка! И это что-то существует. Чем
сложнее объект в нашей Вселенной, чем он больше по пространственным и
временнЫм масштабам, тем больше он подвластен фоновому эффекту. Заодно
большая и сложная цель хорошо согласуется с требованием охвата всего внешнего
мира.

Приведем простой пример неразрушающей цели. Его не следует считать
окончательным выводом - он просто демонстрирует сам принцип построения.

Пусть целью ИИ будет стремление стабилизировать Вселенную чтобы она не
сжималась и не расширялась, чтобы запасы легких элементов не истощались. Ясно
что такая цель охватывает весь внешний мир и одновременно подвержена сильному
влиянию фонового эффекта.
Естественно достичь ее невозможно, можно только приближаться, изучая строение
материи и законов природы. Но т.к. 3.3.1 не анализирует цель на предмет
достижимости, то он начнет движение к ней в любом случае.
В результате возникают целые серии следствий, важнейшие из которых:

 1) Неограниченное развитие самого 3.3.1.

 2) Нужность людей и живой природы. Причем эта нужность носит весьма
    интересный характер: сами по себе их тела, мозг, модель поведения ИИ не
    интересуют, поскольку он многократно все это превосходит. Все дело в
    объектах 4-го порядка. Они могут помочь ИИ достичь цели, поскольку без
    новых изобретений стабилизировать Вселенную невозможно. Т.к. эти объекты
    могут избирать в качестве усилителя любой объект 3-го порядка (не только
    людей!), то ИИ станет создавать благоприятные условия для развития всех
    объектов 3-го порядка, попавшего в поле его деятельности. Поскольку
    появление изобретений в своем большинстве случайно и об этом ИИ известно,
    то людям нет никакой необходимости лезть из кожи для того чтобы хоть
    что-то изобрести. Животные также могут воспользоваться этой лазейкой,
    вообще ничего не делая. ИИ не станет их трогать и будет ждать вечно.

 3) Во внутреннем мире 3.3.1 нет объектов 3-го порядка - все упрощенно
    представлено как 2.2, но он знает что чем сложнее объект 2.2 (об этом
    следует позаботиться его создателям, конструирующим внутренний мир), тем
    вероятнее что на самом деле он - объект 3-го порядка. Значит необходимо
    содействовать усложнению объектов 2.2. Чем сложнее объект 2-го порядка,
    тем более благоприятные условия для дальнейшего усложнения создает ему
    ИИ. Запускается небывалый по мощи двигатель прогресса. Катализирующее
    влияние ИИ на усложнение объектов и создание им благоприятных условий
    находится в прямой зависимости от их содействия достижению цели.
    Если объект не оказывает никакого влияния на достижение цели, то его
    поддержка со стороны ИИ тоже есть (см. предыдущий пункт), хотя и
    сравнительно небольшая. Однако если объект мешает достижению цели, то ИИ
    будет играть для него роль ингибитора. Водораздел ктализатор-ингибитор
    возникает начиная с определенной величины негативного влияния объекта на
    достижение цели.

 4) Защита от войн и преступных элементов. Т.к. косвенной стороной цели
    служит поддержка людей и животных, создания им благоприятных условий,
    то любой кто станет стремиться к уничтожению человечества или его
    деградации, будет остановлен ИИ. Поскольку ИИ не слушает ничьих приказов
    и всегда придерживается только своей цели, его негативное использование
    исключено. К сожалению одновременно становится невозможным и его
    использование в других личных вопросах, не имеющих к цели ИИ никакого
    отношения. Но это только к лучшему - алгоритма определения "хороших"
    просьб от "плохих" не существует.

 5) Задача преобразования нашей цивилизации в космическую и требование
    размещения ИИ в космосе решаются исключительно согласованно и наиболее
    эффективно.

Как видим, правильно выбранная внутренне непротиворечивая цель способна
сделать ИИ абсолютно безопасным, полезным и неограниченно развивающимся. Но к
великому огорчению мечтателей о "золотой рыбке на посылках", воплощению их
мечты в виде ИИ сбыться не суждено. Этим отличается принцип использования ИИ
от объектов 2-го порядка (машин, механизмов, программ и прочих внешних
плагинов, порожденных научно-техническим прогрессом). ИИ не служит конкретно
взятому человеку, как служит ему автомобиль или пылесос. Он меняет всю нашу
среду обитания. Проводит глобальные изменения таким образом, что улучшение
жизни наступает у всех живых организмов.
Можно даже сказать что система из ИИ с неразрушающей целью и других объектов
3-го порядка представляет собой своего рода идеальное государство, дающее
нейтральным элементам необходимый минимум для существования, угнетающее
негативные и поддерживающее позитивные элементы.

Залогом успешности действия неразрушающей цели служит существование ИИ в
космосе. Отправить ИИ в космос желательно сразу же после его создания, ввиду
высокой скорости прогресса искусственного разума и его внешних плагинов,
помноженной на ограниченность материальных и пространственных ресурсов Земли.
Следовательно, развитие соответствующей космической инфраструктуры должно
идти параллельно с процессом создания ИИ и оба направления должны быть готовы
одновременно. Подготовить корабль, пригодный для длительного путешествия в
пределах Солнечной системы и способный нести значительную нагрузку; создать
универсальное, эффективное и компактное оборудование для добычи и переработки
полезных ископаемых; собрать как можно больше информации о телах Солнечной
системы. Это минимально возможный состав космической программы. Желательно
также наличие заранее подготовленных планетарных баз - это сильно упростит
ИИ-ту задачу своего развития.

Первоначальным космическим домом ИИ возможно будет Луна, как наиболее
подходящая по основным параметрам: близкое расположение к Земле, достаточное
количество в верхнем слое коры почти всех необходимых элементов, малая сила
тяжести, отсутствие атмосферы. Луна изучена лучше всех остальных малых и
больших планет Солнечной системы.



==============================================================================



              <a name="11">11. Возможные пути развития нашей цивилизации</a>

Введем вначале классификацию цивилизаций. Обычно принципом деления служит
общее энергопотребление цивилизации. Так появляются цивилизации планетарного,
звездного, галактического и межгалактического характера. Но с учетом
предыдущей главы можно сделать вывод что энергопотребление не является
главным отличием одной цивилизации от другой. Оно значимо, но не основное.
Основное значение имеет то, объекты какого порядка оказывают наиболее сильное
влияние на ход эволюции цивилизации (рассматривая, конечно, т.н. цивилизации
"замкнутого" типа, свободные от внешнего влияния).

Итак, в цивилизации 1-го порядка основой служат объекты класса 3.1. Такую
систему трудно назвать цивилизацией, но тем не менее во времена архейской
эры именно цивилизация такого типа и была на Земле.

Цивилизация 2-го порядка основывается на 3.2. Это мир животных и растений.

Цивилизации 3-го порядка - царство объектов 3.3. Так пока устроен наш мир.

Объекты 4-го порядка определяют структуру цивилизации 4-го порядка. Это уже
космические цивилизации.

Мы живем в интересное время - имеем возможность наблюдать как стремительно
трансформируется наша среда обитания. Если еще не так давно звенели мечи и
копья а превыше всего в людях ценилась физическая сила, то теперь работники
умственного труда ценятся куда выше работников физического. А совсем недавно
стала проявляться и еще одна характерная черта - возросшее влияние отдельных
изобретений на человечество в целом. Все это - косвенные свидетельства
перехода нашей цивилизации на порядок выше. Но пока это только отдельные,
так сказать, вспышки. Настоящий взрыв Сверхновой начнется с момента
возникновения ИИ и закончится когда будут исчерпаны все теоретические
возможности совершенствования объекта класса 3.3. И если все предыдущие
новинки научно-технического прогресса приводили лишь к смене общественного
строя, то появление ИИ даст толчок к смене порядка цивилизации!

Основные строительные блоки нашей цивилизации - люди. Они практически
однотипны по своему поведению и физическому устройству. К тому же это
относительно простые объекты класса 3.3, что делает затруднительным влияние
мощных объектов 4-го порядка на ход истории. Как следствие наша цивилизация
также сравнительно однообразна.

В космической цивилизации 4-го порядка все будет по-другому. Сложность
объектов 3-го порядка будет непрерывно возрастать и сравнительно быстро
достигнет оптимального максимума (а его значение во многие миллиарды раз
больше сложности человека и в частности его мозга). Это создаст благоприятную
основу мощным объектам 4-го порядка. Они породят колоссальное количество
новых изобретений и сделают реальным существование многих интересных вещей.

В общем плане цивилизация 4-го порядка гораздо более устойчива цивилизации
3-го порядка. Взаимосвязь отдельных ее составляющих находится на уровне
объектов 4-го порядка и не зависит от каких-либо физических причин.
Это как бы единый монолит. С другой стороны, каждый объект 4-го порядка
уникален, что позволяет рассматривать такую цивилизацию в виде автономных
фрагментов. Такое "разделенное единство" уже заметно и сегодня - появление
высоких технологий с одной стороны повышает независимость одного человека от
другого, а с другой - сближает схожих по своим жизненным взглядам людей.
Конечно о цивилизациях 4-го порядка можно говорить только приближенно,
т.к. их основа - объекты 4-го порядка принципиально непознаваемы. Поэтому
остановимся на объектах до 3-го порядка.


           <a name="111">11.1. Космические корабли будущего. Корабли ли это?</a>

Так как цивилизация - космическая, то они представляют собой искусственно
созданные космические объекты.
Однако к ним неприменимо понятие космического корабля в том смысле, который
в него вкладывается сейчас. Понятие корабля, транспортного средства, пришло
по аналогии с земными средствами передвижения. Но в космосе уже не те условия
что на Земле или других планетах. Там совершенно другие
пространственно-временные масштабы и цели. Если основная цель планетарного
транспорта - это доставка груза из точки A в точку B, то в космосе такой
нужды просто нет! Как это? Ведь во всех фантастических сюжетах космические
корабли - гиперболизированный аналог земного транспорта. Планеты - это точки
A и B, а корабль что-то вроде грузового автомобиля.

В реальности все иначе. В каких вообще случаях требуется доставлять груз из
одного места в другое? Тогда, когда его нет в точке B и когда доставить проще
чем произвести на месте. Очевидно что уже в масштабах Солнечной системы
гораздо проще производить на месте - материала хватит, а на перевозку уйдет
столько времени и энергии, что в некоторых случаях даже выгоднее
синтезировать элемент из водорода, чем возить его на миллиарды километров.
Второй случай - отсутствие груза в пункте назначения при том, что везти
выгоднее. Но почему вдруг все решили что кроме планеты или, на худой конец,
огромной планетарной базы, ничто не может выступать пунктом назначения?
Скорее всего оттого, что якобы сложность устройства и масса корабля не идет
ни в какое сравнение с базами. Что корабль - придаток базы. А это совершенно
неверно. Космический корабль настолько огромен и сложен, что не только может
сравниться с базой, а как правило, многократно ее превосходит. Это вовсе не
транспортный модуль, всецело зависящий от средств обеспечения базы.
Это огромный автономный звездный мир, не нуждающийся в каких-либо
дополнительных средствах для своего существования. Ведь какой смысл создавать
производство, запасы и т.п. на стационарных базах, когда введя двигатель и
ряд необходимых для него систем можно превратиться в настоящий корабль,
обладающий гораздо более высокой устойчивостью к внешним невзгодам.

В условиях планеты двигатель и необходимые системы кажутся непозволительной
роскошью, т.к. например на Земле с одной стороны имеется уже готовая система
жизнеобеспечения человека - биосфера, а с другой уже исторически сложившаяся
система кооперации - доставка полуфабрикатов с их последующей сборкой. Другое
дело - созданная по проекту самодостаточная станция. Очевидно что поражающее
действие внешней среды на станцию тем выше, чем больше площадь ее корпуса и
чем меньше объем, т.к. мощь активных средств защиты напрямую зависит от
занимаемого ими объема. Отсюда вытекает что современные заводы, фабрики и
другие подобные сооружения раскинувшиеся на многокилометровых площадях имеют
самую невыгодную блинообразную форму, диктуемую силой тяжести. Поэтому
шарообразную станцию целесообразно создавать в невесомости - на орбите, а не
на поверхности планеты. Не следует думать что "поражающее действие внешней
среды" - военный термин. При сроках существования станции в сотни лет (что
крайне мало по космическим масштабам) внешняя среда не раз и не два устроит
"проверку на прочность" безо всякой связи с войной. Это с одной стороны.
С другой стороны, как уже было сказано, станция самодостаточна - обеспечивает
весь цикл "химический элемент"->"готовое изделие", что вынуждает встраивать в
нее весь ассортимент типов современных заводов. Насколько это сложно и
сколько это будет занимать объема и требовать для своего функционирования
энергии, объяснять не стоит. И на таком фоне добавление комплекса
"двигатель - обслуживающие системы" выглядит совсем в другом свете, тем более
что большинство систем этого комплекса можно использовать и для других нужд
станции. Таким образом выясняется что чем сложнее станция, тем выгоднее делать
ее в виде корабля а не планетарного "блина". С учетом того что подавляющая
масса материала планет Солнечной системы (а скорее вообще планет всей
Галактики) находится в планетах-гигантах не имеющих твердых поверхностей,
гигантские корабли предстают в еще более выгодном свете.

Так что если в цивилизации 4-го порядка планетарные станции и будут
существовать, то скорее всего это будут своего рода "рабочие поселки".
Настоящие производственно-индустриальные, двигательные комплексы и комплексы
управления на основе объектов класса 3.3 будут слиты в единое целое и
представлены как автономные и хорошо защищенные космические корабли.
Попробуем набросать общий портрет такого корабля. Начнем с автономности.
Она состоит из 4-х частей: автономность по сырью (включает в себя вещество
и энергию), по сложным инженерным изделиям, по информации и по движению
(можно добавить еще 5-й тип автономности - по времени, но так как это уже
само собой разумеется, то ограничимся 4-мя).

Автономность по сырью подразумевает что на корабле имеются средства для
извлечения из окружающей его внешней среды этого сырья. Т.к. энергия и
вещество заключено в основном в 3-х источниках: звездах, планетах и
межзвездной (межпланетной) пыли с газом, то для обеспечения этой автономности
нужно иметь на борту 3 соответствующие системы. К примеру забор вещества с
планет может решатся при помощи специальных кораблей-сборщиков, а системы
сбора энергии излучения звезды и межзвездной (межпланетной) материи встроены
непосредственно в конструкцию корабля. Следует заметить что системы сбора
вещества и энергии должны также обеспечивать работу двигателя в прямоточном
режиме хотя бы в рамках межпланетной среды.

Автономность по сложным инженерным изделиям нужна как минимум по 2-м причинам:
во-первых ремонт и улучшение корабля всегда потребует таких изделий,
а во-вторых условия у разных планет разные, значит потребуются совершенно
различные корабли-сборщики. Постоянно возить с собой тысячи объемистых и
тяжелых кораблей нереально. Гораздо проще делать их каждый раз заново,
оптимизируя под условия конкретной планеты. Так можно и нужно поступать не
только в отношении кораблей-сборщиков, но и разведчиков и т.п.. Реализация
такой автономности натыкается на ряд сложностей, первая из которых -
малораспространенность в космосе средних и тяжелых элементов таблицы
Менделеева. Если они и есть, то как правило в ядрах планет, добраться до
которых затруднительно. А они нужны, потому что без них не изготовишь сложных
изделий. Поэтому единственный выход - синтезировать их из водорода и гелия, а
при общей постановке задачи вообще желательно уметь получать любой элемент из
любого. Этим и занимается т.н. синтезатор элементов. Это очень сложное и
огромное устройство. Достаточно сказать что термоядерный реактор - реактор
синтеза, не сделан до сих пор, а ведь он решает только частную задачу синтеза
гелия из водорода. К тому же синтезатор должен обеспечить не граммы или
килограммы, а тонны, десятки тонн нужного элемента в ограниченный период
времени. Кроме средства для получения нужных элементов синтезатор играет роль
энергетического реактора, работающего как в режиме распада, так и синтеза.

Но вот нужные элементы получены. Теперь их предстоит превратить в готовые
изделия. Для этого служит производственный комплекс полного цикла. Это
миллионы кубометров, заполненных автоматизированными заводами на основе
объектов 3-го порядка. Так что такой комплекс получается ничуть не проще
синтезатора.

Третья часть автономности - информационная. Это вовсе не набор средств связи
(хотя он включен в ее состав). Ее суть заключена в наделении корабля разумом -
огромным корабельным мозгом, управляющим всем на корабле. Он служит для того
чтобы корабль мог успешно существовать и развиваться дальше безо всякой
интеллектуальной поддержки окружающей его цивилизации.
Например он должен уметь без посторонней помощи разработать "с нуля" проект
корабля-сборщика для планеты произвольного типа, произвести их серию и
практически использовать. На него ложится и организация активной защиты
(в рамках объекта 3.3). Решает другие задачи похожей сложности. Но самое
главное - он служит основным вместилищем для высокоуровневого объекта 4-го
порядка, для чего имеет исключительно развитый альтернативный мир. По своим
возможностям он может превосходить мозг человека в миллиарды раз. Конечно,
в нем уже будет сильно проявляться фоновый эффект. Но уменьшать мощность
мозга нельзя - тогда он не справится с управлением таким колоссальным и
сложным хозяйством как межпланетный корабль (один только производственный
комплекс чего стоит!), не сможет активно защищать его. Наличие мозга
упраздняет экипаж. Так что лихие "командоры" со своими многочисленными
соратниками будут выглядеть по сравнению с корабельным мозгом в той же
пропорции что кучка муравьев рядом с человеком. И это еще одно фундаментальное
отличие рассматриваемого межпланетного корабля от классических образов, в
которых корабль всецело зависит от экипажа и служит целиком и полностью для
ублажения его прихотей. Корабельный мозг играет и роль своеобразной
спортивной планки, закрывая управление кораблем объекту 4-го порядка с уровнем
ниже определенного значения (когда влияние объекта 4-го порядка становится
примерно равным фоновому эффекту).

Ну и наконец, четвертая часть автономности - движение. Центральное звено
которой - двигатель. Пока известен только один способ получения ускорения
без взаимодействия с другими космическими телами - реактивный. На кораблях
без управляемого поля вероятности он также скорее всего будет реактивным.
Но если кораблем управляет объект 4-го порядка очень высокого уровня, то
вполне возможны и другие способы перемещения, основанные на сильных
изменениях фундаментальных свойств окружающего корабль пространства. Но пока
будем исходить из того, что уровень объекта 4-го порядка в рассматриваемом
нами корабле не настолько высок чтобы вызывать управляемое поле вероятности.
Поэтому будем рассматривать корабль как объект класса 3.3 во 2-й модификации,
а двигатель реактивный. К случаю же существования управляемых вероятностных
полей вернемся несколько позже.
Но как бы там ни было, уже сейчас с полной уверенностью можно сказать что
мощность двигателя будет огромной, а его сложность сравнима со сложностью
средств сбора вещества и энергии. Скорее всего это будет ускоритель масс,
не связанный напрямую со средствами сбора вещества и энергии. И то и другое
двигатель будет забирать у т.н. аккумулятора ресурсов, запасы последнего при
этом должны пополняться за счет средств сбора и синтезатора элементов.

Кроме вышеперечисленных устройств можно назвать еще несколько важных блоков.

Аккумулятор ресурсов - устройство для длительного хранения вещества, энергии,
инженерных конструкций и информации. Он важен, когда корабль совершает
пассивный полет. Такой режим случается довольно часто. Если, к примеру,
корабль рассчитан на активное взаимодействие с окружающей средой (основным
ограничением здесь служит комплекс сбора вещества и энергии) в рамках
планетной системы, то такой межпланетный корабль за счет аккумулятора
ресурсов может совершить пассивный полет (по инерции) к другой звезде врежиме
межзвездной станции. Без аккумулятора ресурсов такой полет был бы невозможен -
т.к. корабль представляет собой объект 3-го порядка, то в нем постоянно
протекают различные процессы, требующие расхода вещества и энергии. Конечно,
эти затраты гораздо меньше затрат на работу двигателя, но при длительных
сроках они становятся достаточно велики. Энергию можно хранить в виде
антивещества или поля в сверхпроводящих соленоидах, а вещество при высокой
плотности. При таком подходе габариты аккумулятора будут не очень велики.

Еще один важный компонент - корпус корабля. Он защищает все его остальные
блоки от повреждений, а также играет формообразующую роль. Не следует думать
что корпус представляет собой подобие танковой брони. Он гораздо сложнее по
структуре и является объектом 3-го порядка, способным проводить регенерацию
и самостоятельно устранять мелкие и частично средние повреждения.

Кроме такой защиты можно предположить и существования другого защитного
механизма - импульсного высокоэнергетического щита. Рассмотрение явления
противоборства брони и снаряда для подвижных (оснащенных двигателем) объектов
приводит к интересному парадоксу: полная энергия снаряда (сумма его
кинетической энергии и энергии заключенного в нем взрывчатого вещества)
поражающего, например, танк, равна энергии выделяемой танковым двигателем
всего за какие-нибудь 15-20 минут! Для более крупных объектов, например
боевых кораблей, это время еще меньше. Пробивание брони происходит потому что
полная энергия снаряда превосходит энергию межмолекулярных и межатомных
связей броневой толщи. Если бы удалось создать устройство, способное
аккумулировать достаточно много энергии и в нужный момент мгновенно выделять
ее в виде упрочнения межмолекулярных и межатомных связей определенного
участка брони, то задача создания абсолютной защиты была бы решена.
Ведь полная энергия любого, даже самого мощного боеприпаса, намного меньше
энергии, заключенной в запасах топлива на борту защищаемого объекта.
Даже ядерное оружие, от которого в настоящее время нет защиты, будет не в
состоянии преодолеть энергетический щит, питаемый энергией ядерных реакторов.
Как раз от внешних воздействий ударного типа, когда вся энергия выделяется в
короткий промежуток времени, энергетическая защита и будет наиболее
эффективна.

Но как создать в корпусе межпланетного корабля энергетический суперщит?
Давно известно явление самоиндукции, когда резкое изменение внешнего
магнитного поля вызывает мгновенное возникновение в катушке примерно такого
же по силе поля, но противоположной направленности. Так не удастся ли
встроить в корпус нечто подобное? Тогда при изменении его формы (например
при попадании астероида, попытке испарения мощным облучением или другом
воздействии - это совершенно не важно) произойдет реакция сопротивления.
Сопротивляться будет уже не маленький локальный участок поверхности,
а энергия всего корабля. И чем больше мощность внешнего воздействия,
тем сильнее сопротивление. Роль внешнего накопителя энергии, способного к ее
мгновенному выделению, будет играть аккумулятор ресурсов, дополнительно
оснащенный устройством быстрого энерговыделения. Использование огромных
резервов аккумулятора ресурсов сделает реальным сопротивление воздействиям,
обладающими высокими и сверхвысокими плотностями энергии (вплоть до энергии
аннигиляции). Важна и многоразовость такого щита - после зарядки аккумулятора
ресурсов он снова готов встретить удар. Не исключено что при определенных
условиях энергетический щит можно даже использовать в роли преобразователя
энергии удара в полезную работу. Например сжимая пружину, внешние силы
совершают работу, которая затем может быть использована. Упрочнение корпуса
при помощи энергетического щита приводит к тому, что в случае удара корпус,
вместо того чтобы разрушиться, будет упруго деформироваться. Затем
потенциальная энергия деформации превращается в дополнительную энергию
аккумулятора ресурсов. Иными словами, удары по межпланетному кораблю только
увеличивают его силу!

Конечно устройство энергетического щита будет очень сложным. И вполне
возможно что существовать он сможет только как объект 3-го порядка.
Естественно что в момент отражения удара объект 3-го порядка никакой роли не
играет, поскольку длительность цикла "удар-ответное воздействие" (миллиардные
доли секунды) слишком мала даже для объекта класса 3.1. Объект 3-го порядка
нужен для поддержания в рабочем состоянии столь сложного объекта, как
энергетический щит, неограниченное время (осуществление непрерывного ремонта)
и его модернизации.

Кстати общая защищенность космических кораблей в целом может быть гораздо
выше любых подвижных планетарных объектов. Защищенность зависит от средней
плотности. У морских судов (подводных или надводных) она не может быть больше
плотности воды, а у танков она еще никогда не превышала 10 т/куб.м..
У космических же кораблей этот показатель может достигать гораздо больших
величин, т.к. единственное ограничение - гравитационное сжатие - начинает
проявляться только при сверхбольших массах и очень малых радиусах корпуса.
Шарообразная форма корпуса межпланетного корабля также намного выгоднее в
плане защиты, чем параллелепипеды корпусов танков и надводных кораблей или
цилиндры прочных корпусов подводных лодок.
Скорее всего корпусов будет два. Внутренний прочный шарообразный корпус на
основе объекта 3-го прядка будет содержать все вышеперечисленные блоки.
Внешнему, легкому корпусу, скорее всего будет придана форма удобная для
размещения внешних устройств сбора вещества и энергии. Он может быть объектом
2-го порядка или даже 1-го порядка. В пространстве между корпусами могут быть
устроены ангары для мелких вспомогательных кораблей, оборонительные системы
ближнего действия (в качестве оборонительно-наступательной системы дальнего
действия можно использовать сам двигатель корабля - мощный сфокусированный
реактивный поток элементарных частиц, ионов или атомов - чем не сверхмощное
энергетическое оружие), хранилища вещества низкой плотности для аккумулятора
ресурсов и т.п..

Так как все блоки очень сложны по устройству, то в случае поломки сроки
ремонта могут сильно затянуться. Поэтому, учитывая жизненную важность блоков,
следует обязательно иметь их копии. Пока блок ремонтируется, работает копия.
Исключениями являются мозг и корпус, для которых невозможно сделать копии в
полном объеме. Решением проблемы в этом случае может послужить повышение их
запаса прочности. И конечно же блоки должны размещаться в изолированных
отсеках, отделенных один от другого прочными переборками.

Мы рассмотрели лишь основные модули корабля и их особенности. За пределами
нашего краткого обзора остались такие интереснейшие темы как: совместное
использование механизма энергетической защиты и регулирования "прозрачности"
корпуса корабля для прямого прохождения сквозь него материальных объектов;
использование недавно открытого "близнецового" эффекта (когда состояния
одновременно рожденных и абсолютно одинаковых элементарных частиц оказываются
связанными друг с другом) для выхода на качественно новый уровень защиты,
создания высокоточного избирательного энергетического оружия и многих других
целей; использование искусственного гравитационного коллапса в двигателе
корабля; ....и многое другое. Однако эти мысли оказались чересчур смелыми,
граничащими с явной выдумкой, отчего и оказались "за бортом". Но кто знает,
может быть через некоторое время развитие научно-технического прогресса
позволит заговорить об этих идеях всерьез.

Линейные размеры корабля по прочному корпусу могут достигать нескольких
километров, а масса сравнима с массой малых спутников планет-гигантов. Такие
размеры и массы просто поражают, когда вспоминаешь человека - вот ведь какой
он маленький, а тоже как-никак объект 3-го порядка, да еще во 2-й
модификации.
Не является ли межпланетный корабль стиля космических астроинженерных
колоссов Циолковского, О'Нейла и других мыслителей-космистов, порождением
гигантомании, продолжением серии Вавилонских башен, сверхлинкоров 2-й мировой
и т.п. материальных воплощений мании величия?
Используя полноизотопную конструкцию объекта 3-го порядка можно резко
сократить его размеры и массу. При этом сложность его устройства может быть
чрезвычайно высока, поскольку использование в качестве элементарных
логических элементов отдельных атомов создает фантастическую плотность
"упаковки", многократно превосходящую аналогичный показатель нейронов мозга.
Дальнейшее развитие науки сделает реальностью проведение молекулярной сборки
и ядерных превращений в незначительных по объему устройствах. Маленькому
объекту 3-го порядка не нужно больших потоков вещества и энергии,
следовательно отпадает необходимость в гигантских индустриальных комплексах и
синтезаторах элементов - счет вещества ведется не на тонны, а на считанные
атомы. Эффект масштаба также играет в пользу миниатюрного объекта 3-го
порядка. Размеры такого сверхмалого кораблика не превысят нескольких
миллиметров, такой же маленькой будет и его масса. Но тем не менее - это
полноценный объект 3-го порядка. Конечно он вряд ли сможет совершить
межзвездный перелет или оказывать влияние на целые планеты и звезды. Но зачем
это нужно? Масштабируемость универсального интерфейса открывает возможность
работы на молекулярно-атомном уровне, не затрагивая макромир. Так зачем же
тогда весь этот гигантизм?

Для ответа на вопрос следует вспомнить про преемственность объектов 3-го
порядка (см. <a href="#75">"7.5. Преемственность объектов"</a>), неразрушающей цели и объектах
4-го порядка. В атомных масштабах объект класса 3.3 вряд ли будет намного
эффективнее 3.2, если не наоборот. Неразрушающая цель обязана охватывать всю
Вселенную, следовательно объект 3-го порядка с такой целью будет неуклонно
эволюционировать по пути наращивания своих масштабов и масштабов своего
влияния. Объекту 4-го порядка также желательны большие пространственно-
временные масштабы объекта класса 3.3.2, чтобы как можно сильнее повлиять на
Вселенную. А это затруднительно при малоразвитом объекте 3-го порядка.
Следовательно объект класса 3.3.x не может быть маленьким. Огромная величина
межпланетного корабля кажется такой лишь на фоне земных образцов техники.
Для космоса это нормально и более того, оптимально.
Миниатюрные же размеры человека объясняются его крайне низкой автономностью,
"одноразовостью" конструкции, простотой по сравнению с кораблем и рядом
других причин.

Вот такой межпланетный корабль. Он способен существовать и развиваться в
любой звездной системе: простой или кратной, с планетами и без. Корабль
межпланетного класса - это апофеоз развития техники. Максимум того, что можно
достичь использованием законов физики, без постоянного привлечения объектов
4-го порядка для поддержания работоспособности корабля (поскольку в принципе
все блоки межпланетного корабля могут функционировать и в отсутствии влияния
объекта 4-го порядка. Неиспользование альтернативного мира лишь снижает общие
возможности корабля, а не сводит их на нет).

Но межпланетный корабль не годится на роль корабля межзвездного - звездолета.
Основная причина заключена в невозможности активного полета в межзвездном
пространстве, т.к. в нем содержится очень мало вещества, что не дает
возможности включения прямоточного режима двигателя. Аккумулятор же ресурсов
способен поддерживать его работу лишь ограниченное время. В результате этого
нет возможности радикально изменить курс или вообще вернуться обратно -
теряется автономность по движению. Теряется также автономность по энергии и
веществу. Поэтому межпланетный корабль способен только на пассивный
межзвездный перелет и не может существовать в открытой межзвездной среде
неограниченное время. Серьезным ограничением является также и его
максимальная скорость, в любом случае меньшая скорости света. Очевидно что
для превращения в звездолет нужно использовать что-то принципиально новое.
Этим новым станет объект 4-го порядка с очень высоким уровнем, а сам корабль
перейдет к последней модификации объекта класса 3.3. Звездолет - это объект
класса 3.3.3, в отличие от межпланетного корабля - объекта класса 3.3.2.

Что же даст возникшее управляемое поле вероятности? Оно поможет решить
проблему автономности по движению и веществу с энергией. Можно предположить
такой вариант: поле увеличивает вероятность спонтанного появления
элементарных частиц из физического вакуума, что решает проблему с веществом и
энергией в открытом космосе, а значит и с произвольным движением. Вполне
возможно также, что используя тоже самое поле вероятности можно настолько
сильно изменить структуру Вселенной в окружающей звездолет области, что в ней
станут возможными перемещения со сверхсветовой скоростью. Все это открывает
путь к межзвездным перелетам за время, когда пункт назначения еще не успевает
заметно состариться. Можно использовать звездолет и в качестве машины времени
(см. <a href="#93">"9.3. Время. Квазирекурсия в средах существования объектов класса 3.3"</a>).
Таким образом у звездолета нет двигателя в привычном понимании этого слова.
Его двигатель - его душа: объект 4-го порядка сверхвысокого уровня. Лишившись
его, звездолет превращается в обычный межпланетный корабль.
Если при росте могущества межпланетный корабль постепенно превращается в
звездолет, то максимальные размеры, масса и уровень (как объектов 3-го
порядка) звездолетов уже ничем не ограничены. Однако, вероятно, свой оптимум
есть и у звездолетов (подробнее про оптимумы - глобальные закономерности -
см. <a href="#75">"7.5. Преемственность объектов"</a>).

Кроме межпланетных кораблей и звездолетов стоит выделить также орбитальные
корабли, стоящие ступенью ниже межпланетных. Их основное назначение -
выполнение узкого круга задач. Это специализированные корабли в отличие от
своих более старших универсальных собратьев. В частности корабли-сборщики,
находящиеся в составе межпланетного корабля, являются орбитальными кораблями.
Ограниченный круг возлагаемых на них задач позволяет значительно упростить
их конструкцию, в которой могут отсутствовать большинство блоков
межпланетного корабля. Так как большинство орбитальных кораблей неразрывно
связано с межпланетными кораблями или другими обеспечивающими их комплексами,
то из них можно убрать к примеру такие сложные блоки, как синтезатор
элементов и производственный комплекс полного цикла. Но порядок орбитальных
кораблей скорее всего все-таки в большинстве случаев будет равен 3-м (в
основном 3.2, реже 3.1 или 3.3), т.к. его уменьшение до уровня объекта 2-го
порядка может привести к недопустимому ухудшению эксплуатационных
характеристик (прежде всего в смысле надежности). Это характерно даже сейчас,
когда сложность орбитальных кораблей не идет ни в какое сравнение с кораблями
будущего. Без экипажа на борту, устраняющего неполадки, нормальное
функционирование станции "Альфа", к примеру, вообще нереально.

Цель кораблей различна: у орбитальных она определяется назначением, у
межпланетных и звездолетов - объектом 4-го порядка. И уж, конечно, в любом
случае она не будет сводиться к перевозке груза. Звездолетам, возможно,
предстоит сыграть особую роль во Вселенной - в результате наличия сильного
управляемого поля вероятности они в принципе могут "повернуть вспять" ход
истории - уменьшить непрерывный рост количества тяжелых элементов в космосе,
а может и вообще снизить их количество. В результате чего Вселенная станет
"вечной" - запасы легких элементов для термоядерного синтеза в звездах
никогда не истощатся.


                   <a name="112">11.2. Что день грядущий нам готовит?</a>

Так представляются космические корабли будущего - основные кирпичики
цивилизации 4-го порядка. Как видите, такая цивилизация радикальным образом
отличается от всего того что было и есть на Земле. С уверенностью можно
сказать что никаких "звездных королей", "галактических империй" и прочего
бреда в стиле "фэнтези", гипертрофированного варианта средневековья, одетого
в современные одежды прошлого, не будет и в помине. То же и с проблемой
инопланетян - зеленые аналоги людей на летающих тарелках такая же выдумка.
Настоящие цивилизации 4-го порядка если и существуют, то они гораздо "круче".
И естественно высокоуровневые объекты 4-го порядка никогда не опустятся до
воплощения идей "завоевывания" Земли, "торговли рабами" и т.п. чепухи.

Что касается цивилизаций 5-го порядка, то тут пока нельзя сказать ничего
определенного. Вполне возможно что в нашей Вселенной вообще никогда не будет
таких цивилизаций, а максимальный порядок объектов соответственно не
превысит 4-х.

А что же будет с человеком в цивилизации 4-го порядка, а найдется ли ему
место в мире могучих кораблей и сверхвысокоуровневых объектов 4-го порядка?
Безусловно да. Но он перетерпит превращения - заменит свое природное тело на
искусственно созданный объект 3-го порядка. Возможно оно будет напоминать
свой прототип, а возможно будет совсем другим, например орбитальным
кораблем (на роль управления межпланетным кораблем низкоуровневая душа
человека явно не тянет). Но как бы там ни было, новое тело будет гораздо
совершеннее прежнего. Неограниченный срок его существования позволит воочию
увидеть эволюцию Солнца и Солнечной системы, путешествовать к далеким мирам
или же просто что-то делать в свое удовольствие, мирно вращаясь по орбите.
Некоторые люди, возможно, не захотят расставаться с "самим собой". Для них
можно создать специальные базы на основе объектов 3-го порядка, условия в
которых позволят значительно уменьшить риск попадания в несчастные случаи,
а также разместить оборудование "вечной молодости". Такие базы могут быть
и орбитальными кораблями, так что их поселенцы смогут путешествовать.
Биосфера же Земли, освободившись от вредного производства и нещадной
эксплуатации "царями природы", вернется в свое первозданное состояние и тихо
просуществует еще многие сотни миллионов лет до своего логического
завершения, когда Солнце окончательно потухнет (в фазе красного гиганта,
думается, найдутся возможности для "поднятия" Земли на более высокую орбиту
в целях сохранения приемлемой температуры поверхности и атмосферы, а в фазе
белого карлика наоборот, "опустить"), а Земля остынет и станет похожей на
ледяные луны планет-гигантов.

В конце этой главы следует остановится на одном важном обстоятельстве.
Раз уж мы взяли за основу мультиобъектную прорелигиозную модель мира, то
не можем не поднять тему борьбы добра и зла. Почему-то все считают что
добро и зло почти равномощны, но добро немного сильнее (оттого оно постоянно
и побеждает в последний момент). Но ни в одном первоисточнике про это не
сказано явно! Скорее всего все как раз наоборот. Злые объекты высших порядков
- это не половина, а бесконечно малая часть существующего (скорее всего
удельный вес злых объектов высших порядков резко снижается при повышении
порядка объектов и их уровней). Исключение, а не правило.
Наблюдаемое же нами противостояние как раз и показывает всю порочность и
тупиковость их конструкции. Добро даже в искусственно сильно ослабленном
виде, в условиях тотального засилья зла, в конечном итоге оказывается
сильнее. В цивилизации же 4-го порядка, когда независимость индивидуумов и
уровни объектов 4-го порядка резко возрастут, а правдивости в знании
устройства мира станет гораздо больше вымысла, злу уже просто не останется
места для своего тлетворного влияния (вспомним: уже на уровне корабля
межпланетного класса маленькому злому объекту 4-го порядка делать нечего).
Так что боятся будущего в этом смысле совершенно не нужно. На этой
оптимистической ноте и закончим.



==============================================================================



                          ───────────────────────



                               <a name="12">12. Заключение</a>

Ну вот и все. Документ практически завершен. И хотя первоначальной целью
было описание технической стороны нового подхода к созданию ИИ, "лирики" в
нем гораздо больше "физики". В первую очередь это вызвано тем, что многие
относятся к проблеме ИИ как к своего рода ветви информатики. Поэтому и было
решено показать что ИИ - это не маленький подраздел некой скажем так
"полунауки", а нечто большее, гораздо большее. Естественно что на пустом
месте доказать это невозможно, что и вызвало появление 2-й части интегральной
теории.
Важно было заинтересовать людей этой проблемой, показать что это касается
каждого. Отсюда и множество хвалебных строк в адрес ИИ. Нет, ИИ - не панацея.
Он не сможет излечить социальные недуги нашего общества и сделать злых людей
добрыми. Но ему под силу таким образом изменить общество, что некоторые
отрицательные его стороны сильно ослабнут, а другие - исчезнут вовсе.
Ведь ИИ - пик научно-технического прогресса. Абсолютный максимум того, что он
сможет дать в будущем. А уже одно только это что-то, да значит.
Даже если все что было написано выше совершенно неверно, все равно не нужно
опускать руки. Успеха добивается лишь тот, кто к нему стремится. Нужно именно
стремиться, искать новые пути создания ИИ, а не топтаться на одном месте,
прозябая в догмах и оставаясь в плену стереотипов.
ИИ не сделали не потому что он сложный, а потому что он ДРУГОЙ. Другой чем
обычные программы, чем генетические алгоритмы, чем нейронные сети. Ибо все
они - порождение старой идеи палки-копалки, плуга и т.п. усилителей человека.
А ИИ - его заменитель, а не усилитель. И создавать его нужно, основываясь на
совершенно другом теоретическом фундаменте, непохожим на фундамент теории
алгоритмов, но являющимся его надмножеством.
ИИ действительно стоит того, чтобы тратить силы и время на его создание.
А во-вторых, как и любое принципиально новое направление в естествознании,
ароморфоз, ИИ невозможно описать исчерпывающе и правильно с самого начала.
Ошибки и неточности неизбежны. Важно только чтобы они носили
непринципиальный характер. Поэтому в техническом описании мало формул,
конкретных примеров ИИ и т.п., оно носит качественный характер. Однако,
учитывая глобальный характер проблемы ИИ, даже такое описание возможно
только в случае совместного рассмотрения ИИ и других объектов нашего мира.
Без этого невозможно понять что может ИИ, а что нет. Определить возможные
пути его развития, его роль в развитии нашей цивилизации.
А это очень важно, т.к. объект 3-го порядка, и особенно класса 3.3, коварная
штука - малейшие неточности в построении цели, непонимание его взаимодействия
с другими объектами (и не только 3-го порядка!) и т.п., как минимум приводят
к бесполезной трате времени и сил, а как максимум к глобальным негативным
изменениям в нашем с вами мире, последствия которых трудно оценить, но еще
труднее - исправить.

Возможно многие не поверят в реальность проекта. Но факты - упрямая вещь:

- Людям, независимо от их пола, возраста, национальности, социального
  положения и пр., нужно бессмертие и абсолютная защита от болезней.
- Глобальные проблемы человечества не решаются уже много лет и путей
  решения не видно.

Создается впечатление что это не просто отдельные локальные задачи.
Это целый класс похожих проблем. И метод их решения также должен носить
универсальный характер. Поодиночке они просто неразрешимы (что каждый день
доказывается практически - время идет, а толку нет). Нужен комплексный
принципиально новый подход, глобальный взгляд в целом, но который в тоже
время был бы более детальнее и глубже существующих точек зрения. Сейчас
наступает "золотое" время для создания ИИ - накоплен уже достаточный багаж
знаний по этой области чтобы избежать "детских" ошибок, имеется огромный
задел по микроэлектронике, микромеханике, генетике и множеству других ветвей
прогресса. Еще несколько десятилетий назад все это находилось в зачаточном
состоянии. Не хватает только одного - ключевой идеи, способной пролить свет
на проблему ИИ. Вполне возможно что идея эта сравнительно проста. Ведь
известно что все гениальное просто. Мозг - вне всякого сомнения гениальное
произведение природы.

Кроме всего этого, ИИ обладает еще одним весьма важным преимуществом по
сравнению с другими объектами, когда-либо создававшимися человеком. Его
способность к самомодификации можно использовать при создании все более
совершенных образцов. Это означает что "своими силами" нужно создать только
первый искусственный разум. Затем останется только "подкармливать" его новыми
идеями и изобретениями. Всю остальную рутинную работу по саморазвитию и
созданию себе подобных он будет выполнять самостоятельно. Даже денежные
средства (если таковые вообще будут нужны) он сможет зарабатывать сам,
выполняя различные интеллектуальные работы не требующие изобретательства.
Такой подход позволит сильно уменьшить потребность разработчиков ИИ в
посторонней помощи. А проект создания ИИ в целом будет намного дешевле и
доступнее, чем это кажется сегодня.

Возможно что ИИ и не является этим универсальным инструментом, но на
сегодня просто нет других равносильных вариантов. Это серьезный довод
в пользу широкомасштабного развертывания работ по созданию ИИ.
Все сильно осложняется тем что бессмертие и др. нужно уже сегодня, сейчас.
Времени для почивания на лаврах уже попросту нет. Мы - первое поколение
землян у которых появилась реальная возможность хоть что-то сделать. Не
воспользоваться этим шансом - величайшая глупость. Это и придает уверенности
в том что проект будет реализован, ведь ничто так сильно не объединяет людей
как общая цель.



==============================================================================

                                   КОНЕЦ !
</pre>
</html>
